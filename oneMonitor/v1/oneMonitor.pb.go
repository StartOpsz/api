// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.14.0
// source: oneMonitor/v1/oneMonitor.proto

package v1

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//
type PrometheusServiceDiscoveryInstance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Targets []string          `protobuf:"bytes,1,rep,name=targets,proto3" json:"targets,omitempty"`
	Labels  map[string]string `protobuf:"bytes,2,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *PrometheusServiceDiscoveryInstance) Reset() {
	*x = PrometheusServiceDiscoveryInstance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneMonitor_v1_oneMonitor_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrometheusServiceDiscoveryInstance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrometheusServiceDiscoveryInstance) ProtoMessage() {}

func (x *PrometheusServiceDiscoveryInstance) ProtoReflect() protoreflect.Message {
	mi := &file_oneMonitor_v1_oneMonitor_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrometheusServiceDiscoveryInstance.ProtoReflect.Descriptor instead.
func (*PrometheusServiceDiscoveryInstance) Descriptor() ([]byte, []int) {
	return file_oneMonitor_v1_oneMonitor_proto_rawDescGZIP(), []int{0}
}

func (x *PrometheusServiceDiscoveryInstance) GetTargets() []string {
	if x != nil {
		return x.Targets
	}
	return nil
}

func (x *PrometheusServiceDiscoveryInstance) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

// 创建组织内产品Token
type CreateMonitorAccessTokenReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserUuid       string `protobuf:"bytes,1,opt,name=userUuid,proto3" json:"userUuid,omitempty"`
	OrgUuid        string `protobuf:"bytes,2,opt,name=orgUuid,proto3" json:"orgUuid,omitempty"`
	ProductUuid    string `protobuf:"bytes,3,opt,name=productUuid,proto3" json:"productUuid,omitempty"`
	ProductEnvUuid string `protobuf:"bytes,4,opt,name=productEnvUuid,proto3" json:"productEnvUuid,omitempty"`
	Describe       string `protobuf:"bytes,5,opt,name=describe,proto3" json:"describe,omitempty"`
}

func (x *CreateMonitorAccessTokenReq) Reset() {
	*x = CreateMonitorAccessTokenReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneMonitor_v1_oneMonitor_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMonitorAccessTokenReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMonitorAccessTokenReq) ProtoMessage() {}

func (x *CreateMonitorAccessTokenReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneMonitor_v1_oneMonitor_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMonitorAccessTokenReq.ProtoReflect.Descriptor instead.
func (*CreateMonitorAccessTokenReq) Descriptor() ([]byte, []int) {
	return file_oneMonitor_v1_oneMonitor_proto_rawDescGZIP(), []int{1}
}

func (x *CreateMonitorAccessTokenReq) GetUserUuid() string {
	if x != nil {
		return x.UserUuid
	}
	return ""
}

func (x *CreateMonitorAccessTokenReq) GetOrgUuid() string {
	if x != nil {
		return x.OrgUuid
	}
	return ""
}

func (x *CreateMonitorAccessTokenReq) GetProductUuid() string {
	if x != nil {
		return x.ProductUuid
	}
	return ""
}

func (x *CreateMonitorAccessTokenReq) GetProductEnvUuid() string {
	if x != nil {
		return x.ProductEnvUuid
	}
	return ""
}

func (x *CreateMonitorAccessTokenReq) GetDescribe() string {
	if x != nil {
		return x.Describe
	}
	return ""
}

type CreateMonitorAccessTokenReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *CreateMonitorAccessTokenReply) Reset() {
	*x = CreateMonitorAccessTokenReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneMonitor_v1_oneMonitor_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMonitorAccessTokenReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMonitorAccessTokenReply) ProtoMessage() {}

func (x *CreateMonitorAccessTokenReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneMonitor_v1_oneMonitor_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMonitorAccessTokenReply.ProtoReflect.Descriptor instead.
func (*CreateMonitorAccessTokenReply) Descriptor() ([]byte, []int) {
	return file_oneMonitor_v1_oneMonitor_proto_rawDescGZIP(), []int{2}
}

func (x *CreateMonitorAccessTokenReply) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

type ListMonitorAccessTokenReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserUuid       string `protobuf:"bytes,1,opt,name=userUuid,proto3" json:"userUuid,omitempty"`
	OrgUuid        string `protobuf:"bytes,2,opt,name=orgUuid,proto3" json:"orgUuid,omitempty"`
	ProductUuid    string `protobuf:"bytes,3,opt,name=productUuid,proto3" json:"productUuid,omitempty"`
	ProductEnvUuid string `protobuf:"bytes,4,opt,name=productEnvUuid,proto3" json:"productEnvUuid,omitempty"`
}

func (x *ListMonitorAccessTokenReq) Reset() {
	*x = ListMonitorAccessTokenReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneMonitor_v1_oneMonitor_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMonitorAccessTokenReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMonitorAccessTokenReq) ProtoMessage() {}

func (x *ListMonitorAccessTokenReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneMonitor_v1_oneMonitor_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMonitorAccessTokenReq.ProtoReflect.Descriptor instead.
func (*ListMonitorAccessTokenReq) Descriptor() ([]byte, []int) {
	return file_oneMonitor_v1_oneMonitor_proto_rawDescGZIP(), []int{3}
}

func (x *ListMonitorAccessTokenReq) GetUserUuid() string {
	if x != nil {
		return x.UserUuid
	}
	return ""
}

func (x *ListMonitorAccessTokenReq) GetOrgUuid() string {
	if x != nil {
		return x.OrgUuid
	}
	return ""
}

func (x *ListMonitorAccessTokenReq) GetProductUuid() string {
	if x != nil {
		return x.ProductUuid
	}
	return ""
}

func (x *ListMonitorAccessTokenReq) GetProductEnvUuid() string {
	if x != nil {
		return x.ProductEnvUuid
	}
	return ""
}

type ListMonitorAccessTokenReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MonitorAccessTokens []*ListMonitorAccessTokenReply_MonitorAccessToken `protobuf:"bytes,1,rep,name=monitorAccessTokens,proto3" json:"monitorAccessTokens,omitempty"`
}

func (x *ListMonitorAccessTokenReply) Reset() {
	*x = ListMonitorAccessTokenReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneMonitor_v1_oneMonitor_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMonitorAccessTokenReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMonitorAccessTokenReply) ProtoMessage() {}

func (x *ListMonitorAccessTokenReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneMonitor_v1_oneMonitor_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMonitorAccessTokenReply.ProtoReflect.Descriptor instead.
func (*ListMonitorAccessTokenReply) Descriptor() ([]byte, []int) {
	return file_oneMonitor_v1_oneMonitor_proto_rawDescGZIP(), []int{4}
}

func (x *ListMonitorAccessTokenReply) GetMonitorAccessTokens() []*ListMonitorAccessTokenReply_MonitorAccessToken {
	if x != nil {
		return x.MonitorAccessTokens
	}
	return nil
}

type DelMonitorAccessTokenReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserUuid       string `protobuf:"bytes,1,opt,name=userUuid,proto3" json:"userUuid,omitempty"`
	OrgUuid        string `protobuf:"bytes,2,opt,name=orgUuid,proto3" json:"orgUuid,omitempty"`
	ProductUuid    string `protobuf:"bytes,3,opt,name=productUuid,proto3" json:"productUuid,omitempty"`
	ProductEnvUuid string `protobuf:"bytes,4,opt,name=productEnvUuid,proto3" json:"productEnvUuid,omitempty"`
	Uuid           string `protobuf:"bytes,5,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *DelMonitorAccessTokenReq) Reset() {
	*x = DelMonitorAccessTokenReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneMonitor_v1_oneMonitor_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelMonitorAccessTokenReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelMonitorAccessTokenReq) ProtoMessage() {}

func (x *DelMonitorAccessTokenReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneMonitor_v1_oneMonitor_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelMonitorAccessTokenReq.ProtoReflect.Descriptor instead.
func (*DelMonitorAccessTokenReq) Descriptor() ([]byte, []int) {
	return file_oneMonitor_v1_oneMonitor_proto_rawDescGZIP(), []int{5}
}

func (x *DelMonitorAccessTokenReq) GetUserUuid() string {
	if x != nil {
		return x.UserUuid
	}
	return ""
}

func (x *DelMonitorAccessTokenReq) GetOrgUuid() string {
	if x != nil {
		return x.OrgUuid
	}
	return ""
}

func (x *DelMonitorAccessTokenReq) GetProductUuid() string {
	if x != nil {
		return x.ProductUuid
	}
	return ""
}

func (x *DelMonitorAccessTokenReq) GetProductEnvUuid() string {
	if x != nil {
		return x.ProductEnvUuid
	}
	return ""
}

func (x *DelMonitorAccessTokenReq) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type DelMonitorAccessTokenReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *DelMonitorAccessTokenReply) Reset() {
	*x = DelMonitorAccessTokenReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneMonitor_v1_oneMonitor_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelMonitorAccessTokenReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelMonitorAccessTokenReply) ProtoMessage() {}

func (x *DelMonitorAccessTokenReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneMonitor_v1_oneMonitor_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelMonitorAccessTokenReply.ProtoReflect.Descriptor instead.
func (*DelMonitorAccessTokenReply) Descriptor() ([]byte, []int) {
	return file_oneMonitor_v1_oneMonitor_proto_rawDescGZIP(), []int{6}
}

func (x *DelMonitorAccessTokenReply) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

// 验证 MonitorAccessToken 是否存在
type ExistMonitorAccessTokenReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgUuid        string `protobuf:"bytes,1,opt,name=orgUuid,proto3" json:"orgUuid,omitempty"`
	ProductUuid    string `protobuf:"bytes,2,opt,name=productUuid,proto3" json:"productUuid,omitempty"`
	ProductEnvUuid string `protobuf:"bytes,3,opt,name=productEnvUuid,proto3" json:"productEnvUuid,omitempty"`
	MonitorToken   string `protobuf:"bytes,4,opt,name=monitorToken,proto3" json:"monitorToken,omitempty"`
}

func (x *ExistMonitorAccessTokenReq) Reset() {
	*x = ExistMonitorAccessTokenReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneMonitor_v1_oneMonitor_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistMonitorAccessTokenReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistMonitorAccessTokenReq) ProtoMessage() {}

func (x *ExistMonitorAccessTokenReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneMonitor_v1_oneMonitor_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistMonitorAccessTokenReq.ProtoReflect.Descriptor instead.
func (*ExistMonitorAccessTokenReq) Descriptor() ([]byte, []int) {
	return file_oneMonitor_v1_oneMonitor_proto_rawDescGZIP(), []int{7}
}

func (x *ExistMonitorAccessTokenReq) GetOrgUuid() string {
	if x != nil {
		return x.OrgUuid
	}
	return ""
}

func (x *ExistMonitorAccessTokenReq) GetProductUuid() string {
	if x != nil {
		return x.ProductUuid
	}
	return ""
}

func (x *ExistMonitorAccessTokenReq) GetProductEnvUuid() string {
	if x != nil {
		return x.ProductEnvUuid
	}
	return ""
}

func (x *ExistMonitorAccessTokenReq) GetMonitorToken() string {
	if x != nil {
		return x.MonitorToken
	}
	return ""
}

type ExistMonitorAccessTokenReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *ExistMonitorAccessTokenReply) Reset() {
	*x = ExistMonitorAccessTokenReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneMonitor_v1_oneMonitor_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistMonitorAccessTokenReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistMonitorAccessTokenReply) ProtoMessage() {}

func (x *ExistMonitorAccessTokenReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneMonitor_v1_oneMonitor_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistMonitorAccessTokenReply.ProtoReflect.Descriptor instead.
func (*ExistMonitorAccessTokenReply) Descriptor() ([]byte, []int) {
	return file_oneMonitor_v1_oneMonitor_proto_rawDescGZIP(), []int{8}
}

func (x *ExistMonitorAccessTokenReply) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

// WebService Resource Prometheus Service Discovery
type PrometheusWebResourceDiscoveryReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgUuid        string `protobuf:"bytes,1,opt,name=orgUuid,proto3" json:"orgUuid,omitempty"`
	ProductUuid    string `protobuf:"bytes,2,opt,name=productUuid,proto3" json:"productUuid,omitempty"`
	ProductEnvUuid string `protobuf:"bytes,3,opt,name=productEnvUuid,proto3" json:"productEnvUuid,omitempty"`
	Token          string `protobuf:"bytes,4,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *PrometheusWebResourceDiscoveryReq) Reset() {
	*x = PrometheusWebResourceDiscoveryReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneMonitor_v1_oneMonitor_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrometheusWebResourceDiscoveryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrometheusWebResourceDiscoveryReq) ProtoMessage() {}

func (x *PrometheusWebResourceDiscoveryReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneMonitor_v1_oneMonitor_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrometheusWebResourceDiscoveryReq.ProtoReflect.Descriptor instead.
func (*PrometheusWebResourceDiscoveryReq) Descriptor() ([]byte, []int) {
	return file_oneMonitor_v1_oneMonitor_proto_rawDescGZIP(), []int{9}
}

func (x *PrometheusWebResourceDiscoveryReq) GetOrgUuid() string {
	if x != nil {
		return x.OrgUuid
	}
	return ""
}

func (x *PrometheusWebResourceDiscoveryReq) GetProductUuid() string {
	if x != nil {
		return x.ProductUuid
	}
	return ""
}

func (x *PrometheusWebResourceDiscoveryReq) GetProductEnvUuid() string {
	if x != nil {
		return x.ProductEnvUuid
	}
	return ""
}

func (x *PrometheusWebResourceDiscoveryReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type PrometheusWebResourceDiscoveryReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Instances []*PrometheusServiceDiscoveryInstance `protobuf:"bytes,1,rep,name=Instances,proto3" json:"Instances,omitempty"`
}

func (x *PrometheusWebResourceDiscoveryReply) Reset() {
	*x = PrometheusWebResourceDiscoveryReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneMonitor_v1_oneMonitor_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrometheusWebResourceDiscoveryReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrometheusWebResourceDiscoveryReply) ProtoMessage() {}

func (x *PrometheusWebResourceDiscoveryReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneMonitor_v1_oneMonitor_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrometheusWebResourceDiscoveryReply.ProtoReflect.Descriptor instead.
func (*PrometheusWebResourceDiscoveryReply) Descriptor() ([]byte, []int) {
	return file_oneMonitor_v1_oneMonitor_proto_rawDescGZIP(), []int{10}
}

func (x *PrometheusWebResourceDiscoveryReply) GetInstances() []*PrometheusServiceDiscoveryInstance {
	if x != nil {
		return x.Instances
	}
	return nil
}

type ListMonitorAccessTokenReply_MonitorAccessToken struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid       string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Token      string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	Describe   string `protobuf:"bytes,3,opt,name=describe,proto3" json:"describe,omitempty"`
	CreateTime int64  `protobuf:"varint,4,opt,name=createTime,proto3" json:"createTime,omitempty"`
}

func (x *ListMonitorAccessTokenReply_MonitorAccessToken) Reset() {
	*x = ListMonitorAccessTokenReply_MonitorAccessToken{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneMonitor_v1_oneMonitor_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMonitorAccessTokenReply_MonitorAccessToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMonitorAccessTokenReply_MonitorAccessToken) ProtoMessage() {}

func (x *ListMonitorAccessTokenReply_MonitorAccessToken) ProtoReflect() protoreflect.Message {
	mi := &file_oneMonitor_v1_oneMonitor_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMonitorAccessTokenReply_MonitorAccessToken.ProtoReflect.Descriptor instead.
func (*ListMonitorAccessTokenReply_MonitorAccessToken) Descriptor() ([]byte, []int) {
	return file_oneMonitor_v1_oneMonitor_proto_rawDescGZIP(), []int{4, 0}
}

func (x *ListMonitorAccessTokenReply_MonitorAccessToken) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *ListMonitorAccessTokenReply_MonitorAccessToken) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *ListMonitorAccessTokenReply_MonitorAccessToken) GetDescribe() string {
	if x != nil {
		return x.Describe
	}
	return ""
}

func (x *ListMonitorAccessTokenReply_MonitorAccessToken) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

var File_oneMonitor_v1_oneMonitor_proto protoreflect.FileDescriptor

var file_oneMonitor_v1_oneMonitor_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x6f, 0x6e, 0x65, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x2f, 0x76, 0x31, 0x2f,
	0x6f, 0x6e, 0x65, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x0d, 0x6f, 0x6e, 0x65, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x1a,
	0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd0, 0x01, 0x0a, 0x22, 0x50, 0x72, 0x6f,
	0x6d, 0x65, 0x74, 0x68, 0x65, 0x75, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x44, 0x69,
	0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x07, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x12, 0x55, 0x0a, 0x06, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x6f, 0x6e, 0x65, 0x4d,
	0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x6d, 0x65, 0x74,
	0x68, 0x65, 0x75, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x44, 0x69, 0x73, 0x63, 0x6f,
	0x76, 0x65, 0x72, 0x79, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73,
	0x1a, 0x39, 0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xdd, 0x01, 0x0a, 0x1b,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x41, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x23, 0x0a, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64,
	0x12, 0x21, 0x0a, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x07, 0x6f, 0x72, 0x67, 0x55,
	0x75, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x75,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10,
	0x01, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x2f,
	0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x45, 0x6e, 0x76, 0x55, 0x75, 0x69, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52,
	0x0e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x45, 0x6e, 0x76, 0x55, 0x75, 0x69, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x22, 0x37, 0x0a, 0x1d, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x41, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x22, 0xbf, 0x01, 0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x6f, 0x6e,
	0x69, 0x74, 0x6f, 0x72, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52,
	0x65, 0x71, 0x12, 0x23, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10,
	0x01, 0x52, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x0b, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x2f, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x45, 0x6e, 0x76, 0x55, 0x75, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x45,
	0x6e, 0x76, 0x55, 0x75, 0x69, 0x64, 0x22, 0x8a, 0x02, 0x0a, 0x1b, 0x4c, 0x69, 0x73, 0x74, 0x4d,
	0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x6f, 0x0a, 0x13, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f,
	0x72, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x6f, 0x6e, 0x65, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x41,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e,
	0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x52, 0x13, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x41, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x1a, 0x7a, 0x0a, 0x12, 0x4d, 0x6f, 0x6e, 0x69, 0x74,
	0x6f, 0x72, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x12, 0x0a,
	0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x22, 0xdb, 0x01, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x4d, 0x6f, 0x6e, 0x69, 0x74,
	0x6f, 0x72, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71,
	0x12, 0x23, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x55, 0x75, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52,
	0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x55, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55,
	0x75, 0x69, 0x64, 0x12, 0x2f, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x45, 0x6e,
	0x76, 0x55, 0x75, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x72, 0x02, 0x10, 0x01, 0x52, 0x0e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x45, 0x6e, 0x76,
	0x55, 0x75, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x04, 0x75, 0x75, 0x69,
	0x64, 0x22, 0x34, 0x0a, 0x1a, 0x44, 0x65, 0x6c, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x41,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xc8, 0x01, 0x0a, 0x1a, 0x45, 0x78, 0x69, 0x73,
	0x74, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x21, 0x0a, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01,
	0x52, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x0b, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x55, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x55, 0x75, 0x69, 0x64, 0x12, 0x2f, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x45,
	0x6e, 0x76, 0x55, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x45, 0x6e,
	0x76, 0x55, 0x75, 0x69, 0x64, 0x12, 0x2b, 0x0a, 0x0c, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x72, 0x02, 0x10, 0x01, 0x52, 0x0c, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x22, 0x36, 0x0a, 0x1c, 0x45, 0x78, 0x69, 0x73, 0x74, 0x4d, 0x6f, 0x6e, 0x69, 0x74,
	0x6f, 0x72, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xc1, 0x01, 0x0a, 0x21, 0x50,
	0x72, 0x6f, 0x6d, 0x65, 0x74, 0x68, 0x65, 0x75, 0x73, 0x57, 0x65, 0x62, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71,
	0x12, 0x21, 0x0a, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x07, 0x6f, 0x72, 0x67, 0x55,
	0x75, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x75,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10,
	0x01, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x2f,
	0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x45, 0x6e, 0x76, 0x55, 0x75, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52,
	0x0e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x45, 0x6e, 0x76, 0x55, 0x75, 0x69, 0x64, 0x12,
	0x1d, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x76,
	0x0a, 0x23, 0x50, 0x72, 0x6f, 0x6d, 0x65, 0x74, 0x68, 0x65, 0x75, 0x73, 0x57, 0x65, 0x62, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x4f, 0x0a, 0x09, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x6f, 0x6e, 0x65, 0x4d, 0x6f,
	0x6e, 0x69, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x6d, 0x65, 0x74, 0x68,
	0x65, 0x75, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76,
	0x65, 0x72, 0x79, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x09, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x32, 0xdb, 0x04, 0x0a, 0x0a, 0x4f, 0x6e, 0x65, 0x4d, 0x6f,
	0x6e, 0x69, 0x74, 0x6f, 0x72, 0x12, 0x74, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d,
	0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x2a, 0x2e, 0x6f, 0x6e, 0x65, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x41,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x2c, 0x2e,
	0x6f, 0x6e, 0x65, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x41, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x6e, 0x0a, 0x16, 0x4c,
	0x69, 0x73, 0x74, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x28, 0x2e, 0x6f, 0x6e, 0x65, 0x4d, 0x6f, 0x6e, 0x69, 0x74,
	0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f,
	0x72, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x1a,
	0x2a, 0x2e, 0x6f, 0x6e, 0x65, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x41, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x6b, 0x0a, 0x15, 0x44,
	0x65, 0x6c, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x27, 0x2e, 0x6f, 0x6e, 0x65, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x41,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x29, 0x2e,
	0x6f, 0x6e, 0x65, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65,
	0x6c, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x71, 0x0a, 0x17, 0x45, 0x78, 0x69, 0x73,
	0x74, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x12, 0x29, 0x2e, 0x6f, 0x6e, 0x65, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72,
	0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x2b,
	0x2e, 0x6f, 0x6e, 0x65, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x45,
	0x78, 0x69, 0x73, 0x74, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x41, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x86, 0x01, 0x0a, 0x1e,
	0x50, 0x72, 0x6f, 0x6d, 0x65, 0x74, 0x68, 0x65, 0x75, 0x73, 0x57, 0x65, 0x62, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x12, 0x30,
	0x2e, 0x6f, 0x6e, 0x65, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x72, 0x6f, 0x6d, 0x65, 0x74, 0x68, 0x65, 0x75, 0x73, 0x57, 0x65, 0x62, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71,
	0x1a, 0x32, 0x2e, 0x6f, 0x6e, 0x65, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x50, 0x72, 0x6f, 0x6d, 0x65, 0x74, 0x68, 0x65, 0x75, 0x73, 0x57, 0x65, 0x62, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x42, 0x36, 0x5a, 0x34, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x6f, 0x70, 0x73, 0x7a, 0x2f, 0x6f, 0x6e, 0x65,
	0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6f, 0x6e, 0x65, 0x4d,
	0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_oneMonitor_v1_oneMonitor_proto_rawDescOnce sync.Once
	file_oneMonitor_v1_oneMonitor_proto_rawDescData = file_oneMonitor_v1_oneMonitor_proto_rawDesc
)

func file_oneMonitor_v1_oneMonitor_proto_rawDescGZIP() []byte {
	file_oneMonitor_v1_oneMonitor_proto_rawDescOnce.Do(func() {
		file_oneMonitor_v1_oneMonitor_proto_rawDescData = protoimpl.X.CompressGZIP(file_oneMonitor_v1_oneMonitor_proto_rawDescData)
	})
	return file_oneMonitor_v1_oneMonitor_proto_rawDescData
}

var file_oneMonitor_v1_oneMonitor_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_oneMonitor_v1_oneMonitor_proto_goTypes = []interface{}{
	(*PrometheusServiceDiscoveryInstance)(nil),  // 0: oneMonitor.v1.PrometheusServiceDiscoveryInstance
	(*CreateMonitorAccessTokenReq)(nil),         // 1: oneMonitor.v1.CreateMonitorAccessTokenReq
	(*CreateMonitorAccessTokenReply)(nil),       // 2: oneMonitor.v1.CreateMonitorAccessTokenReply
	(*ListMonitorAccessTokenReq)(nil),           // 3: oneMonitor.v1.ListMonitorAccessTokenReq
	(*ListMonitorAccessTokenReply)(nil),         // 4: oneMonitor.v1.ListMonitorAccessTokenReply
	(*DelMonitorAccessTokenReq)(nil),            // 5: oneMonitor.v1.DelMonitorAccessTokenReq
	(*DelMonitorAccessTokenReply)(nil),          // 6: oneMonitor.v1.DelMonitorAccessTokenReply
	(*ExistMonitorAccessTokenReq)(nil),          // 7: oneMonitor.v1.ExistMonitorAccessTokenReq
	(*ExistMonitorAccessTokenReply)(nil),        // 8: oneMonitor.v1.ExistMonitorAccessTokenReply
	(*PrometheusWebResourceDiscoveryReq)(nil),   // 9: oneMonitor.v1.PrometheusWebResourceDiscoveryReq
	(*PrometheusWebResourceDiscoveryReply)(nil), // 10: oneMonitor.v1.PrometheusWebResourceDiscoveryReply
	nil, // 11: oneMonitor.v1.PrometheusServiceDiscoveryInstance.LabelsEntry
	(*ListMonitorAccessTokenReply_MonitorAccessToken)(nil), // 12: oneMonitor.v1.ListMonitorAccessTokenReply.MonitorAccessToken
}
var file_oneMonitor_v1_oneMonitor_proto_depIdxs = []int32{
	11, // 0: oneMonitor.v1.PrometheusServiceDiscoveryInstance.labels:type_name -> oneMonitor.v1.PrometheusServiceDiscoveryInstance.LabelsEntry
	12, // 1: oneMonitor.v1.ListMonitorAccessTokenReply.monitorAccessTokens:type_name -> oneMonitor.v1.ListMonitorAccessTokenReply.MonitorAccessToken
	0,  // 2: oneMonitor.v1.PrometheusWebResourceDiscoveryReply.Instances:type_name -> oneMonitor.v1.PrometheusServiceDiscoveryInstance
	1,  // 3: oneMonitor.v1.OneMonitor.CreateMonitorAccessToken:input_type -> oneMonitor.v1.CreateMonitorAccessTokenReq
	3,  // 4: oneMonitor.v1.OneMonitor.ListMonitorAccessToken:input_type -> oneMonitor.v1.ListMonitorAccessTokenReq
	5,  // 5: oneMonitor.v1.OneMonitor.DelMonitorAccessToken:input_type -> oneMonitor.v1.DelMonitorAccessTokenReq
	7,  // 6: oneMonitor.v1.OneMonitor.ExistMonitorAccessToken:input_type -> oneMonitor.v1.ExistMonitorAccessTokenReq
	9,  // 7: oneMonitor.v1.OneMonitor.PrometheusWebResourceDiscovery:input_type -> oneMonitor.v1.PrometheusWebResourceDiscoveryReq
	2,  // 8: oneMonitor.v1.OneMonitor.CreateMonitorAccessToken:output_type -> oneMonitor.v1.CreateMonitorAccessTokenReply
	4,  // 9: oneMonitor.v1.OneMonitor.ListMonitorAccessToken:output_type -> oneMonitor.v1.ListMonitorAccessTokenReply
	6,  // 10: oneMonitor.v1.OneMonitor.DelMonitorAccessToken:output_type -> oneMonitor.v1.DelMonitorAccessTokenReply
	8,  // 11: oneMonitor.v1.OneMonitor.ExistMonitorAccessToken:output_type -> oneMonitor.v1.ExistMonitorAccessTokenReply
	10, // 12: oneMonitor.v1.OneMonitor.PrometheusWebResourceDiscovery:output_type -> oneMonitor.v1.PrometheusWebResourceDiscoveryReply
	8,  // [8:13] is the sub-list for method output_type
	3,  // [3:8] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_oneMonitor_v1_oneMonitor_proto_init() }
func file_oneMonitor_v1_oneMonitor_proto_init() {
	if File_oneMonitor_v1_oneMonitor_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_oneMonitor_v1_oneMonitor_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PrometheusServiceDiscoveryInstance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneMonitor_v1_oneMonitor_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateMonitorAccessTokenReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneMonitor_v1_oneMonitor_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateMonitorAccessTokenReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneMonitor_v1_oneMonitor_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMonitorAccessTokenReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneMonitor_v1_oneMonitor_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMonitorAccessTokenReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneMonitor_v1_oneMonitor_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelMonitorAccessTokenReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneMonitor_v1_oneMonitor_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelMonitorAccessTokenReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneMonitor_v1_oneMonitor_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistMonitorAccessTokenReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneMonitor_v1_oneMonitor_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistMonitorAccessTokenReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneMonitor_v1_oneMonitor_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PrometheusWebResourceDiscoveryReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneMonitor_v1_oneMonitor_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PrometheusWebResourceDiscoveryReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneMonitor_v1_oneMonitor_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMonitorAccessTokenReply_MonitorAccessToken); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_oneMonitor_v1_oneMonitor_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_oneMonitor_v1_oneMonitor_proto_goTypes,
		DependencyIndexes: file_oneMonitor_v1_oneMonitor_proto_depIdxs,
		MessageInfos:      file_oneMonitor_v1_oneMonitor_proto_msgTypes,
	}.Build()
	File_oneMonitor_v1_oneMonitor_proto = out.File
	file_oneMonitor_v1_oneMonitor_proto_rawDesc = nil
	file_oneMonitor_v1_oneMonitor_proto_goTypes = nil
	file_oneMonitor_v1_oneMonitor_proto_depIdxs = nil
}
