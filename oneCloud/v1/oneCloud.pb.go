// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.14.0
// source: oneCloud/v1/oneCloud.proto

package v1

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Platform
type ListSupportPlatformReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListSupportPlatformReq) Reset() {
	*x = ListSupportPlatformReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSupportPlatformReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSupportPlatformReq) ProtoMessage() {}

func (x *ListSupportPlatformReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSupportPlatformReq.ProtoReflect.Descriptor instead.
func (*ListSupportPlatformReq) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{0}
}

type ListSupportPlatformReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Platform []*ListSupportPlatformReply_Platform `protobuf:"bytes,1,rep,name=platform,proto3" json:"platform,omitempty"`
}

func (x *ListSupportPlatformReply) Reset() {
	*x = ListSupportPlatformReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSupportPlatformReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSupportPlatformReply) ProtoMessage() {}

func (x *ListSupportPlatformReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSupportPlatformReply.ProtoReflect.Descriptor instead.
func (*ListSupportPlatformReply) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{1}
}

func (x *ListSupportPlatformReply) GetPlatform() []*ListSupportPlatformReply_Platform {
	if x != nil {
		return x.Platform
	}
	return nil
}

// Platform
type ListPlatformReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserUuid    string `protobuf:"bytes,1,opt,name=userUuid,proto3" json:"userUuid,omitempty"`
	OrgUuid     string `protobuf:"bytes,2,opt,name=orgUuid,proto3" json:"orgUuid,omitempty"`
	ProductUuid string `protobuf:"bytes,3,opt,name=productUuid,proto3" json:"productUuid,omitempty"`
}

func (x *ListPlatformReq) Reset() {
	*x = ListPlatformReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPlatformReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPlatformReq) ProtoMessage() {}

func (x *ListPlatformReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPlatformReq.ProtoReflect.Descriptor instead.
func (*ListPlatformReq) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{2}
}

func (x *ListPlatformReq) GetUserUuid() string {
	if x != nil {
		return x.UserUuid
	}
	return ""
}

func (x *ListPlatformReq) GetOrgUuid() string {
	if x != nil {
		return x.OrgUuid
	}
	return ""
}

func (x *ListPlatformReq) GetProductUuid() string {
	if x != nil {
		return x.ProductUuid
	}
	return ""
}

type ListPlatformReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Platform []*ListPlatformReply_Platform `protobuf:"bytes,1,rep,name=platform,proto3" json:"platform,omitempty"`
}

func (x *ListPlatformReply) Reset() {
	*x = ListPlatformReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPlatformReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPlatformReply) ProtoMessage() {}

func (x *ListPlatformReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPlatformReply.ProtoReflect.Descriptor instead.
func (*ListPlatformReply) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{3}
}

func (x *ListPlatformReply) GetPlatform() []*ListPlatformReply_Platform {
	if x != nil {
		return x.Platform
	}
	return nil
}

// 账号
// 添加云平台账号 - 组织产品级别
type AddPlatformAccountReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserUuid    string `protobuf:"bytes,1,opt,name=userUuid,proto3" json:"userUuid,omitempty"`
	OrgUuid     string `protobuf:"bytes,2,opt,name=orgUuid,proto3" json:"orgUuid,omitempty"`
	ProductUuid string `protobuf:"bytes,3,opt,name=productUuid,proto3" json:"productUuid,omitempty"`
	PlatformId  int32  `protobuf:"varint,4,opt,name=platformId,proto3" json:"platformId,omitempty"`
	Name        string `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	AccountName string `protobuf:"bytes,6,opt,name=accountName,proto3" json:"accountName,omitempty"`
	Email       string `protobuf:"bytes,7,opt,name=email,proto3" json:"email,omitempty"`
	PhoneNumber int64  `protobuf:"varint,8,opt,name=phoneNumber,proto3" json:"phoneNumber,omitempty"`
	Describe    string `protobuf:"bytes,9,opt,name=describe,proto3" json:"describe,omitempty"`
}

func (x *AddPlatformAccountReq) Reset() {
	*x = AddPlatformAccountReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddPlatformAccountReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddPlatformAccountReq) ProtoMessage() {}

func (x *AddPlatformAccountReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddPlatformAccountReq.ProtoReflect.Descriptor instead.
func (*AddPlatformAccountReq) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{4}
}

func (x *AddPlatformAccountReq) GetUserUuid() string {
	if x != nil {
		return x.UserUuid
	}
	return ""
}

func (x *AddPlatformAccountReq) GetOrgUuid() string {
	if x != nil {
		return x.OrgUuid
	}
	return ""
}

func (x *AddPlatformAccountReq) GetProductUuid() string {
	if x != nil {
		return x.ProductUuid
	}
	return ""
}

func (x *AddPlatformAccountReq) GetPlatformId() int32 {
	if x != nil {
		return x.PlatformId
	}
	return 0
}

func (x *AddPlatformAccountReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddPlatformAccountReq) GetAccountName() string {
	if x != nil {
		return x.AccountName
	}
	return ""
}

func (x *AddPlatformAccountReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *AddPlatformAccountReq) GetPhoneNumber() int64 {
	if x != nil {
		return x.PhoneNumber
	}
	return 0
}

func (x *AddPlatformAccountReq) GetDescribe() string {
	if x != nil {
		return x.Describe
	}
	return ""
}

type AddPlatformAccountReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *AddPlatformAccountReply) Reset() {
	*x = AddPlatformAccountReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddPlatformAccountReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddPlatformAccountReply) ProtoMessage() {}

func (x *AddPlatformAccountReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddPlatformAccountReply.ProtoReflect.Descriptor instead.
func (*AddPlatformAccountReply) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{5}
}

func (x *AddPlatformAccountReply) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

// 列出云平台账号 - 组织产品级别
type ListPlatformAccountReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserUuid    string `protobuf:"bytes,1,opt,name=userUuid,proto3" json:"userUuid,omitempty"`
	OrgUuid     string `protobuf:"bytes,2,opt,name=orgUuid,proto3" json:"orgUuid,omitempty"`
	ProductUuid string `protobuf:"bytes,3,opt,name=productUuid,proto3" json:"productUuid,omitempty"`
	PlatformId  int32  `protobuf:"varint,4,opt,name=platformId,proto3" json:"platformId,omitempty"`
}

func (x *ListPlatformAccountReq) Reset() {
	*x = ListPlatformAccountReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPlatformAccountReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPlatformAccountReq) ProtoMessage() {}

func (x *ListPlatformAccountReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPlatformAccountReq.ProtoReflect.Descriptor instead.
func (*ListPlatformAccountReq) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{6}
}

func (x *ListPlatformAccountReq) GetUserUuid() string {
	if x != nil {
		return x.UserUuid
	}
	return ""
}

func (x *ListPlatformAccountReq) GetOrgUuid() string {
	if x != nil {
		return x.OrgUuid
	}
	return ""
}

func (x *ListPlatformAccountReq) GetProductUuid() string {
	if x != nil {
		return x.ProductUuid
	}
	return ""
}

func (x *ListPlatformAccountReq) GetPlatformId() int32 {
	if x != nil {
		return x.PlatformId
	}
	return 0
}

type ListPlatformAccountReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlatformAccount []*ListPlatformAccountReply_PlatformAccount `protobuf:"bytes,1,rep,name=platformAccount,proto3" json:"platformAccount,omitempty"`
}

func (x *ListPlatformAccountReply) Reset() {
	*x = ListPlatformAccountReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPlatformAccountReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPlatformAccountReply) ProtoMessage() {}

func (x *ListPlatformAccountReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPlatformAccountReply.ProtoReflect.Descriptor instead.
func (*ListPlatformAccountReply) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{7}
}

func (x *ListPlatformAccountReply) GetPlatformAccount() []*ListPlatformAccountReply_PlatformAccount {
	if x != nil {
		return x.PlatformAccount
	}
	return nil
}

// 删除云平台账号 - 组织产品级别
type DelPlatformAccountReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserUuid    string `protobuf:"bytes,1,opt,name=userUuid,proto3" json:"userUuid,omitempty"`
	OrgUuid     string `protobuf:"bytes,2,opt,name=orgUuid,proto3" json:"orgUuid,omitempty"`
	ProductUuid string `protobuf:"bytes,3,opt,name=productUuid,proto3" json:"productUuid,omitempty"`
	AccountUuid string `protobuf:"bytes,4,opt,name=accountUuid,proto3" json:"accountUuid,omitempty"`
}

func (x *DelPlatformAccountReq) Reset() {
	*x = DelPlatformAccountReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelPlatformAccountReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelPlatformAccountReq) ProtoMessage() {}

func (x *DelPlatformAccountReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelPlatformAccountReq.ProtoReflect.Descriptor instead.
func (*DelPlatformAccountReq) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{8}
}

func (x *DelPlatformAccountReq) GetUserUuid() string {
	if x != nil {
		return x.UserUuid
	}
	return ""
}

func (x *DelPlatformAccountReq) GetOrgUuid() string {
	if x != nil {
		return x.OrgUuid
	}
	return ""
}

func (x *DelPlatformAccountReq) GetProductUuid() string {
	if x != nil {
		return x.ProductUuid
	}
	return ""
}

func (x *DelPlatformAccountReq) GetAccountUuid() string {
	if x != nil {
		return x.AccountUuid
	}
	return ""
}

type DelPlatformAccountReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *DelPlatformAccountReply) Reset() {
	*x = DelPlatformAccountReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelPlatformAccountReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelPlatformAccountReply) ProtoMessage() {}

func (x *DelPlatformAccountReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelPlatformAccountReply.ProtoReflect.Descriptor instead.
func (*DelPlatformAccountReply) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{9}
}

func (x *DelPlatformAccountReply) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

// 创建云平台子账号 - 组织产品级别
type AddPlatformSubAccountReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserUuid    string `protobuf:"bytes,1,opt,name=userUuid,proto3" json:"userUuid,omitempty"`
	OrgUuid     string `protobuf:"bytes,2,opt,name=orgUuid,proto3" json:"orgUuid,omitempty"`
	ProductUuid string `protobuf:"bytes,3,opt,name=productUuid,proto3" json:"productUuid,omitempty"`
	AccountUuid string `protobuf:"bytes,4,opt,name=accountUuid,proto3" json:"accountUuid,omitempty"`
	Username    string `protobuf:"bytes,5,opt,name=username,proto3" json:"username,omitempty"`
	Email       string `protobuf:"bytes,6,opt,name=email,proto3" json:"email,omitempty"`
	PhoneNumber int64  `protobuf:"varint,7,opt,name=phoneNumber,proto3" json:"phoneNumber,omitempty"`
	Describe    string `protobuf:"bytes,8,opt,name=describe,proto3" json:"describe,omitempty"`
}

func (x *AddPlatformSubAccountReq) Reset() {
	*x = AddPlatformSubAccountReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddPlatformSubAccountReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddPlatformSubAccountReq) ProtoMessage() {}

func (x *AddPlatformSubAccountReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddPlatformSubAccountReq.ProtoReflect.Descriptor instead.
func (*AddPlatformSubAccountReq) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{10}
}

func (x *AddPlatformSubAccountReq) GetUserUuid() string {
	if x != nil {
		return x.UserUuid
	}
	return ""
}

func (x *AddPlatformSubAccountReq) GetOrgUuid() string {
	if x != nil {
		return x.OrgUuid
	}
	return ""
}

func (x *AddPlatformSubAccountReq) GetProductUuid() string {
	if x != nil {
		return x.ProductUuid
	}
	return ""
}

func (x *AddPlatformSubAccountReq) GetAccountUuid() string {
	if x != nil {
		return x.AccountUuid
	}
	return ""
}

func (x *AddPlatformSubAccountReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *AddPlatformSubAccountReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *AddPlatformSubAccountReq) GetPhoneNumber() int64 {
	if x != nil {
		return x.PhoneNumber
	}
	return 0
}

func (x *AddPlatformSubAccountReq) GetDescribe() string {
	if x != nil {
		return x.Describe
	}
	return ""
}

type AddPlatformSubAccountReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *AddPlatformSubAccountReply) Reset() {
	*x = AddPlatformSubAccountReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddPlatformSubAccountReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddPlatformSubAccountReply) ProtoMessage() {}

func (x *AddPlatformSubAccountReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddPlatformSubAccountReply.ProtoReflect.Descriptor instead.
func (*AddPlatformSubAccountReply) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{11}
}

func (x *AddPlatformSubAccountReply) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

// 获取云平台子账号 - 组织产品级别
type ListPlatformSubAccountReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserUuid    string `protobuf:"bytes,1,opt,name=userUuid,proto3" json:"userUuid,omitempty"`
	OrgUuid     string `protobuf:"bytes,2,opt,name=orgUuid,proto3" json:"orgUuid,omitempty"`
	ProductUuid string `protobuf:"bytes,3,opt,name=productUuid,proto3" json:"productUuid,omitempty"`
	AccountUuid string `protobuf:"bytes,4,opt,name=accountUuid,proto3" json:"accountUuid,omitempty"`
}

func (x *ListPlatformSubAccountReq) Reset() {
	*x = ListPlatformSubAccountReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPlatformSubAccountReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPlatformSubAccountReq) ProtoMessage() {}

func (x *ListPlatformSubAccountReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPlatformSubAccountReq.ProtoReflect.Descriptor instead.
func (*ListPlatformSubAccountReq) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{12}
}

func (x *ListPlatformSubAccountReq) GetUserUuid() string {
	if x != nil {
		return x.UserUuid
	}
	return ""
}

func (x *ListPlatformSubAccountReq) GetOrgUuid() string {
	if x != nil {
		return x.OrgUuid
	}
	return ""
}

func (x *ListPlatformSubAccountReq) GetProductUuid() string {
	if x != nil {
		return x.ProductUuid
	}
	return ""
}

func (x *ListPlatformSubAccountReq) GetAccountUuid() string {
	if x != nil {
		return x.AccountUuid
	}
	return ""
}

type ListPlatformSubAccountReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlatformSubAccounts []*ListPlatformSubAccountReply_PlatformSubAccount `protobuf:"bytes,1,rep,name=platformSubAccounts,proto3" json:"platformSubAccounts,omitempty"`
}

func (x *ListPlatformSubAccountReply) Reset() {
	*x = ListPlatformSubAccountReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPlatformSubAccountReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPlatformSubAccountReply) ProtoMessage() {}

func (x *ListPlatformSubAccountReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPlatformSubAccountReply.ProtoReflect.Descriptor instead.
func (*ListPlatformSubAccountReply) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{13}
}

func (x *ListPlatformSubAccountReply) GetPlatformSubAccounts() []*ListPlatformSubAccountReply_PlatformSubAccount {
	if x != nil {
		return x.PlatformSubAccounts
	}
	return nil
}

// 删除云平台子账号 - 组织产品级别
type DelPlatformSubAccountReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserUuid       string `protobuf:"bytes,1,opt,name=userUuid,proto3" json:"userUuid,omitempty"`
	OrgUuid        string `protobuf:"bytes,2,opt,name=orgUuid,proto3" json:"orgUuid,omitempty"`
	ProductUuid    string `protobuf:"bytes,3,opt,name=productUuid,proto3" json:"productUuid,omitempty"`
	SubAccountUuid string `protobuf:"bytes,4,opt,name=subAccountUuid,proto3" json:"subAccountUuid,omitempty"`
}

func (x *DelPlatformSubAccountReq) Reset() {
	*x = DelPlatformSubAccountReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelPlatformSubAccountReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelPlatformSubAccountReq) ProtoMessage() {}

func (x *DelPlatformSubAccountReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelPlatformSubAccountReq.ProtoReflect.Descriptor instead.
func (*DelPlatformSubAccountReq) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{14}
}

func (x *DelPlatformSubAccountReq) GetUserUuid() string {
	if x != nil {
		return x.UserUuid
	}
	return ""
}

func (x *DelPlatformSubAccountReq) GetOrgUuid() string {
	if x != nil {
		return x.OrgUuid
	}
	return ""
}

func (x *DelPlatformSubAccountReq) GetProductUuid() string {
	if x != nil {
		return x.ProductUuid
	}
	return ""
}

func (x *DelPlatformSubAccountReq) GetSubAccountUuid() string {
	if x != nil {
		return x.SubAccountUuid
	}
	return ""
}

type DelPlatformSubAccountReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *DelPlatformSubAccountReply) Reset() {
	*x = DelPlatformSubAccountReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelPlatformSubAccountReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelPlatformSubAccountReply) ProtoMessage() {}

func (x *DelPlatformSubAccountReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelPlatformSubAccountReply.ProtoReflect.Descriptor instead.
func (*DelPlatformSubAccountReply) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{15}
}

func (x *DelPlatformSubAccountReply) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

// 添加云平台子账号 AccessKey
type CreateAccessKeyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserUuid       string `protobuf:"bytes,1,opt,name=userUuid,proto3" json:"userUuid,omitempty"`
	SubAccountUuid string `protobuf:"bytes,2,opt,name=subAccountUuid,proto3" json:"subAccountUuid,omitempty"`
	AccessKey      string `protobuf:"bytes,3,opt,name=accessKey,proto3" json:"accessKey,omitempty"`
	SecretKey      string `protobuf:"bytes,4,opt,name=secretKey,proto3" json:"secretKey,omitempty"`
	Describe       string `protobuf:"bytes,5,opt,name=describe,proto3" json:"describe,omitempty"`
}

func (x *CreateAccessKeyReq) Reset() {
	*x = CreateAccessKeyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAccessKeyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAccessKeyReq) ProtoMessage() {}

func (x *CreateAccessKeyReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAccessKeyReq.ProtoReflect.Descriptor instead.
func (*CreateAccessKeyReq) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{16}
}

func (x *CreateAccessKeyReq) GetUserUuid() string {
	if x != nil {
		return x.UserUuid
	}
	return ""
}

func (x *CreateAccessKeyReq) GetSubAccountUuid() string {
	if x != nil {
		return x.SubAccountUuid
	}
	return ""
}

func (x *CreateAccessKeyReq) GetAccessKey() string {
	if x != nil {
		return x.AccessKey
	}
	return ""
}

func (x *CreateAccessKeyReq) GetSecretKey() string {
	if x != nil {
		return x.SecretKey
	}
	return ""
}

func (x *CreateAccessKeyReq) GetDescribe() string {
	if x != nil {
		return x.Describe
	}
	return ""
}

type CreateAccessKeyReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *CreateAccessKeyReply) Reset() {
	*x = CreateAccessKeyReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAccessKeyReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAccessKeyReply) ProtoMessage() {}

func (x *CreateAccessKeyReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAccessKeyReply.ProtoReflect.Descriptor instead.
func (*CreateAccessKeyReply) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{17}
}

func (x *CreateAccessKeyReply) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

// 获取云平台子账户 AccessKey
type GetAccessKeyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserUuid       string `protobuf:"bytes,1,opt,name=userUuid,proto3" json:"userUuid,omitempty"`
	OrgUuid        string `protobuf:"bytes,2,opt,name=orgUuid,proto3" json:"orgUuid,omitempty"`
	ProductUuid    string `protobuf:"bytes,3,opt,name=productUuid,proto3" json:"productUuid,omitempty"`
	SubAccountUuid string `protobuf:"bytes,4,opt,name=subAccountUuid,proto3" json:"subAccountUuid,omitempty"`
}

func (x *GetAccessKeyReq) Reset() {
	*x = GetAccessKeyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAccessKeyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccessKeyReq) ProtoMessage() {}

func (x *GetAccessKeyReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccessKeyReq.ProtoReflect.Descriptor instead.
func (*GetAccessKeyReq) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{18}
}

func (x *GetAccessKeyReq) GetUserUuid() string {
	if x != nil {
		return x.UserUuid
	}
	return ""
}

func (x *GetAccessKeyReq) GetOrgUuid() string {
	if x != nil {
		return x.OrgUuid
	}
	return ""
}

func (x *GetAccessKeyReq) GetProductUuid() string {
	if x != nil {
		return x.ProductUuid
	}
	return ""
}

func (x *GetAccessKeyReq) GetSubAccountUuid() string {
	if x != nil {
		return x.SubAccountUuid
	}
	return ""
}

type GetAccessKeyReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessKeys []*GetAccessKeyReply_AccessKey `protobuf:"bytes,1,rep,name=accessKeys,proto3" json:"accessKeys,omitempty"`
}

func (x *GetAccessKeyReply) Reset() {
	*x = GetAccessKeyReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAccessKeyReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccessKeyReply) ProtoMessage() {}

func (x *GetAccessKeyReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccessKeyReply.ProtoReflect.Descriptor instead.
func (*GetAccessKeyReply) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{19}
}

func (x *GetAccessKeyReply) GetAccessKeys() []*GetAccessKeyReply_AccessKey {
	if x != nil {
		return x.AccessKeys
	}
	return nil
}

// 删除云平台子账户 AccessKey
type DelAccessKeyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserUuid       string `protobuf:"bytes,1,opt,name=userUuid,proto3" json:"userUuid,omitempty"`
	OrgUuid        string `protobuf:"bytes,2,opt,name=orgUuid,proto3" json:"orgUuid,omitempty"`
	ProductUuid    string `protobuf:"bytes,3,opt,name=productUuid,proto3" json:"productUuid,omitempty"`
	SubAccountUuid string `protobuf:"bytes,4,opt,name=subAccountUuid,proto3" json:"subAccountUuid,omitempty"`
	AccessKeyUuid  string `protobuf:"bytes,5,opt,name=accessKeyUuid,proto3" json:"accessKeyUuid,omitempty"`
}

func (x *DelAccessKeyReq) Reset() {
	*x = DelAccessKeyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelAccessKeyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelAccessKeyReq) ProtoMessage() {}

func (x *DelAccessKeyReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelAccessKeyReq.ProtoReflect.Descriptor instead.
func (*DelAccessKeyReq) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{20}
}

func (x *DelAccessKeyReq) GetUserUuid() string {
	if x != nil {
		return x.UserUuid
	}
	return ""
}

func (x *DelAccessKeyReq) GetOrgUuid() string {
	if x != nil {
		return x.OrgUuid
	}
	return ""
}

func (x *DelAccessKeyReq) GetProductUuid() string {
	if x != nil {
		return x.ProductUuid
	}
	return ""
}

func (x *DelAccessKeyReq) GetSubAccountUuid() string {
	if x != nil {
		return x.SubAccountUuid
	}
	return ""
}

func (x *DelAccessKeyReq) GetAccessKeyUuid() string {
	if x != nil {
		return x.AccessKeyUuid
	}
	return ""
}

type DelAccessKeyReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *DelAccessKeyReply) Reset() {
	*x = DelAccessKeyReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelAccessKeyReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelAccessKeyReply) ProtoMessage() {}

func (x *DelAccessKeyReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelAccessKeyReply.ProtoReflect.Descriptor instead.
func (*DelAccessKeyReply) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{21}
}

func (x *DelAccessKeyReply) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

// 获取临时安全Token
type GetSecurityTokenReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserUuid                string `protobuf:"bytes,1,opt,name=userUuid,proto3" json:"userUuid,omitempty"`
	OrgUuid                 string `protobuf:"bytes,2,opt,name=orgUuid,proto3" json:"orgUuid,omitempty"`
	ProductUuid             string `protobuf:"bytes,3,opt,name=productUuid,proto3" json:"productUuid,omitempty"`
	PlatformId              int32  `protobuf:"varint,4,opt,name=platformId,proto3" json:"platformId,omitempty"`
	AccountUuid             string `protobuf:"bytes,5,opt,name=accountUuid,proto3" json:"accountUuid,omitempty"`
	SubAccountUuid          string `protobuf:"bytes,6,opt,name=subAccountUuid,proto3" json:"subAccountUuid,omitempty"`
	SubAccountAccessKeyUuid string `protobuf:"bytes,7,opt,name=subAccountAccessKeyUuid,proto3" json:"subAccountAccessKeyUuid,omitempty"`
	ARN                     string `protobuf:"bytes,8,opt,name=ARN,proto3" json:"ARN,omitempty"`
	SessionName             string `protobuf:"bytes,9,opt,name=sessionName,proto3" json:"sessionName,omitempty"`
	DurationSeconds         int64  `protobuf:"varint,10,opt,name=durationSeconds,proto3" json:"durationSeconds,omitempty"`
	Policy                  string `protobuf:"bytes,11,opt,name=policy,proto3" json:"policy,omitempty"`
}

func (x *GetSecurityTokenReq) Reset() {
	*x = GetSecurityTokenReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSecurityTokenReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSecurityTokenReq) ProtoMessage() {}

func (x *GetSecurityTokenReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSecurityTokenReq.ProtoReflect.Descriptor instead.
func (*GetSecurityTokenReq) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{22}
}

func (x *GetSecurityTokenReq) GetUserUuid() string {
	if x != nil {
		return x.UserUuid
	}
	return ""
}

func (x *GetSecurityTokenReq) GetOrgUuid() string {
	if x != nil {
		return x.OrgUuid
	}
	return ""
}

func (x *GetSecurityTokenReq) GetProductUuid() string {
	if x != nil {
		return x.ProductUuid
	}
	return ""
}

func (x *GetSecurityTokenReq) GetPlatformId() int32 {
	if x != nil {
		return x.PlatformId
	}
	return 0
}

func (x *GetSecurityTokenReq) GetAccountUuid() string {
	if x != nil {
		return x.AccountUuid
	}
	return ""
}

func (x *GetSecurityTokenReq) GetSubAccountUuid() string {
	if x != nil {
		return x.SubAccountUuid
	}
	return ""
}

func (x *GetSecurityTokenReq) GetSubAccountAccessKeyUuid() string {
	if x != nil {
		return x.SubAccountAccessKeyUuid
	}
	return ""
}

func (x *GetSecurityTokenReq) GetARN() string {
	if x != nil {
		return x.ARN
	}
	return ""
}

func (x *GetSecurityTokenReq) GetSessionName() string {
	if x != nil {
		return x.SessionName
	}
	return ""
}

func (x *GetSecurityTokenReq) GetDurationSeconds() int64 {
	if x != nil {
		return x.DurationSeconds
	}
	return 0
}

func (x *GetSecurityTokenReq) GetPolicy() string {
	if x != nil {
		return x.Policy
	}
	return ""
}

type GetSecurityTokenReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessKeyId     string `protobuf:"bytes,1,opt,name=accessKeyId,proto3" json:"accessKeyId,omitempty"`
	AccessKeySecret string `protobuf:"bytes,2,opt,name=accessKeySecret,proto3" json:"accessKeySecret,omitempty"`
	SecurityToken   string `protobuf:"bytes,3,opt,name=securityToken,proto3" json:"securityToken,omitempty"`
	ExtendPolicy    string `protobuf:"bytes,4,opt,name=extendPolicy,proto3" json:"extendPolicy,omitempty"`
	Expiration      string `protobuf:"bytes,5,opt,name=expiration,proto3" json:"expiration,omitempty"`
}

func (x *GetSecurityTokenReply) Reset() {
	*x = GetSecurityTokenReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSecurityTokenReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSecurityTokenReply) ProtoMessage() {}

func (x *GetSecurityTokenReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSecurityTokenReply.ProtoReflect.Descriptor instead.
func (*GetSecurityTokenReply) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{23}
}

func (x *GetSecurityTokenReply) GetAccessKeyId() string {
	if x != nil {
		return x.AccessKeyId
	}
	return ""
}

func (x *GetSecurityTokenReply) GetAccessKeySecret() string {
	if x != nil {
		return x.AccessKeySecret
	}
	return ""
}

func (x *GetSecurityTokenReply) GetSecurityToken() string {
	if x != nil {
		return x.SecurityToken
	}
	return ""
}

func (x *GetSecurityTokenReply) GetExtendPolicy() string {
	if x != nil {
		return x.ExtendPolicy
	}
	return ""
}

func (x *GetSecurityTokenReply) GetExpiration() string {
	if x != nil {
		return x.Expiration
	}
	return ""
}

// 配置临时上传对象存储
// 建议使用公共账户创建
type CreateObjectStorageSecurityTokenGeneratorReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserUuid                string `protobuf:"bytes,1,opt,name=userUuid,proto3" json:"userUuid,omitempty"`
	OrgUuid                 string `protobuf:"bytes,2,opt,name=orgUuid,proto3" json:"orgUuid,omitempty"`
	ProductUuid             string `protobuf:"bytes,3,opt,name=productUuid,proto3" json:"productUuid,omitempty"`
	PlatformId              int32  `protobuf:"varint,4,opt,name=platformId,proto3" json:"platformId,omitempty"`
	AccountUuid             string `protobuf:"bytes,5,opt,name=accountUuid,proto3" json:"accountUuid,omitempty"`
	SubAccountUuid          string `protobuf:"bytes,6,opt,name=subAccountUuid,proto3" json:"subAccountUuid,omitempty"`
	SubAccountAccessKeyUuid string `protobuf:"bytes,7,opt,name=subAccountAccessKeyUuid,proto3" json:"subAccountAccessKeyUuid,omitempty"`
	Bucket                  string `protobuf:"bytes,8,opt,name=bucket,proto3" json:"bucket,omitempty"`
	Endpoint                string `protobuf:"bytes,9,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	Arn                     string `protobuf:"bytes,10,opt,name=arn,proto3" json:"arn,omitempty"` //string relativeId = 11;
}

func (x *CreateObjectStorageSecurityTokenGeneratorReq) Reset() {
	*x = CreateObjectStorageSecurityTokenGeneratorReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateObjectStorageSecurityTokenGeneratorReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateObjectStorageSecurityTokenGeneratorReq) ProtoMessage() {}

func (x *CreateObjectStorageSecurityTokenGeneratorReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateObjectStorageSecurityTokenGeneratorReq.ProtoReflect.Descriptor instead.
func (*CreateObjectStorageSecurityTokenGeneratorReq) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{24}
}

func (x *CreateObjectStorageSecurityTokenGeneratorReq) GetUserUuid() string {
	if x != nil {
		return x.UserUuid
	}
	return ""
}

func (x *CreateObjectStorageSecurityTokenGeneratorReq) GetOrgUuid() string {
	if x != nil {
		return x.OrgUuid
	}
	return ""
}

func (x *CreateObjectStorageSecurityTokenGeneratorReq) GetProductUuid() string {
	if x != nil {
		return x.ProductUuid
	}
	return ""
}

func (x *CreateObjectStorageSecurityTokenGeneratorReq) GetPlatformId() int32 {
	if x != nil {
		return x.PlatformId
	}
	return 0
}

func (x *CreateObjectStorageSecurityTokenGeneratorReq) GetAccountUuid() string {
	if x != nil {
		return x.AccountUuid
	}
	return ""
}

func (x *CreateObjectStorageSecurityTokenGeneratorReq) GetSubAccountUuid() string {
	if x != nil {
		return x.SubAccountUuid
	}
	return ""
}

func (x *CreateObjectStorageSecurityTokenGeneratorReq) GetSubAccountAccessKeyUuid() string {
	if x != nil {
		return x.SubAccountAccessKeyUuid
	}
	return ""
}

func (x *CreateObjectStorageSecurityTokenGeneratorReq) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

func (x *CreateObjectStorageSecurityTokenGeneratorReq) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *CreateObjectStorageSecurityTokenGeneratorReq) GetArn() string {
	if x != nil {
		return x.Arn
	}
	return ""
}

type CreateObjectStorageSecurityTokenGeneratorReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *CreateObjectStorageSecurityTokenGeneratorReply) Reset() {
	*x = CreateObjectStorageSecurityTokenGeneratorReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateObjectStorageSecurityTokenGeneratorReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateObjectStorageSecurityTokenGeneratorReply) ProtoMessage() {}

func (x *CreateObjectStorageSecurityTokenGeneratorReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateObjectStorageSecurityTokenGeneratorReply.ProtoReflect.Descriptor instead.
func (*CreateObjectStorageSecurityTokenGeneratorReply) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{25}
}

func (x *CreateObjectStorageSecurityTokenGeneratorReply) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

type ExistObjectStorageSecurityTokenGeneratorReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserUuid    string `protobuf:"bytes,1,opt,name=userUuid,proto3" json:"userUuid,omitempty"`
	OrgUuid     string `protobuf:"bytes,2,opt,name=orgUuid,proto3" json:"orgUuid,omitempty"`
	ProductUuid string `protobuf:"bytes,3,opt,name=productUuid,proto3" json:"productUuid,omitempty"`
	PlatformId  int32  `protobuf:"varint,4,opt,name=platformId,proto3" json:"platformId,omitempty"`
	Bucket      string `protobuf:"bytes,5,opt,name=bucket,proto3" json:"bucket,omitempty"`
}

func (x *ExistObjectStorageSecurityTokenGeneratorReq) Reset() {
	*x = ExistObjectStorageSecurityTokenGeneratorReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistObjectStorageSecurityTokenGeneratorReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistObjectStorageSecurityTokenGeneratorReq) ProtoMessage() {}

func (x *ExistObjectStorageSecurityTokenGeneratorReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistObjectStorageSecurityTokenGeneratorReq.ProtoReflect.Descriptor instead.
func (*ExistObjectStorageSecurityTokenGeneratorReq) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{26}
}

func (x *ExistObjectStorageSecurityTokenGeneratorReq) GetUserUuid() string {
	if x != nil {
		return x.UserUuid
	}
	return ""
}

func (x *ExistObjectStorageSecurityTokenGeneratorReq) GetOrgUuid() string {
	if x != nil {
		return x.OrgUuid
	}
	return ""
}

func (x *ExistObjectStorageSecurityTokenGeneratorReq) GetProductUuid() string {
	if x != nil {
		return x.ProductUuid
	}
	return ""
}

func (x *ExistObjectStorageSecurityTokenGeneratorReq) GetPlatformId() int32 {
	if x != nil {
		return x.PlatformId
	}
	return 0
}

func (x *ExistObjectStorageSecurityTokenGeneratorReq) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

type ExistObjectStorageSecurityTokenGeneratorReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *ExistObjectStorageSecurityTokenGeneratorReply) Reset() {
	*x = ExistObjectStorageSecurityTokenGeneratorReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExistObjectStorageSecurityTokenGeneratorReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExistObjectStorageSecurityTokenGeneratorReply) ProtoMessage() {}

func (x *ExistObjectStorageSecurityTokenGeneratorReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExistObjectStorageSecurityTokenGeneratorReply.ProtoReflect.Descriptor instead.
func (*ExistObjectStorageSecurityTokenGeneratorReply) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{27}
}

func (x *ExistObjectStorageSecurityTokenGeneratorReply) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

type GetObjectStorageSecurityTokenGeneratorReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserUuid      string `protobuf:"bytes,1,opt,name=userUuid,proto3" json:"userUuid,omitempty"`
	OrgUuid       string `protobuf:"bytes,2,opt,name=orgUuid,proto3" json:"orgUuid,omitempty"`
	ProductUuid   string `protobuf:"bytes,3,opt,name=productUuid,proto3" json:"productUuid,omitempty"`
	GeneratorUuid string `protobuf:"bytes,4,opt,name=generatorUuid,proto3" json:"generatorUuid,omitempty"`
}

func (x *GetObjectStorageSecurityTokenGeneratorReq) Reset() {
	*x = GetObjectStorageSecurityTokenGeneratorReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetObjectStorageSecurityTokenGeneratorReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetObjectStorageSecurityTokenGeneratorReq) ProtoMessage() {}

func (x *GetObjectStorageSecurityTokenGeneratorReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetObjectStorageSecurityTokenGeneratorReq.ProtoReflect.Descriptor instead.
func (*GetObjectStorageSecurityTokenGeneratorReq) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{28}
}

func (x *GetObjectStorageSecurityTokenGeneratorReq) GetUserUuid() string {
	if x != nil {
		return x.UserUuid
	}
	return ""
}

func (x *GetObjectStorageSecurityTokenGeneratorReq) GetOrgUuid() string {
	if x != nil {
		return x.OrgUuid
	}
	return ""
}

func (x *GetObjectStorageSecurityTokenGeneratorReq) GetProductUuid() string {
	if x != nil {
		return x.ProductUuid
	}
	return ""
}

func (x *GetObjectStorageSecurityTokenGeneratorReq) GetGeneratorUuid() string {
	if x != nil {
		return x.GeneratorUuid
	}
	return ""
}

type GetObjectStorageSecurityTokenGeneratorReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid          string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	OrgUuid       string `protobuf:"bytes,2,opt,name=orgUuid,proto3" json:"orgUuid,omitempty"`
	ProductUuid   string `protobuf:"bytes,3,opt,name=productUuid,proto3" json:"productUuid,omitempty"`
	PlatformId    int32  `protobuf:"varint,4,opt,name=platformId,proto3" json:"platformId,omitempty"`
	PlatformName  string `protobuf:"bytes,11,opt,name=platformName,proto3" json:"platformName,omitempty"`
	AccountUuid   string `protobuf:"bytes,5,opt,name=accountUuid,proto3" json:"accountUuid,omitempty"`
	AccessKeyUuid string `protobuf:"bytes,6,opt,name=accessKeyUuid,proto3" json:"accessKeyUuid,omitempty"`
	BucketName    string `protobuf:"bytes,7,opt,name=bucketName,proto3" json:"bucketName,omitempty"`
	Endpoint      string `protobuf:"bytes,8,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	Arn           string `protobuf:"bytes,9,opt,name=arn,proto3" json:"arn,omitempty"`
	CreateTime    int64  `protobuf:"varint,10,opt,name=createTime,proto3" json:"createTime,omitempty"`
}

func (x *GetObjectStorageSecurityTokenGeneratorReply) Reset() {
	*x = GetObjectStorageSecurityTokenGeneratorReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetObjectStorageSecurityTokenGeneratorReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetObjectStorageSecurityTokenGeneratorReply) ProtoMessage() {}

func (x *GetObjectStorageSecurityTokenGeneratorReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetObjectStorageSecurityTokenGeneratorReply.ProtoReflect.Descriptor instead.
func (*GetObjectStorageSecurityTokenGeneratorReply) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{29}
}

func (x *GetObjectStorageSecurityTokenGeneratorReply) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *GetObjectStorageSecurityTokenGeneratorReply) GetOrgUuid() string {
	if x != nil {
		return x.OrgUuid
	}
	return ""
}

func (x *GetObjectStorageSecurityTokenGeneratorReply) GetProductUuid() string {
	if x != nil {
		return x.ProductUuid
	}
	return ""
}

func (x *GetObjectStorageSecurityTokenGeneratorReply) GetPlatformId() int32 {
	if x != nil {
		return x.PlatformId
	}
	return 0
}

func (x *GetObjectStorageSecurityTokenGeneratorReply) GetPlatformName() string {
	if x != nil {
		return x.PlatformName
	}
	return ""
}

func (x *GetObjectStorageSecurityTokenGeneratorReply) GetAccountUuid() string {
	if x != nil {
		return x.AccountUuid
	}
	return ""
}

func (x *GetObjectStorageSecurityTokenGeneratorReply) GetAccessKeyUuid() string {
	if x != nil {
		return x.AccessKeyUuid
	}
	return ""
}

func (x *GetObjectStorageSecurityTokenGeneratorReply) GetBucketName() string {
	if x != nil {
		return x.BucketName
	}
	return ""
}

func (x *GetObjectStorageSecurityTokenGeneratorReply) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *GetObjectStorageSecurityTokenGeneratorReply) GetArn() string {
	if x != nil {
		return x.Arn
	}
	return ""
}

func (x *GetObjectStorageSecurityTokenGeneratorReply) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

type DelObjectStorageSecurityTokenGeneratorReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserUuid      string `protobuf:"bytes,1,opt,name=userUuid,proto3" json:"userUuid,omitempty"`
	OrgUuid       string `protobuf:"bytes,2,opt,name=orgUuid,proto3" json:"orgUuid,omitempty"`
	ProductUuid   string `protobuf:"bytes,3,opt,name=productUuid,proto3" json:"productUuid,omitempty"`
	GeneratorUuid string `protobuf:"bytes,4,opt,name=generatorUuid,proto3" json:"generatorUuid,omitempty"`
}

func (x *DelObjectStorageSecurityTokenGeneratorReq) Reset() {
	*x = DelObjectStorageSecurityTokenGeneratorReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelObjectStorageSecurityTokenGeneratorReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelObjectStorageSecurityTokenGeneratorReq) ProtoMessage() {}

func (x *DelObjectStorageSecurityTokenGeneratorReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelObjectStorageSecurityTokenGeneratorReq.ProtoReflect.Descriptor instead.
func (*DelObjectStorageSecurityTokenGeneratorReq) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{30}
}

func (x *DelObjectStorageSecurityTokenGeneratorReq) GetUserUuid() string {
	if x != nil {
		return x.UserUuid
	}
	return ""
}

func (x *DelObjectStorageSecurityTokenGeneratorReq) GetOrgUuid() string {
	if x != nil {
		return x.OrgUuid
	}
	return ""
}

func (x *DelObjectStorageSecurityTokenGeneratorReq) GetProductUuid() string {
	if x != nil {
		return x.ProductUuid
	}
	return ""
}

func (x *DelObjectStorageSecurityTokenGeneratorReq) GetGeneratorUuid() string {
	if x != nil {
		return x.GeneratorUuid
	}
	return ""
}

type DelObjectStorageSecurityTokenGeneratorReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *DelObjectStorageSecurityTokenGeneratorReply) Reset() {
	*x = DelObjectStorageSecurityTokenGeneratorReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelObjectStorageSecurityTokenGeneratorReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelObjectStorageSecurityTokenGeneratorReply) ProtoMessage() {}

func (x *DelObjectStorageSecurityTokenGeneratorReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelObjectStorageSecurityTokenGeneratorReply.ProtoReflect.Descriptor instead.
func (*DelObjectStorageSecurityTokenGeneratorReply) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{31}
}

func (x *DelObjectStorageSecurityTokenGeneratorReply) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

type ListObjectStorageSecurityTokenGeneratorReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserUuid    string `protobuf:"bytes,1,opt,name=userUuid,proto3" json:"userUuid,omitempty"`
	OrgUuid     string `protobuf:"bytes,2,opt,name=orgUuid,proto3" json:"orgUuid,omitempty"`
	ProductUuid string `protobuf:"bytes,3,opt,name=productUuid,proto3" json:"productUuid,omitempty"`
}

func (x *ListObjectStorageSecurityTokenGeneratorReq) Reset() {
	*x = ListObjectStorageSecurityTokenGeneratorReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListObjectStorageSecurityTokenGeneratorReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListObjectStorageSecurityTokenGeneratorReq) ProtoMessage() {}

func (x *ListObjectStorageSecurityTokenGeneratorReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListObjectStorageSecurityTokenGeneratorReq.ProtoReflect.Descriptor instead.
func (*ListObjectStorageSecurityTokenGeneratorReq) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{32}
}

func (x *ListObjectStorageSecurityTokenGeneratorReq) GetUserUuid() string {
	if x != nil {
		return x.UserUuid
	}
	return ""
}

func (x *ListObjectStorageSecurityTokenGeneratorReq) GetOrgUuid() string {
	if x != nil {
		return x.OrgUuid
	}
	return ""
}

func (x *ListObjectStorageSecurityTokenGeneratorReq) GetProductUuid() string {
	if x != nil {
		return x.ProductUuid
	}
	return ""
}

type ListObjectStorageSecurityTokenGeneratorReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Generator []*ListObjectStorageSecurityTokenGeneratorReply_Generator `protobuf:"bytes,1,rep,name=generator,proto3" json:"generator,omitempty"`
}

func (x *ListObjectStorageSecurityTokenGeneratorReply) Reset() {
	*x = ListObjectStorageSecurityTokenGeneratorReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListObjectStorageSecurityTokenGeneratorReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListObjectStorageSecurityTokenGeneratorReply) ProtoMessage() {}

func (x *ListObjectStorageSecurityTokenGeneratorReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListObjectStorageSecurityTokenGeneratorReply.ProtoReflect.Descriptor instead.
func (*ListObjectStorageSecurityTokenGeneratorReply) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{33}
}

func (x *ListObjectStorageSecurityTokenGeneratorReply) GetGenerator() []*ListObjectStorageSecurityTokenGeneratorReply_Generator {
	if x != nil {
		return x.Generator
	}
	return nil
}

// 通过 ObjectStorageSecurityTokenGenerator 配置，获取临时 Token
type GetObjectStorageSecurityTokenByGeneratorReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserUuid      string `protobuf:"bytes,1,opt,name=userUuid,proto3" json:"userUuid,omitempty"`
	OrgUuid       string `protobuf:"bytes,2,opt,name=orgUuid,proto3" json:"orgUuid,omitempty"`
	ProductUuid   string `protobuf:"bytes,3,opt,name=productUuid,proto3" json:"productUuid,omitempty"`
	GeneratorUuid string `protobuf:"bytes,4,opt,name=generatorUuid,proto3" json:"generatorUuid,omitempty"`
	RelativeId    string `protobuf:"bytes,5,opt,name=relativeId,proto3" json:"relativeId,omitempty"`
}

func (x *GetObjectStorageSecurityTokenByGeneratorReq) Reset() {
	*x = GetObjectStorageSecurityTokenByGeneratorReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetObjectStorageSecurityTokenByGeneratorReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetObjectStorageSecurityTokenByGeneratorReq) ProtoMessage() {}

func (x *GetObjectStorageSecurityTokenByGeneratorReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetObjectStorageSecurityTokenByGeneratorReq.ProtoReflect.Descriptor instead.
func (*GetObjectStorageSecurityTokenByGeneratorReq) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{34}
}

func (x *GetObjectStorageSecurityTokenByGeneratorReq) GetUserUuid() string {
	if x != nil {
		return x.UserUuid
	}
	return ""
}

func (x *GetObjectStorageSecurityTokenByGeneratorReq) GetOrgUuid() string {
	if x != nil {
		return x.OrgUuid
	}
	return ""
}

func (x *GetObjectStorageSecurityTokenByGeneratorReq) GetProductUuid() string {
	if x != nil {
		return x.ProductUuid
	}
	return ""
}

func (x *GetObjectStorageSecurityTokenByGeneratorReq) GetGeneratorUuid() string {
	if x != nil {
		return x.GeneratorUuid
	}
	return ""
}

func (x *GetObjectStorageSecurityTokenByGeneratorReq) GetRelativeId() string {
	if x != nil {
		return x.RelativeId
	}
	return ""
}

type GetObjectStorageSecurityTokenByGeneratorReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessKeyId     string `protobuf:"bytes,1,opt,name=accessKeyId,proto3" json:"accessKeyId,omitempty"`
	AccessKeySecret string `protobuf:"bytes,2,opt,name=accessKeySecret,proto3" json:"accessKeySecret,omitempty"`
	SecurityToken   string `protobuf:"bytes,3,opt,name=securityToken,proto3" json:"securityToken,omitempty"`
	ExtendPolicy    string `protobuf:"bytes,4,opt,name=extendPolicy,proto3" json:"extendPolicy,omitempty"`
	Expiration      string `protobuf:"bytes,5,opt,name=expiration,proto3" json:"expiration,omitempty"`
	Bucket          string `protobuf:"bytes,6,opt,name=bucket,proto3" json:"bucket,omitempty"`
	Endpoint        string `protobuf:"bytes,7,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	PlatformId      int32  `protobuf:"varint,8,opt,name=platform_id,json=platformId,proto3" json:"platform_id,omitempty"`
	Platform        string `protobuf:"bytes,9,opt,name=platform,proto3" json:"platform,omitempty"`
}

func (x *GetObjectStorageSecurityTokenByGeneratorReply) Reset() {
	*x = GetObjectStorageSecurityTokenByGeneratorReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetObjectStorageSecurityTokenByGeneratorReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetObjectStorageSecurityTokenByGeneratorReply) ProtoMessage() {}

func (x *GetObjectStorageSecurityTokenByGeneratorReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetObjectStorageSecurityTokenByGeneratorReply.ProtoReflect.Descriptor instead.
func (*GetObjectStorageSecurityTokenByGeneratorReply) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{35}
}

func (x *GetObjectStorageSecurityTokenByGeneratorReply) GetAccessKeyId() string {
	if x != nil {
		return x.AccessKeyId
	}
	return ""
}

func (x *GetObjectStorageSecurityTokenByGeneratorReply) GetAccessKeySecret() string {
	if x != nil {
		return x.AccessKeySecret
	}
	return ""
}

func (x *GetObjectStorageSecurityTokenByGeneratorReply) GetSecurityToken() string {
	if x != nil {
		return x.SecurityToken
	}
	return ""
}

func (x *GetObjectStorageSecurityTokenByGeneratorReply) GetExtendPolicy() string {
	if x != nil {
		return x.ExtendPolicy
	}
	return ""
}

func (x *GetObjectStorageSecurityTokenByGeneratorReply) GetExpiration() string {
	if x != nil {
		return x.Expiration
	}
	return ""
}

func (x *GetObjectStorageSecurityTokenByGeneratorReply) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

func (x *GetObjectStorageSecurityTokenByGeneratorReply) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *GetObjectStorageSecurityTokenByGeneratorReply) GetPlatformId() int32 {
	if x != nil {
		return x.PlatformId
	}
	return 0
}

func (x *GetObjectStorageSecurityTokenByGeneratorReply) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

// 通过 ObjectStorageSecurityTokenGenerator 配置，获取临时 Token - by Token (给每个Generator生成N个Token，方便程序调用)
type GetObjectStorageSecurityTokenByTokenReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GeneratorUuid string `protobuf:"bytes,1,opt,name=generatorUuid,proto3" json:"generatorUuid,omitempty"`
	Token         string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	RelativeId    string `protobuf:"bytes,3,opt,name=relativeId,proto3" json:"relativeId,omitempty"`
}

func (x *GetObjectStorageSecurityTokenByTokenReq) Reset() {
	*x = GetObjectStorageSecurityTokenByTokenReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetObjectStorageSecurityTokenByTokenReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetObjectStorageSecurityTokenByTokenReq) ProtoMessage() {}

func (x *GetObjectStorageSecurityTokenByTokenReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetObjectStorageSecurityTokenByTokenReq.ProtoReflect.Descriptor instead.
func (*GetObjectStorageSecurityTokenByTokenReq) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{36}
}

func (x *GetObjectStorageSecurityTokenByTokenReq) GetGeneratorUuid() string {
	if x != nil {
		return x.GeneratorUuid
	}
	return ""
}

func (x *GetObjectStorageSecurityTokenByTokenReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *GetObjectStorageSecurityTokenByTokenReq) GetRelativeId() string {
	if x != nil {
		return x.RelativeId
	}
	return ""
}

type GetObjectStorageSecurityTokenByTokenReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessKeyId     string `protobuf:"bytes,1,opt,name=accessKeyId,proto3" json:"accessKeyId,omitempty"`
	AccessKeySecret string `protobuf:"bytes,2,opt,name=accessKeySecret,proto3" json:"accessKeySecret,omitempty"`
	SecurityToken   string `protobuf:"bytes,3,opt,name=securityToken,proto3" json:"securityToken,omitempty"`
	Expiration      string `protobuf:"bytes,4,opt,name=expiration,proto3" json:"expiration,omitempty"`
}

func (x *GetObjectStorageSecurityTokenByTokenReply) Reset() {
	*x = GetObjectStorageSecurityTokenByTokenReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetObjectStorageSecurityTokenByTokenReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetObjectStorageSecurityTokenByTokenReply) ProtoMessage() {}

func (x *GetObjectStorageSecurityTokenByTokenReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetObjectStorageSecurityTokenByTokenReply.ProtoReflect.Descriptor instead.
func (*GetObjectStorageSecurityTokenByTokenReply) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{37}
}

func (x *GetObjectStorageSecurityTokenByTokenReply) GetAccessKeyId() string {
	if x != nil {
		return x.AccessKeyId
	}
	return ""
}

func (x *GetObjectStorageSecurityTokenByTokenReply) GetAccessKeySecret() string {
	if x != nil {
		return x.AccessKeySecret
	}
	return ""
}

func (x *GetObjectStorageSecurityTokenByTokenReply) GetSecurityToken() string {
	if x != nil {
		return x.SecurityToken
	}
	return ""
}

func (x *GetObjectStorageSecurityTokenByTokenReply) GetExpiration() string {
	if x != nil {
		return x.Expiration
	}
	return ""
}

// relativeId: ${bucketName}/${objectPath}
type GenerateObjectStorageSecurityTokenPutPolicyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlatformId int32  `protobuf:"varint,1,opt,name=platformId,proto3" json:"platformId,omitempty"`
	RelativeId string `protobuf:"bytes,2,opt,name=relativeId,proto3" json:"relativeId,omitempty"`
}

func (x *GenerateObjectStorageSecurityTokenPutPolicyReq) Reset() {
	*x = GenerateObjectStorageSecurityTokenPutPolicyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateObjectStorageSecurityTokenPutPolicyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateObjectStorageSecurityTokenPutPolicyReq) ProtoMessage() {}

func (x *GenerateObjectStorageSecurityTokenPutPolicyReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateObjectStorageSecurityTokenPutPolicyReq.ProtoReflect.Descriptor instead.
func (*GenerateObjectStorageSecurityTokenPutPolicyReq) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{38}
}

func (x *GenerateObjectStorageSecurityTokenPutPolicyReq) GetPlatformId() int32 {
	if x != nil {
		return x.PlatformId
	}
	return 0
}

func (x *GenerateObjectStorageSecurityTokenPutPolicyReq) GetRelativeId() string {
	if x != nil {
		return x.RelativeId
	}
	return ""
}

type GenerateObjectStorageSecurityTokenPutPolicyReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Policy string `protobuf:"bytes,1,opt,name=policy,proto3" json:"policy,omitempty"`
}

func (x *GenerateObjectStorageSecurityTokenPutPolicyReply) Reset() {
	*x = GenerateObjectStorageSecurityTokenPutPolicyReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateObjectStorageSecurityTokenPutPolicyReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateObjectStorageSecurityTokenPutPolicyReply) ProtoMessage() {}

func (x *GenerateObjectStorageSecurityTokenPutPolicyReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateObjectStorageSecurityTokenPutPolicyReply.ProtoReflect.Descriptor instead.
func (*GenerateObjectStorageSecurityTokenPutPolicyReply) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{39}
}

func (x *GenerateObjectStorageSecurityTokenPutPolicyReply) GetPolicy() string {
	if x != nil {
		return x.Policy
	}
	return ""
}

// Bill - 账单
type AccountBalanceReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserUuid                string `protobuf:"bytes,1,opt,name=userUuid,proto3" json:"userUuid,omitempty"`
	OrgUuid                 string `protobuf:"bytes,2,opt,name=orgUuid,proto3" json:"orgUuid,omitempty"`
	ProductUuid             string `protobuf:"bytes,3,opt,name=productUuid,proto3" json:"productUuid,omitempty"`
	PlatformId              int32  `protobuf:"varint,4,opt,name=platformId,proto3" json:"platformId,omitempty"`
	AccountUuid             string `protobuf:"bytes,5,opt,name=accountUuid,proto3" json:"accountUuid,omitempty"`
	SubAccountUuid          string `protobuf:"bytes,6,opt,name=subAccountUuid,proto3" json:"subAccountUuid,omitempty"`
	SubAccountAccessKeyUuid string `protobuf:"bytes,7,opt,name=subAccountAccessKeyUuid,proto3" json:"subAccountAccessKeyUuid,omitempty"`
}

func (x *AccountBalanceReq) Reset() {
	*x = AccountBalanceReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountBalanceReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountBalanceReq) ProtoMessage() {}

func (x *AccountBalanceReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountBalanceReq.ProtoReflect.Descriptor instead.
func (*AccountBalanceReq) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{40}
}

func (x *AccountBalanceReq) GetUserUuid() string {
	if x != nil {
		return x.UserUuid
	}
	return ""
}

func (x *AccountBalanceReq) GetOrgUuid() string {
	if x != nil {
		return x.OrgUuid
	}
	return ""
}

func (x *AccountBalanceReq) GetProductUuid() string {
	if x != nil {
		return x.ProductUuid
	}
	return ""
}

func (x *AccountBalanceReq) GetPlatformId() int32 {
	if x != nil {
		return x.PlatformId
	}
	return 0
}

func (x *AccountBalanceReq) GetAccountUuid() string {
	if x != nil {
		return x.AccountUuid
	}
	return ""
}

func (x *AccountBalanceReq) GetSubAccountUuid() string {
	if x != nil {
		return x.SubAccountUuid
	}
	return ""
}

func (x *AccountBalanceReq) GetSubAccountAccessKeyUuid() string {
	if x != nil {
		return x.SubAccountAccessKeyUuid
	}
	return ""
}

type AccountBalanceReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Balance            float64 `protobuf:"fixed64,1,opt,name=balance,proto3" json:"balance,omitempty"`
	CashAccountBalance float64 `protobuf:"fixed64,2,opt,name=cashAccountBalance,proto3" json:"cashAccountBalance,omitempty"`
	OweAmount          float64 `protobuf:"fixed64,3,opt,name=oweAmount,proto3" json:"oweAmount,omitempty"`
	IsAllowArrears     bool    `protobuf:"varint,4,opt,name=isAllowArrears,proto3" json:"isAllowArrears,omitempty"`
	IsCreditLimited    bool    `protobuf:"varint,5,opt,name=isCreditLimited,proto3" json:"isCreditLimited,omitempty"`
	CreditAmount       float64 `protobuf:"fixed64,6,opt,name=creditAmount,proto3" json:"creditAmount,omitempty"`
	CreditBalance      float64 `protobuf:"fixed64,7,opt,name=creditBalance,proto3" json:"creditBalance,omitempty"`
	RealCreditBalance  float64 `protobuf:"fixed64,8,opt,name=realCreditBalance,proto3" json:"realCreditBalance,omitempty"`
	Currency           string  `protobuf:"bytes,9,opt,name=currency,proto3" json:"currency,omitempty"`
}

func (x *AccountBalanceReply) Reset() {
	*x = AccountBalanceReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountBalanceReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountBalanceReply) ProtoMessage() {}

func (x *AccountBalanceReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountBalanceReply.ProtoReflect.Descriptor instead.
func (*AccountBalanceReply) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{41}
}

func (x *AccountBalanceReply) GetBalance() float64 {
	if x != nil {
		return x.Balance
	}
	return 0
}

func (x *AccountBalanceReply) GetCashAccountBalance() float64 {
	if x != nil {
		return x.CashAccountBalance
	}
	return 0
}

func (x *AccountBalanceReply) GetOweAmount() float64 {
	if x != nil {
		return x.OweAmount
	}
	return 0
}

func (x *AccountBalanceReply) GetIsAllowArrears() bool {
	if x != nil {
		return x.IsAllowArrears
	}
	return false
}

func (x *AccountBalanceReply) GetIsCreditLimited() bool {
	if x != nil {
		return x.IsCreditLimited
	}
	return false
}

func (x *AccountBalanceReply) GetCreditAmount() float64 {
	if x != nil {
		return x.CreditAmount
	}
	return 0
}

func (x *AccountBalanceReply) GetCreditBalance() float64 {
	if x != nil {
		return x.CreditBalance
	}
	return 0
}

func (x *AccountBalanceReply) GetRealCreditBalance() float64 {
	if x != nil {
		return x.RealCreditBalance
	}
	return 0
}

func (x *AccountBalanceReply) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

// ECS
type GetECSFamilyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserUuid      string `protobuf:"bytes,1,opt,name=userUuid,proto3" json:"userUuid,omitempty"`
	PlatformId    int32  `protobuf:"varint,2,opt,name=platformId,proto3" json:"platformId,omitempty"`
	AccessKeyUuid string `protobuf:"bytes,3,opt,name=accessKeyUuid,proto3" json:"accessKeyUuid,omitempty"`
	RegionId      string `protobuf:"bytes,4,opt,name=regionId,proto3" json:"regionId,omitempty"`
	CpuCore       int32  `protobuf:"varint,5,opt,name=cpuCore,proto3" json:"cpuCore,omitempty"`
	Memory        int32  `protobuf:"varint,6,opt,name=memory,proto3" json:"memory,omitempty"`
}

func (x *GetECSFamilyReq) Reset() {
	*x = GetECSFamilyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetECSFamilyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetECSFamilyReq) ProtoMessage() {}

func (x *GetECSFamilyReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetECSFamilyReq.ProtoReflect.Descriptor instead.
func (*GetECSFamilyReq) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{42}
}

func (x *GetECSFamilyReq) GetUserUuid() string {
	if x != nil {
		return x.UserUuid
	}
	return ""
}

func (x *GetECSFamilyReq) GetPlatformId() int32 {
	if x != nil {
		return x.PlatformId
	}
	return 0
}

func (x *GetECSFamilyReq) GetAccessKeyUuid() string {
	if x != nil {
		return x.AccessKeyUuid
	}
	return ""
}

func (x *GetECSFamilyReq) GetRegionId() string {
	if x != nil {
		return x.RegionId
	}
	return ""
}

func (x *GetECSFamilyReq) GetCpuCore() int32 {
	if x != nil {
		return x.CpuCore
	}
	return 0
}

func (x *GetECSFamilyReq) GetMemory() int32 {
	if x != nil {
		return x.Memory
	}
	return 0
}

type GetECSFamilyReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetECSFamilyReply) Reset() {
	*x = GetECSFamilyReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetECSFamilyReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetECSFamilyReply) ProtoMessage() {}

func (x *GetECSFamilyReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetECSFamilyReply.ProtoReflect.Descriptor instead.
func (*GetECSFamilyReply) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{43}
}

type GetECSReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserUuid      string `protobuf:"bytes,1,opt,name=userUuid,proto3" json:"userUuid,omitempty"`
	OrgUuid       string `protobuf:"bytes,2,opt,name=orgUuid,proto3" json:"orgUuid,omitempty"`
	ProductUuid   string `protobuf:"bytes,3,opt,name=productUuid,proto3" json:"productUuid,omitempty"`
	PlatformId    int32  `protobuf:"varint,4,opt,name=platformId,proto3" json:"platformId,omitempty"`
	AccessKeyUuid string `protobuf:"bytes,5,opt,name=accessKeyUuid,proto3" json:"accessKeyUuid,omitempty"`
}

func (x *GetECSReq) Reset() {
	*x = GetECSReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetECSReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetECSReq) ProtoMessage() {}

func (x *GetECSReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetECSReq.ProtoReflect.Descriptor instead.
func (*GetECSReq) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{44}
}

func (x *GetECSReq) GetUserUuid() string {
	if x != nil {
		return x.UserUuid
	}
	return ""
}

func (x *GetECSReq) GetOrgUuid() string {
	if x != nil {
		return x.OrgUuid
	}
	return ""
}

func (x *GetECSReq) GetProductUuid() string {
	if x != nil {
		return x.ProductUuid
	}
	return ""
}

func (x *GetECSReq) GetPlatformId() int32 {
	if x != nil {
		return x.PlatformId
	}
	return 0
}

func (x *GetECSReq) GetAccessKeyUuid() string {
	if x != nil {
		return x.AccessKeyUuid
	}
	return ""
}

type GetECSReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetECSReply) Reset() {
	*x = GetECSReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetECSReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetECSReply) ProtoMessage() {}

func (x *GetECSReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetECSReply.ProtoReflect.Descriptor instead.
func (*GetECSReply) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{45}
}

type CreateECSReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserUuid      string `protobuf:"bytes,1,opt,name=userUuid,proto3" json:"userUuid,omitempty"`
	OrgUuid       string `protobuf:"bytes,2,opt,name=orgUuid,proto3" json:"orgUuid,omitempty"`
	ProductUuid   string `protobuf:"bytes,3,opt,name=productUuid,proto3" json:"productUuid,omitempty"`
	PlatformId    int32  `protobuf:"varint,4,opt,name=platformId,proto3" json:"platformId,omitempty"`
	AccessKeyUuid string `protobuf:"bytes,5,opt,name=accessKeyUuid,proto3" json:"accessKeyUuid,omitempty"`
}

func (x *CreateECSReq) Reset() {
	*x = CreateECSReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateECSReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateECSReq) ProtoMessage() {}

func (x *CreateECSReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateECSReq.ProtoReflect.Descriptor instead.
func (*CreateECSReq) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{46}
}

func (x *CreateECSReq) GetUserUuid() string {
	if x != nil {
		return x.UserUuid
	}
	return ""
}

func (x *CreateECSReq) GetOrgUuid() string {
	if x != nil {
		return x.OrgUuid
	}
	return ""
}

func (x *CreateECSReq) GetProductUuid() string {
	if x != nil {
		return x.ProductUuid
	}
	return ""
}

func (x *CreateECSReq) GetPlatformId() int32 {
	if x != nil {
		return x.PlatformId
	}
	return 0
}

func (x *CreateECSReq) GetAccessKeyUuid() string {
	if x != nil {
		return x.AccessKeyUuid
	}
	return ""
}

type CreateECSReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateECSReply) Reset() {
	*x = CreateECSReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateECSReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateECSReply) ProtoMessage() {}

func (x *CreateECSReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateECSReply.ProtoReflect.Descriptor instead.
func (*CreateECSReply) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{47}
}

type ReleaseECSReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserUuid      string `protobuf:"bytes,1,opt,name=userUuid,proto3" json:"userUuid,omitempty"`
	OrgUuid       string `protobuf:"bytes,2,opt,name=orgUuid,proto3" json:"orgUuid,omitempty"`
	ProductUuid   string `protobuf:"bytes,3,opt,name=productUuid,proto3" json:"productUuid,omitempty"`
	PlatformId    int32  `protobuf:"varint,4,opt,name=platformId,proto3" json:"platformId,omitempty"`
	AccessKeyUuid string `protobuf:"bytes,5,opt,name=accessKeyUuid,proto3" json:"accessKeyUuid,omitempty"`
}

func (x *ReleaseECSReq) Reset() {
	*x = ReleaseECSReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReleaseECSReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleaseECSReq) ProtoMessage() {}

func (x *ReleaseECSReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleaseECSReq.ProtoReflect.Descriptor instead.
func (*ReleaseECSReq) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{48}
}

func (x *ReleaseECSReq) GetUserUuid() string {
	if x != nil {
		return x.UserUuid
	}
	return ""
}

func (x *ReleaseECSReq) GetOrgUuid() string {
	if x != nil {
		return x.OrgUuid
	}
	return ""
}

func (x *ReleaseECSReq) GetProductUuid() string {
	if x != nil {
		return x.ProductUuid
	}
	return ""
}

func (x *ReleaseECSReq) GetPlatformId() int32 {
	if x != nil {
		return x.PlatformId
	}
	return 0
}

func (x *ReleaseECSReq) GetAccessKeyUuid() string {
	if x != nil {
		return x.AccessKeyUuid
	}
	return ""
}

type ReleaseECSReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReleaseECSReply) Reset() {
	*x = ReleaseECSReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReleaseECSReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleaseECSReply) ProtoMessage() {}

func (x *ReleaseECSReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleaseECSReply.ProtoReflect.Descriptor instead.
func (*ReleaseECSReply) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{49}
}

type UpdateECSReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserUuid      string `protobuf:"bytes,1,opt,name=userUuid,proto3" json:"userUuid,omitempty"`
	OrgUuid       string `protobuf:"bytes,2,opt,name=orgUuid,proto3" json:"orgUuid,omitempty"`
	ProductUuid   string `protobuf:"bytes,3,opt,name=productUuid,proto3" json:"productUuid,omitempty"`
	PlatformId    int32  `protobuf:"varint,4,opt,name=platformId,proto3" json:"platformId,omitempty"`
	AccessKeyUuid string `protobuf:"bytes,5,opt,name=accessKeyUuid,proto3" json:"accessKeyUuid,omitempty"`
}

func (x *UpdateECSReq) Reset() {
	*x = UpdateECSReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateECSReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateECSReq) ProtoMessage() {}

func (x *UpdateECSReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateECSReq.ProtoReflect.Descriptor instead.
func (*UpdateECSReq) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{50}
}

func (x *UpdateECSReq) GetUserUuid() string {
	if x != nil {
		return x.UserUuid
	}
	return ""
}

func (x *UpdateECSReq) GetOrgUuid() string {
	if x != nil {
		return x.OrgUuid
	}
	return ""
}

func (x *UpdateECSReq) GetProductUuid() string {
	if x != nil {
		return x.ProductUuid
	}
	return ""
}

func (x *UpdateECSReq) GetPlatformId() int32 {
	if x != nil {
		return x.PlatformId
	}
	return 0
}

func (x *UpdateECSReq) GetAccessKeyUuid() string {
	if x != nil {
		return x.AccessKeyUuid
	}
	return ""
}

type UpdateECSReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateECSReply) Reset() {
	*x = UpdateECSReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateECSReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateECSReply) ProtoMessage() {}

func (x *UpdateECSReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateECSReply.ProtoReflect.Descriptor instead.
func (*UpdateECSReply) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{51}
}

type ShutdownECSReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserUuid      string `protobuf:"bytes,1,opt,name=userUuid,proto3" json:"userUuid,omitempty"`
	OrgUuid       string `protobuf:"bytes,2,opt,name=orgUuid,proto3" json:"orgUuid,omitempty"`
	ProductUuid   string `protobuf:"bytes,3,opt,name=productUuid,proto3" json:"productUuid,omitempty"`
	PlatformId    int32  `protobuf:"varint,4,opt,name=platformId,proto3" json:"platformId,omitempty"`
	AccessKeyUuid string `protobuf:"bytes,5,opt,name=accessKeyUuid,proto3" json:"accessKeyUuid,omitempty"`
}

func (x *ShutdownECSReq) Reset() {
	*x = ShutdownECSReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShutdownECSReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShutdownECSReq) ProtoMessage() {}

func (x *ShutdownECSReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShutdownECSReq.ProtoReflect.Descriptor instead.
func (*ShutdownECSReq) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{52}
}

func (x *ShutdownECSReq) GetUserUuid() string {
	if x != nil {
		return x.UserUuid
	}
	return ""
}

func (x *ShutdownECSReq) GetOrgUuid() string {
	if x != nil {
		return x.OrgUuid
	}
	return ""
}

func (x *ShutdownECSReq) GetProductUuid() string {
	if x != nil {
		return x.ProductUuid
	}
	return ""
}

func (x *ShutdownECSReq) GetPlatformId() int32 {
	if x != nil {
		return x.PlatformId
	}
	return 0
}

func (x *ShutdownECSReq) GetAccessKeyUuid() string {
	if x != nil {
		return x.AccessKeyUuid
	}
	return ""
}

type ShutdownECSReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ShutdownECSReply) Reset() {
	*x = ShutdownECSReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShutdownECSReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShutdownECSReply) ProtoMessage() {}

func (x *ShutdownECSReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShutdownECSReply.ProtoReflect.Descriptor instead.
func (*ShutdownECSReply) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{53}
}

// EIP
type CreateEIPReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserUuid      string `protobuf:"bytes,1,opt,name=userUuid,proto3" json:"userUuid,omitempty"`
	OrgUuid       string `protobuf:"bytes,2,opt,name=orgUuid,proto3" json:"orgUuid,omitempty"`
	ProductUuid   string `protobuf:"bytes,3,opt,name=productUuid,proto3" json:"productUuid,omitempty"`
	PlatformId    int32  `protobuf:"varint,4,opt,name=platformId,proto3" json:"platformId,omitempty"`
	AccessKeyUuid string `protobuf:"bytes,5,opt,name=accessKeyUuid,proto3" json:"accessKeyUuid,omitempty"`
}

func (x *CreateEIPReq) Reset() {
	*x = CreateEIPReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateEIPReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateEIPReq) ProtoMessage() {}

func (x *CreateEIPReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateEIPReq.ProtoReflect.Descriptor instead.
func (*CreateEIPReq) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{54}
}

func (x *CreateEIPReq) GetUserUuid() string {
	if x != nil {
		return x.UserUuid
	}
	return ""
}

func (x *CreateEIPReq) GetOrgUuid() string {
	if x != nil {
		return x.OrgUuid
	}
	return ""
}

func (x *CreateEIPReq) GetProductUuid() string {
	if x != nil {
		return x.ProductUuid
	}
	return ""
}

func (x *CreateEIPReq) GetPlatformId() int32 {
	if x != nil {
		return x.PlatformId
	}
	return 0
}

func (x *CreateEIPReq) GetAccessKeyUuid() string {
	if x != nil {
		return x.AccessKeyUuid
	}
	return ""
}

type CreateEIPReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateEIPReply) Reset() {
	*x = CreateEIPReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateEIPReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateEIPReply) ProtoMessage() {}

func (x *CreateEIPReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateEIPReply.ProtoReflect.Descriptor instead.
func (*CreateEIPReply) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{55}
}

type GetEIPReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserUuid      string `protobuf:"bytes,1,opt,name=userUuid,proto3" json:"userUuid,omitempty"`
	PlatformId    int32  `protobuf:"varint,2,opt,name=platformId,proto3" json:"platformId,omitempty"`
	AccessKeyUuid string `protobuf:"bytes,3,opt,name=accessKeyUuid,proto3" json:"accessKeyUuid,omitempty"`
}

func (x *GetEIPReq) Reset() {
	*x = GetEIPReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEIPReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEIPReq) ProtoMessage() {}

func (x *GetEIPReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEIPReq.ProtoReflect.Descriptor instead.
func (*GetEIPReq) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{56}
}

func (x *GetEIPReq) GetUserUuid() string {
	if x != nil {
		return x.UserUuid
	}
	return ""
}

func (x *GetEIPReq) GetPlatformId() int32 {
	if x != nil {
		return x.PlatformId
	}
	return 0
}

func (x *GetEIPReq) GetAccessKeyUuid() string {
	if x != nil {
		return x.AccessKeyUuid
	}
	return ""
}

type GetEIPReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetEIPReply) Reset() {
	*x = GetEIPReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEIPReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEIPReply) ProtoMessage() {}

func (x *GetEIPReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEIPReply.ProtoReflect.Descriptor instead.
func (*GetEIPReply) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{57}
}

type UpdateEIPReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserUuid      string `protobuf:"bytes,1,opt,name=userUuid,proto3" json:"userUuid,omitempty"`
	OrgUuid       string `protobuf:"bytes,2,opt,name=orgUuid,proto3" json:"orgUuid,omitempty"`
	ProductUuid   string `protobuf:"bytes,3,opt,name=productUuid,proto3" json:"productUuid,omitempty"`
	PlatformId    int32  `protobuf:"varint,4,opt,name=platformId,proto3" json:"platformId,omitempty"`
	AccessKeyUuid string `protobuf:"bytes,5,opt,name=accessKeyUuid,proto3" json:"accessKeyUuid,omitempty"`
}

func (x *UpdateEIPReq) Reset() {
	*x = UpdateEIPReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateEIPReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateEIPReq) ProtoMessage() {}

func (x *UpdateEIPReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateEIPReq.ProtoReflect.Descriptor instead.
func (*UpdateEIPReq) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{58}
}

func (x *UpdateEIPReq) GetUserUuid() string {
	if x != nil {
		return x.UserUuid
	}
	return ""
}

func (x *UpdateEIPReq) GetOrgUuid() string {
	if x != nil {
		return x.OrgUuid
	}
	return ""
}

func (x *UpdateEIPReq) GetProductUuid() string {
	if x != nil {
		return x.ProductUuid
	}
	return ""
}

func (x *UpdateEIPReq) GetPlatformId() int32 {
	if x != nil {
		return x.PlatformId
	}
	return 0
}

func (x *UpdateEIPReq) GetAccessKeyUuid() string {
	if x != nil {
		return x.AccessKeyUuid
	}
	return ""
}

type UpdateEIPReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateEIPReply) Reset() {
	*x = UpdateEIPReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateEIPReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateEIPReply) ProtoMessage() {}

func (x *UpdateEIPReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateEIPReply.ProtoReflect.Descriptor instead.
func (*UpdateEIPReply) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{59}
}

type ReleaseEIPReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserUuid      string `protobuf:"bytes,1,opt,name=userUuid,proto3" json:"userUuid,omitempty"`
	OrgUuid       string `protobuf:"bytes,2,opt,name=orgUuid,proto3" json:"orgUuid,omitempty"`
	ProductUuid   string `protobuf:"bytes,3,opt,name=productUuid,proto3" json:"productUuid,omitempty"`
	PlatformId    int32  `protobuf:"varint,4,opt,name=platformId,proto3" json:"platformId,omitempty"`
	AccessKeyUuid string `protobuf:"bytes,5,opt,name=accessKeyUuid,proto3" json:"accessKeyUuid,omitempty"`
}

func (x *ReleaseEIPReq) Reset() {
	*x = ReleaseEIPReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReleaseEIPReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleaseEIPReq) ProtoMessage() {}

func (x *ReleaseEIPReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleaseEIPReq.ProtoReflect.Descriptor instead.
func (*ReleaseEIPReq) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{60}
}

func (x *ReleaseEIPReq) GetUserUuid() string {
	if x != nil {
		return x.UserUuid
	}
	return ""
}

func (x *ReleaseEIPReq) GetOrgUuid() string {
	if x != nil {
		return x.OrgUuid
	}
	return ""
}

func (x *ReleaseEIPReq) GetProductUuid() string {
	if x != nil {
		return x.ProductUuid
	}
	return ""
}

func (x *ReleaseEIPReq) GetPlatformId() int32 {
	if x != nil {
		return x.PlatformId
	}
	return 0
}

func (x *ReleaseEIPReq) GetAccessKeyUuid() string {
	if x != nil {
		return x.AccessKeyUuid
	}
	return ""
}

type ReleaseEIPReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReleaseEIPReply) Reset() {
	*x = ReleaseEIPReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReleaseEIPReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleaseEIPReply) ProtoMessage() {}

func (x *ReleaseEIPReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleaseEIPReply.ProtoReflect.Descriptor instead.
func (*ReleaseEIPReply) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{61}
}

// rds
type CreateRDSReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserUuid                string `protobuf:"bytes,1,opt,name=userUuid,proto3" json:"userUuid,omitempty"`
	OrgUuid                 string `protobuf:"bytes,2,opt,name=orgUuid,proto3" json:"orgUuid,omitempty"`
	ProductUuid             string `protobuf:"bytes,3,opt,name=productUuid,proto3" json:"productUuid,omitempty"`
	PlatformId              int32  `protobuf:"varint,4,opt,name=platformId,proto3" json:"platformId,omitempty"`
	AccountUuid             string `protobuf:"bytes,5,opt,name=accountUuid,proto3" json:"accountUuid,omitempty"`
	SubAccountUuid          string `protobuf:"bytes,6,opt,name=subAccountUuid,proto3" json:"subAccountUuid,omitempty"`
	SubAccountAccessKeyUuid string `protobuf:"bytes,7,opt,name=subAccountAccessKeyUuid,proto3" json:"subAccountAccessKeyUuid,omitempty"`
}

func (x *CreateRDSReq) Reset() {
	*x = CreateRDSReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRDSReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRDSReq) ProtoMessage() {}

func (x *CreateRDSReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRDSReq.ProtoReflect.Descriptor instead.
func (*CreateRDSReq) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{62}
}

func (x *CreateRDSReq) GetUserUuid() string {
	if x != nil {
		return x.UserUuid
	}
	return ""
}

func (x *CreateRDSReq) GetOrgUuid() string {
	if x != nil {
		return x.OrgUuid
	}
	return ""
}

func (x *CreateRDSReq) GetProductUuid() string {
	if x != nil {
		return x.ProductUuid
	}
	return ""
}

func (x *CreateRDSReq) GetPlatformId() int32 {
	if x != nil {
		return x.PlatformId
	}
	return 0
}

func (x *CreateRDSReq) GetAccountUuid() string {
	if x != nil {
		return x.AccountUuid
	}
	return ""
}

func (x *CreateRDSReq) GetSubAccountUuid() string {
	if x != nil {
		return x.SubAccountUuid
	}
	return ""
}

func (x *CreateRDSReq) GetSubAccountAccessKeyUuid() string {
	if x != nil {
		return x.SubAccountAccessKeyUuid
	}
	return ""
}

type CreateRDSReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateRDSReply) Reset() {
	*x = CreateRDSReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRDSReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRDSReply) ProtoMessage() {}

func (x *CreateRDSReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRDSReply.ProtoReflect.Descriptor instead.
func (*CreateRDSReply) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{63}
}

type GetRDSReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserUuid                string `protobuf:"bytes,1,opt,name=userUuid,proto3" json:"userUuid,omitempty"`
	OrgUuid                 string `protobuf:"bytes,2,opt,name=orgUuid,proto3" json:"orgUuid,omitempty"`
	ProductUuid             string `protobuf:"bytes,3,opt,name=productUuid,proto3" json:"productUuid,omitempty"`
	PlatformId              int32  `protobuf:"varint,4,opt,name=platformId,proto3" json:"platformId,omitempty"`
	AccountUuid             string `protobuf:"bytes,5,opt,name=accountUuid,proto3" json:"accountUuid,omitempty"`
	SubAccountUuid          string `protobuf:"bytes,6,opt,name=subAccountUuid,proto3" json:"subAccountUuid,omitempty"`
	SubAccountAccessKeyUuid string `protobuf:"bytes,7,opt,name=subAccountAccessKeyUuid,proto3" json:"subAccountAccessKeyUuid,omitempty"`
}

func (x *GetRDSReq) Reset() {
	*x = GetRDSReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRDSReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRDSReq) ProtoMessage() {}

func (x *GetRDSReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRDSReq.ProtoReflect.Descriptor instead.
func (*GetRDSReq) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{64}
}

func (x *GetRDSReq) GetUserUuid() string {
	if x != nil {
		return x.UserUuid
	}
	return ""
}

func (x *GetRDSReq) GetOrgUuid() string {
	if x != nil {
		return x.OrgUuid
	}
	return ""
}

func (x *GetRDSReq) GetProductUuid() string {
	if x != nil {
		return x.ProductUuid
	}
	return ""
}

func (x *GetRDSReq) GetPlatformId() int32 {
	if x != nil {
		return x.PlatformId
	}
	return 0
}

func (x *GetRDSReq) GetAccountUuid() string {
	if x != nil {
		return x.AccountUuid
	}
	return ""
}

func (x *GetRDSReq) GetSubAccountUuid() string {
	if x != nil {
		return x.SubAccountUuid
	}
	return ""
}

func (x *GetRDSReq) GetSubAccountAccessKeyUuid() string {
	if x != nil {
		return x.SubAccountAccessKeyUuid
	}
	return ""
}

type GetRDSReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetRDSReply) Reset() {
	*x = GetRDSReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRDSReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRDSReply) ProtoMessage() {}

func (x *GetRDSReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRDSReply.ProtoReflect.Descriptor instead.
func (*GetRDSReply) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{65}
}

type ListRDSReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserUuid                string `protobuf:"bytes,1,opt,name=userUuid,proto3" json:"userUuid,omitempty"`
	OrgUuid                 string `protobuf:"bytes,2,opt,name=orgUuid,proto3" json:"orgUuid,omitempty"`
	ProductUuid             string `protobuf:"bytes,3,opt,name=productUuid,proto3" json:"productUuid,omitempty"`
	PlatformId              int32  `protobuf:"varint,4,opt,name=platformId,proto3" json:"platformId,omitempty"`
	AccountUuid             string `protobuf:"bytes,5,opt,name=accountUuid,proto3" json:"accountUuid,omitempty"`
	SubAccountUuid          string `protobuf:"bytes,6,opt,name=subAccountUuid,proto3" json:"subAccountUuid,omitempty"`
	SubAccountAccessKeyUuid string `protobuf:"bytes,7,opt,name=subAccountAccessKeyUuid,proto3" json:"subAccountAccessKeyUuid,omitempty"`
	Region                  string `protobuf:"bytes,8,opt,name=region,proto3" json:"region,omitempty"`
}

func (x *ListRDSReq) Reset() {
	*x = ListRDSReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRDSReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRDSReq) ProtoMessage() {}

func (x *ListRDSReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRDSReq.ProtoReflect.Descriptor instead.
func (*ListRDSReq) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{66}
}

func (x *ListRDSReq) GetUserUuid() string {
	if x != nil {
		return x.UserUuid
	}
	return ""
}

func (x *ListRDSReq) GetOrgUuid() string {
	if x != nil {
		return x.OrgUuid
	}
	return ""
}

func (x *ListRDSReq) GetProductUuid() string {
	if x != nil {
		return x.ProductUuid
	}
	return ""
}

func (x *ListRDSReq) GetPlatformId() int32 {
	if x != nil {
		return x.PlatformId
	}
	return 0
}

func (x *ListRDSReq) GetAccountUuid() string {
	if x != nil {
		return x.AccountUuid
	}
	return ""
}

func (x *ListRDSReq) GetSubAccountUuid() string {
	if x != nil {
		return x.SubAccountUuid
	}
	return ""
}

func (x *ListRDSReq) GetSubAccountAccessKeyUuid() string {
	if x != nil {
		return x.SubAccountAccessKeyUuid
	}
	return ""
}

func (x *ListRDSReq) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

type ListRDSReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Instances []*ListRDSReply_Instance `protobuf:"bytes,1,rep,name=instances,proto3" json:"instances,omitempty"`
}

func (x *ListRDSReply) Reset() {
	*x = ListRDSReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRDSReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRDSReply) ProtoMessage() {}

func (x *ListRDSReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRDSReply.ProtoReflect.Descriptor instead.
func (*ListRDSReply) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{67}
}

func (x *ListRDSReply) GetInstances() []*ListRDSReply_Instance {
	if x != nil {
		return x.Instances
	}
	return nil
}

type ListRDSSlowLogsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserUuid                string `protobuf:"bytes,1,opt,name=userUuid,proto3" json:"userUuid,omitempty"`
	OrgUuid                 string `protobuf:"bytes,2,opt,name=orgUuid,proto3" json:"orgUuid,omitempty"`
	ProductUuid             string `protobuf:"bytes,3,opt,name=productUuid,proto3" json:"productUuid,omitempty"`
	PlatformId              int32  `protobuf:"varint,4,opt,name=platformId,proto3" json:"platformId,omitempty"`
	AccountUuid             string `protobuf:"bytes,5,opt,name=accountUuid,proto3" json:"accountUuid,omitempty"`
	SubAccountUuid          string `protobuf:"bytes,6,opt,name=subAccountUuid,proto3" json:"subAccountUuid,omitempty"`
	SubAccountAccessKeyUuid string `protobuf:"bytes,7,opt,name=subAccountAccessKeyUuid,proto3" json:"subAccountAccessKeyUuid,omitempty"`
	Region                  string `protobuf:"bytes,8,opt,name=region,proto3" json:"region,omitempty"`
	InstanceId              string `protobuf:"bytes,9,opt,name=instanceId,proto3" json:"instanceId,omitempty"`
	StartTime               int64  `protobuf:"varint,10,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime                 int64  `protobuf:"varint,11,opt,name=endTime,proto3" json:"endTime,omitempty"`
}

func (x *ListRDSSlowLogsReq) Reset() {
	*x = ListRDSSlowLogsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRDSSlowLogsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRDSSlowLogsReq) ProtoMessage() {}

func (x *ListRDSSlowLogsReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRDSSlowLogsReq.ProtoReflect.Descriptor instead.
func (*ListRDSSlowLogsReq) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{68}
}

func (x *ListRDSSlowLogsReq) GetUserUuid() string {
	if x != nil {
		return x.UserUuid
	}
	return ""
}

func (x *ListRDSSlowLogsReq) GetOrgUuid() string {
	if x != nil {
		return x.OrgUuid
	}
	return ""
}

func (x *ListRDSSlowLogsReq) GetProductUuid() string {
	if x != nil {
		return x.ProductUuid
	}
	return ""
}

func (x *ListRDSSlowLogsReq) GetPlatformId() int32 {
	if x != nil {
		return x.PlatformId
	}
	return 0
}

func (x *ListRDSSlowLogsReq) GetAccountUuid() string {
	if x != nil {
		return x.AccountUuid
	}
	return ""
}

func (x *ListRDSSlowLogsReq) GetSubAccountUuid() string {
	if x != nil {
		return x.SubAccountUuid
	}
	return ""
}

func (x *ListRDSSlowLogsReq) GetSubAccountAccessKeyUuid() string {
	if x != nil {
		return x.SubAccountAccessKeyUuid
	}
	return ""
}

func (x *ListRDSSlowLogsReq) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *ListRDSSlowLogsReq) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

func (x *ListRDSSlowLogsReq) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *ListRDSSlowLogsReq) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

type ListRDSSlowLogsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SlowLogs []*ListRDSSlowLogsReply_SlowLog `protobuf:"bytes,1,rep,name=SlowLogs,proto3" json:"SlowLogs,omitempty"`
}

func (x *ListRDSSlowLogsReply) Reset() {
	*x = ListRDSSlowLogsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRDSSlowLogsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRDSSlowLogsReply) ProtoMessage() {}

func (x *ListRDSSlowLogsReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRDSSlowLogsReply.ProtoReflect.Descriptor instead.
func (*ListRDSSlowLogsReply) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{69}
}

func (x *ListRDSSlowLogsReply) GetSlowLogs() []*ListRDSSlowLogsReply_SlowLog {
	if x != nil {
		return x.SlowLogs
	}
	return nil
}

type ListRDSErrLogsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserUuid                string `protobuf:"bytes,1,opt,name=userUuid,proto3" json:"userUuid,omitempty"`
	OrgUuid                 string `protobuf:"bytes,2,opt,name=orgUuid,proto3" json:"orgUuid,omitempty"`
	ProductUuid             string `protobuf:"bytes,3,opt,name=productUuid,proto3" json:"productUuid,omitempty"`
	PlatformId              int32  `protobuf:"varint,4,opt,name=platformId,proto3" json:"platformId,omitempty"`
	AccountUuid             string `protobuf:"bytes,5,opt,name=accountUuid,proto3" json:"accountUuid,omitempty"`
	SubAccountUuid          string `protobuf:"bytes,6,opt,name=subAccountUuid,proto3" json:"subAccountUuid,omitempty"`
	SubAccountAccessKeyUuid string `protobuf:"bytes,7,opt,name=subAccountAccessKeyUuid,proto3" json:"subAccountAccessKeyUuid,omitempty"`
	Region                  string `protobuf:"bytes,8,opt,name=region,proto3" json:"region,omitempty"`
	InstanceId              string `protobuf:"bytes,9,opt,name=instanceId,proto3" json:"instanceId,omitempty"`
	StartTime               int64  `protobuf:"varint,10,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime                 int64  `protobuf:"varint,11,opt,name=endTime,proto3" json:"endTime,omitempty"`
}

func (x *ListRDSErrLogsReq) Reset() {
	*x = ListRDSErrLogsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRDSErrLogsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRDSErrLogsReq) ProtoMessage() {}

func (x *ListRDSErrLogsReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRDSErrLogsReq.ProtoReflect.Descriptor instead.
func (*ListRDSErrLogsReq) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{70}
}

func (x *ListRDSErrLogsReq) GetUserUuid() string {
	if x != nil {
		return x.UserUuid
	}
	return ""
}

func (x *ListRDSErrLogsReq) GetOrgUuid() string {
	if x != nil {
		return x.OrgUuid
	}
	return ""
}

func (x *ListRDSErrLogsReq) GetProductUuid() string {
	if x != nil {
		return x.ProductUuid
	}
	return ""
}

func (x *ListRDSErrLogsReq) GetPlatformId() int32 {
	if x != nil {
		return x.PlatformId
	}
	return 0
}

func (x *ListRDSErrLogsReq) GetAccountUuid() string {
	if x != nil {
		return x.AccountUuid
	}
	return ""
}

func (x *ListRDSErrLogsReq) GetSubAccountUuid() string {
	if x != nil {
		return x.SubAccountUuid
	}
	return ""
}

func (x *ListRDSErrLogsReq) GetSubAccountAccessKeyUuid() string {
	if x != nil {
		return x.SubAccountAccessKeyUuid
	}
	return ""
}

func (x *ListRDSErrLogsReq) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *ListRDSErrLogsReq) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

func (x *ListRDSErrLogsReq) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *ListRDSErrLogsReq) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

type ListRDSErrLogsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrLogs []*ListRDSErrLogsReply_ErrLog `protobuf:"bytes,1,rep,name=errLogs,proto3" json:"errLogs,omitempty"`
}

func (x *ListRDSErrLogsReply) Reset() {
	*x = ListRDSErrLogsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRDSErrLogsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRDSErrLogsReply) ProtoMessage() {}

func (x *ListRDSErrLogsReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRDSErrLogsReply.ProtoReflect.Descriptor instead.
func (*ListRDSErrLogsReply) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{71}
}

func (x *ListRDSErrLogsReply) GetErrLogs() []*ListRDSErrLogsReply_ErrLog {
	if x != nil {
		return x.ErrLogs
	}
	return nil
}

// slb
type CreateLBReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserUuid      string `protobuf:"bytes,1,opt,name=userUuid,proto3" json:"userUuid,omitempty"`
	OrgUuid       string `protobuf:"bytes,2,opt,name=orgUuid,proto3" json:"orgUuid,omitempty"`
	ProductUuid   string `protobuf:"bytes,3,opt,name=productUuid,proto3" json:"productUuid,omitempty"`
	PlatformId    int32  `protobuf:"varint,4,opt,name=platformId,proto3" json:"platformId,omitempty"`
	AccessKeyUuid string `protobuf:"bytes,5,opt,name=accessKeyUuid,proto3" json:"accessKeyUuid,omitempty"`
}

func (x *CreateLBReq) Reset() {
	*x = CreateLBReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateLBReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLBReq) ProtoMessage() {}

func (x *CreateLBReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLBReq.ProtoReflect.Descriptor instead.
func (*CreateLBReq) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{72}
}

func (x *CreateLBReq) GetUserUuid() string {
	if x != nil {
		return x.UserUuid
	}
	return ""
}

func (x *CreateLBReq) GetOrgUuid() string {
	if x != nil {
		return x.OrgUuid
	}
	return ""
}

func (x *CreateLBReq) GetProductUuid() string {
	if x != nil {
		return x.ProductUuid
	}
	return ""
}

func (x *CreateLBReq) GetPlatformId() int32 {
	if x != nil {
		return x.PlatformId
	}
	return 0
}

func (x *CreateLBReq) GetAccessKeyUuid() string {
	if x != nil {
		return x.AccessKeyUuid
	}
	return ""
}

type CreateLBReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateLBReply) Reset() {
	*x = CreateLBReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateLBReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLBReply) ProtoMessage() {}

func (x *CreateLBReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLBReply.ProtoReflect.Descriptor instead.
func (*CreateLBReply) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{73}
}

type GetLBReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserUuid      string `protobuf:"bytes,1,opt,name=userUuid,proto3" json:"userUuid,omitempty"`
	OrgUuid       string `protobuf:"bytes,2,opt,name=orgUuid,proto3" json:"orgUuid,omitempty"`
	ProductUuid   string `protobuf:"bytes,3,opt,name=productUuid,proto3" json:"productUuid,omitempty"`
	PlatformId    int32  `protobuf:"varint,4,opt,name=platformId,proto3" json:"platformId,omitempty"`
	AccessKeyUuid string `protobuf:"bytes,5,opt,name=accessKeyUuid,proto3" json:"accessKeyUuid,omitempty"`
}

func (x *GetLBReq) Reset() {
	*x = GetLBReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLBReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLBReq) ProtoMessage() {}

func (x *GetLBReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLBReq.ProtoReflect.Descriptor instead.
func (*GetLBReq) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{74}
}

func (x *GetLBReq) GetUserUuid() string {
	if x != nil {
		return x.UserUuid
	}
	return ""
}

func (x *GetLBReq) GetOrgUuid() string {
	if x != nil {
		return x.OrgUuid
	}
	return ""
}

func (x *GetLBReq) GetProductUuid() string {
	if x != nil {
		return x.ProductUuid
	}
	return ""
}

func (x *GetLBReq) GetPlatformId() int32 {
	if x != nil {
		return x.PlatformId
	}
	return 0
}

func (x *GetLBReq) GetAccessKeyUuid() string {
	if x != nil {
		return x.AccessKeyUuid
	}
	return ""
}

type GetLBReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetLBReply) Reset() {
	*x = GetLBReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLBReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLBReply) ProtoMessage() {}

func (x *GetLBReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLBReply.ProtoReflect.Descriptor instead.
func (*GetLBReply) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{75}
}

type ReleaseLBReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserUuid      string `protobuf:"bytes,1,opt,name=userUuid,proto3" json:"userUuid,omitempty"`
	OrgUuid       string `protobuf:"bytes,2,opt,name=orgUuid,proto3" json:"orgUuid,omitempty"`
	ProductUuid   string `protobuf:"bytes,3,opt,name=productUuid,proto3" json:"productUuid,omitempty"`
	PlatformId    int32  `protobuf:"varint,4,opt,name=platformId,proto3" json:"platformId,omitempty"`
	AccessKeyUuid string `protobuf:"bytes,5,opt,name=accessKeyUuid,proto3" json:"accessKeyUuid,omitempty"`
}

func (x *ReleaseLBReq) Reset() {
	*x = ReleaseLBReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReleaseLBReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleaseLBReq) ProtoMessage() {}

func (x *ReleaseLBReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleaseLBReq.ProtoReflect.Descriptor instead.
func (*ReleaseLBReq) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{76}
}

func (x *ReleaseLBReq) GetUserUuid() string {
	if x != nil {
		return x.UserUuid
	}
	return ""
}

func (x *ReleaseLBReq) GetOrgUuid() string {
	if x != nil {
		return x.OrgUuid
	}
	return ""
}

func (x *ReleaseLBReq) GetProductUuid() string {
	if x != nil {
		return x.ProductUuid
	}
	return ""
}

func (x *ReleaseLBReq) GetPlatformId() int32 {
	if x != nil {
		return x.PlatformId
	}
	return 0
}

func (x *ReleaseLBReq) GetAccessKeyUuid() string {
	if x != nil {
		return x.AccessKeyUuid
	}
	return ""
}

type ReleaseLBReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReleaseLBReply) Reset() {
	*x = ReleaseLBReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReleaseLBReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleaseLBReply) ProtoMessage() {}

func (x *ReleaseLBReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleaseLBReply.ProtoReflect.Descriptor instead.
func (*ReleaseLBReply) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{77}
}

// CDN
// 列出 CDN 记录
type ListCDNReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserUuid                string `protobuf:"bytes,1,opt,name=userUuid,proto3" json:"userUuid,omitempty"`
	OrgUuid                 string `protobuf:"bytes,2,opt,name=orgUuid,proto3" json:"orgUuid,omitempty"`
	ProductUuid             string `protobuf:"bytes,3,opt,name=productUuid,proto3" json:"productUuid,omitempty"`
	PlatformId              int32  `protobuf:"varint,4,opt,name=platformId,proto3" json:"platformId,omitempty"`
	AccountUuid             string `protobuf:"bytes,5,opt,name=accountUuid,proto3" json:"accountUuid,omitempty"`
	SubAccountUuid          string `protobuf:"bytes,6,opt,name=subAccountUuid,proto3" json:"subAccountUuid,omitempty"`
	SubAccountAccessKeyUuid string `protobuf:"bytes,7,opt,name=subAccountAccessKeyUuid,proto3" json:"subAccountAccessKeyUuid,omitempty"`
}

func (x *ListCDNReq) Reset() {
	*x = ListCDNReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCDNReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCDNReq) ProtoMessage() {}

func (x *ListCDNReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCDNReq.ProtoReflect.Descriptor instead.
func (*ListCDNReq) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{78}
}

func (x *ListCDNReq) GetUserUuid() string {
	if x != nil {
		return x.UserUuid
	}
	return ""
}

func (x *ListCDNReq) GetOrgUuid() string {
	if x != nil {
		return x.OrgUuid
	}
	return ""
}

func (x *ListCDNReq) GetProductUuid() string {
	if x != nil {
		return x.ProductUuid
	}
	return ""
}

func (x *ListCDNReq) GetPlatformId() int32 {
	if x != nil {
		return x.PlatformId
	}
	return 0
}

func (x *ListCDNReq) GetAccountUuid() string {
	if x != nil {
		return x.AccountUuid
	}
	return ""
}

func (x *ListCDNReq) GetSubAccountUuid() string {
	if x != nil {
		return x.SubAccountUuid
	}
	return ""
}

func (x *ListCDNReq) GetSubAccountAccessKeyUuid() string {
	if x != nil {
		return x.SubAccountAccessKeyUuid
	}
	return ""
}

type ListCDNReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cdn []*ListCDNReply_Cdn `protobuf:"bytes,1,rep,name=cdn,proto3" json:"cdn,omitempty"`
}

func (x *ListCDNReply) Reset() {
	*x = ListCDNReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCDNReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCDNReply) ProtoMessage() {}

func (x *ListCDNReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCDNReply.ProtoReflect.Descriptor instead.
func (*ListCDNReply) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{79}
}

func (x *ListCDNReply) GetCdn() []*ListCDNReply_Cdn {
	if x != nil {
		return x.Cdn
	}
	return nil
}

// 获取 CDN 记录
type GetCDNReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserUuid                string `protobuf:"bytes,1,opt,name=userUuid,proto3" json:"userUuid,omitempty"`
	OrgUuid                 string `protobuf:"bytes,2,opt,name=orgUuid,proto3" json:"orgUuid,omitempty"`
	ProductUuid             string `protobuf:"bytes,3,opt,name=productUuid,proto3" json:"productUuid,omitempty"`
	PlatformId              int32  `protobuf:"varint,4,opt,name=platformId,proto3" json:"platformId,omitempty"`
	AccountUuid             string `protobuf:"bytes,5,opt,name=accountUuid,proto3" json:"accountUuid,omitempty"`
	SubAccountUuid          string `protobuf:"bytes,6,opt,name=subAccountUuid,proto3" json:"subAccountUuid,omitempty"`
	SubAccountAccessKeyUuid string `protobuf:"bytes,7,opt,name=subAccountAccessKeyUuid,proto3" json:"subAccountAccessKeyUuid,omitempty"`
	DomainName              string `protobuf:"bytes,8,opt,name=domainName,proto3" json:"domainName,omitempty"`
}

func (x *GetCDNReq) Reset() {
	*x = GetCDNReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCDNReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCDNReq) ProtoMessage() {}

func (x *GetCDNReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCDNReq.ProtoReflect.Descriptor instead.
func (*GetCDNReq) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{80}
}

func (x *GetCDNReq) GetUserUuid() string {
	if x != nil {
		return x.UserUuid
	}
	return ""
}

func (x *GetCDNReq) GetOrgUuid() string {
	if x != nil {
		return x.OrgUuid
	}
	return ""
}

func (x *GetCDNReq) GetProductUuid() string {
	if x != nil {
		return x.ProductUuid
	}
	return ""
}

func (x *GetCDNReq) GetPlatformId() int32 {
	if x != nil {
		return x.PlatformId
	}
	return 0
}

func (x *GetCDNReq) GetAccountUuid() string {
	if x != nil {
		return x.AccountUuid
	}
	return ""
}

func (x *GetCDNReq) GetSubAccountUuid() string {
	if x != nil {
		return x.SubAccountUuid
	}
	return ""
}

func (x *GetCDNReq) GetSubAccountAccessKeyUuid() string {
	if x != nil {
		return x.SubAccountAccessKeyUuid
	}
	return ""
}

func (x *GetCDNReq) GetDomainName() string {
	if x != nil {
		return x.DomainName
	}
	return ""
}

type GetCDNReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Domain       string                `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	Status       string                `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Cname        string                `protobuf:"bytes,3,opt,name=cname,proto3" json:"cname,omitempty"`
	Origin       []*GetCDNReply_Origin `protobuf:"bytes,4,rep,name=origin,proto3" json:"origin,omitempty"`
	BackupOrigin []*GetCDNReply_Origin `protobuf:"bytes,5,rep,name=backupOrigin,proto3" json:"backupOrigin,omitempty"`
}

func (x *GetCDNReply) Reset() {
	*x = GetCDNReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCDNReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCDNReply) ProtoMessage() {}

func (x *GetCDNReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCDNReply.ProtoReflect.Descriptor instead.
func (*GetCDNReply) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{81}
}

func (x *GetCDNReply) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *GetCDNReply) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *GetCDNReply) GetCname() string {
	if x != nil {
		return x.Cname
	}
	return ""
}

func (x *GetCDNReply) GetOrigin() []*GetCDNReply_Origin {
	if x != nil {
		return x.Origin
	}
	return nil
}

func (x *GetCDNReply) GetBackupOrigin() []*GetCDNReply_Origin {
	if x != nil {
		return x.BackupOrigin
	}
	return nil
}

// 添加 CDN 记录
type AddCDNReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserUuid                string `protobuf:"bytes,1,opt,name=userUuid,proto3" json:"userUuid,omitempty"`
	OrgUuid                 string `protobuf:"bytes,2,opt,name=orgUuid,proto3" json:"orgUuid,omitempty"`
	ProductUuid             string `protobuf:"bytes,3,opt,name=productUuid,proto3" json:"productUuid,omitempty"`
	PlatformId              int32  `protobuf:"varint,4,opt,name=platformId,proto3" json:"platformId,omitempty"`
	AccountUuid             string `protobuf:"bytes,5,opt,name=accountUuid,proto3" json:"accountUuid,omitempty"`
	SubAccountUuid          string `protobuf:"bytes,6,opt,name=subAccountUuid,proto3" json:"subAccountUuid,omitempty"`
	SubAccountAccessKeyUuid string `protobuf:"bytes,7,opt,name=subAccountAccessKeyUuid,proto3" json:"subAccountAccessKeyUuid,omitempty"`
	DomainName              string `protobuf:"bytes,8,opt,name=domainName,proto3" json:"domainName,omitempty"`
	Source                  string `protobuf:"bytes,9,opt,name=source,proto3" json:"source,omitempty"`
}

func (x *AddCDNReq) Reset() {
	*x = AddCDNReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddCDNReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCDNReq) ProtoMessage() {}

func (x *AddCDNReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCDNReq.ProtoReflect.Descriptor instead.
func (*AddCDNReq) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{82}
}

func (x *AddCDNReq) GetUserUuid() string {
	if x != nil {
		return x.UserUuid
	}
	return ""
}

func (x *AddCDNReq) GetOrgUuid() string {
	if x != nil {
		return x.OrgUuid
	}
	return ""
}

func (x *AddCDNReq) GetProductUuid() string {
	if x != nil {
		return x.ProductUuid
	}
	return ""
}

func (x *AddCDNReq) GetPlatformId() int32 {
	if x != nil {
		return x.PlatformId
	}
	return 0
}

func (x *AddCDNReq) GetAccountUuid() string {
	if x != nil {
		return x.AccountUuid
	}
	return ""
}

func (x *AddCDNReq) GetSubAccountUuid() string {
	if x != nil {
		return x.SubAccountUuid
	}
	return ""
}

func (x *AddCDNReq) GetSubAccountAccessKeyUuid() string {
	if x != nil {
		return x.SubAccountAccessKeyUuid
	}
	return ""
}

func (x *AddCDNReq) GetDomainName() string {
	if x != nil {
		return x.DomainName
	}
	return ""
}

func (x *AddCDNReq) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

type AddCDNReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *AddCDNReply) Reset() {
	*x = AddCDNReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddCDNReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCDNReply) ProtoMessage() {}

func (x *AddCDNReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCDNReply.ProtoReflect.Descriptor instead.
func (*AddCDNReply) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{83}
}

func (x *AddCDNReply) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

type ImportCDNReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserUuid                string `protobuf:"bytes,1,opt,name=userUuid,proto3" json:"userUuid,omitempty"`
	OrgUuid                 string `protobuf:"bytes,2,opt,name=orgUuid,proto3" json:"orgUuid,omitempty"`
	ProductUuid             string `protobuf:"bytes,3,opt,name=productUuid,proto3" json:"productUuid,omitempty"`
	PlatformId              int32  `protobuf:"varint,4,opt,name=platformId,proto3" json:"platformId,omitempty"`
	AccountUuid             string `protobuf:"bytes,5,opt,name=accountUuid,proto3" json:"accountUuid,omitempty"`
	SubAccountUuid          string `protobuf:"bytes,6,opt,name=subAccountUuid,proto3" json:"subAccountUuid,omitempty"`
	SubAccountAccessKeyUuid string `protobuf:"bytes,7,opt,name=subAccountAccessKeyUuid,proto3" json:"subAccountAccessKeyUuid,omitempty"`
	DomainName              string `protobuf:"bytes,8,opt,name=domainName,proto3" json:"domainName,omitempty"`
}

func (x *ImportCDNReq) Reset() {
	*x = ImportCDNReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImportCDNReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportCDNReq) ProtoMessage() {}

func (x *ImportCDNReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportCDNReq.ProtoReflect.Descriptor instead.
func (*ImportCDNReq) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{84}
}

func (x *ImportCDNReq) GetUserUuid() string {
	if x != nil {
		return x.UserUuid
	}
	return ""
}

func (x *ImportCDNReq) GetOrgUuid() string {
	if x != nil {
		return x.OrgUuid
	}
	return ""
}

func (x *ImportCDNReq) GetProductUuid() string {
	if x != nil {
		return x.ProductUuid
	}
	return ""
}

func (x *ImportCDNReq) GetPlatformId() int32 {
	if x != nil {
		return x.PlatformId
	}
	return 0
}

func (x *ImportCDNReq) GetAccountUuid() string {
	if x != nil {
		return x.AccountUuid
	}
	return ""
}

func (x *ImportCDNReq) GetSubAccountUuid() string {
	if x != nil {
		return x.SubAccountUuid
	}
	return ""
}

func (x *ImportCDNReq) GetSubAccountAccessKeyUuid() string {
	if x != nil {
		return x.SubAccountAccessKeyUuid
	}
	return ""
}

func (x *ImportCDNReq) GetDomainName() string {
	if x != nil {
		return x.DomainName
	}
	return ""
}

type ImportCDNReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *ImportCDNReply) Reset() {
	*x = ImportCDNReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImportCDNReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportCDNReply) ProtoMessage() {}

func (x *ImportCDNReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportCDNReply.ProtoReflect.Descriptor instead.
func (*ImportCDNReply) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{85}
}

func (x *ImportCDNReply) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

// 释放 CDN 记录
type ReleaseCDNReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserUuid                string `protobuf:"bytes,1,opt,name=userUuid,proto3" json:"userUuid,omitempty"`
	OrgUuid                 string `protobuf:"bytes,2,opt,name=orgUuid,proto3" json:"orgUuid,omitempty"`
	ProductUuid             string `protobuf:"bytes,3,opt,name=productUuid,proto3" json:"productUuid,omitempty"`
	PlatformId              int32  `protobuf:"varint,4,opt,name=platformId,proto3" json:"platformId,omitempty"`
	AccountUuid             string `protobuf:"bytes,5,opt,name=accountUuid,proto3" json:"accountUuid,omitempty"`
	SubAccountUuid          string `protobuf:"bytes,6,opt,name=subAccountUuid,proto3" json:"subAccountUuid,omitempty"`
	SubAccountAccessKeyUuid string `protobuf:"bytes,7,opt,name=subAccountAccessKeyUuid,proto3" json:"subAccountAccessKeyUuid,omitempty"`
}

func (x *ReleaseCDNReq) Reset() {
	*x = ReleaseCDNReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReleaseCDNReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleaseCDNReq) ProtoMessage() {}

func (x *ReleaseCDNReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleaseCDNReq.ProtoReflect.Descriptor instead.
func (*ReleaseCDNReq) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{86}
}

func (x *ReleaseCDNReq) GetUserUuid() string {
	if x != nil {
		return x.UserUuid
	}
	return ""
}

func (x *ReleaseCDNReq) GetOrgUuid() string {
	if x != nil {
		return x.OrgUuid
	}
	return ""
}

func (x *ReleaseCDNReq) GetProductUuid() string {
	if x != nil {
		return x.ProductUuid
	}
	return ""
}

func (x *ReleaseCDNReq) GetPlatformId() int32 {
	if x != nil {
		return x.PlatformId
	}
	return 0
}

func (x *ReleaseCDNReq) GetAccountUuid() string {
	if x != nil {
		return x.AccountUuid
	}
	return ""
}

func (x *ReleaseCDNReq) GetSubAccountUuid() string {
	if x != nil {
		return x.SubAccountUuid
	}
	return ""
}

func (x *ReleaseCDNReq) GetSubAccountAccessKeyUuid() string {
	if x != nil {
		return x.SubAccountAccessKeyUuid
	}
	return ""
}

type ReleaseCDNReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *ReleaseCDNReply) Reset() {
	*x = ReleaseCDNReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReleaseCDNReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleaseCDNReply) ProtoMessage() {}

func (x *ReleaseCDNReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleaseCDNReply.ProtoReflect.Descriptor instead.
func (*ReleaseCDNReply) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{87}
}

func (x *ReleaseCDNReply) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

// 更新 CDN 记录
type UpdateCDNReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserUuid                string `protobuf:"bytes,1,opt,name=userUuid,proto3" json:"userUuid,omitempty"`
	OrgUuid                 string `protobuf:"bytes,2,opt,name=orgUuid,proto3" json:"orgUuid,omitempty"`
	ProductUuid             string `protobuf:"bytes,3,opt,name=productUuid,proto3" json:"productUuid,omitempty"`
	PlatformId              int32  `protobuf:"varint,4,opt,name=platformId,proto3" json:"platformId,omitempty"`
	AccountUuid             string `protobuf:"bytes,5,opt,name=accountUuid,proto3" json:"accountUuid,omitempty"`
	SubAccountUuid          string `protobuf:"bytes,6,opt,name=subAccountUuid,proto3" json:"subAccountUuid,omitempty"`
	SubAccountAccessKeyUuid string `protobuf:"bytes,7,opt,name=subAccountAccessKeyUuid,proto3" json:"subAccountAccessKeyUuid,omitempty"`
}

func (x *UpdateCDNReq) Reset() {
	*x = UpdateCDNReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCDNReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCDNReq) ProtoMessage() {}

func (x *UpdateCDNReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCDNReq.ProtoReflect.Descriptor instead.
func (*UpdateCDNReq) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{88}
}

func (x *UpdateCDNReq) GetUserUuid() string {
	if x != nil {
		return x.UserUuid
	}
	return ""
}

func (x *UpdateCDNReq) GetOrgUuid() string {
	if x != nil {
		return x.OrgUuid
	}
	return ""
}

func (x *UpdateCDNReq) GetProductUuid() string {
	if x != nil {
		return x.ProductUuid
	}
	return ""
}

func (x *UpdateCDNReq) GetPlatformId() int32 {
	if x != nil {
		return x.PlatformId
	}
	return 0
}

func (x *UpdateCDNReq) GetAccountUuid() string {
	if x != nil {
		return x.AccountUuid
	}
	return ""
}

func (x *UpdateCDNReq) GetSubAccountUuid() string {
	if x != nil {
		return x.SubAccountUuid
	}
	return ""
}

func (x *UpdateCDNReq) GetSubAccountAccessKeyUuid() string {
	if x != nil {
		return x.SubAccountAccessKeyUuid
	}
	return ""
}

type UpdateCDNReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *UpdateCDNReply) Reset() {
	*x = UpdateCDNReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCDNReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCDNReply) ProtoMessage() {}

func (x *UpdateCDNReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCDNReply.ProtoReflect.Descriptor instead.
func (*UpdateCDNReply) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{89}
}

func (x *UpdateCDNReply) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

// 刷新 CDN 缓存
type RefreshCDNCacheReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserUuid                string   `protobuf:"bytes,1,opt,name=userUuid,proto3" json:"userUuid,omitempty"`
	OrgUuid                 string   `protobuf:"bytes,2,opt,name=orgUuid,proto3" json:"orgUuid,omitempty"`
	ProductUuid             string   `protobuf:"bytes,3,opt,name=productUuid,proto3" json:"productUuid,omitempty"`
	PlatformId              int32    `protobuf:"varint,4,opt,name=platformId,proto3" json:"platformId,omitempty"`
	AccountUuid             string   `protobuf:"bytes,5,opt,name=accountUuid,proto3" json:"accountUuid,omitempty"`
	SubAccountUuid          string   `protobuf:"bytes,6,opt,name=subAccountUuid,proto3" json:"subAccountUuid,omitempty"`
	SubAccountAccessKeyUuid string   `protobuf:"bytes,7,opt,name=subAccountAccessKeyUuid,proto3" json:"subAccountAccessKeyUuid,omitempty"`
	Type                    int32    `protobuf:"varint,8,opt,name=type,proto3" json:"type,omitempty"`
	Paths                   []string `protobuf:"bytes,9,rep,name=paths,proto3" json:"paths,omitempty"`
	DistributionId          string   `protobuf:"bytes,10,opt,name=distributionId,proto3" json:"distributionId,omitempty"`
}

func (x *RefreshCDNCacheReq) Reset() {
	*x = RefreshCDNCacheReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefreshCDNCacheReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshCDNCacheReq) ProtoMessage() {}

func (x *RefreshCDNCacheReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshCDNCacheReq.ProtoReflect.Descriptor instead.
func (*RefreshCDNCacheReq) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{90}
}

func (x *RefreshCDNCacheReq) GetUserUuid() string {
	if x != nil {
		return x.UserUuid
	}
	return ""
}

func (x *RefreshCDNCacheReq) GetOrgUuid() string {
	if x != nil {
		return x.OrgUuid
	}
	return ""
}

func (x *RefreshCDNCacheReq) GetProductUuid() string {
	if x != nil {
		return x.ProductUuid
	}
	return ""
}

func (x *RefreshCDNCacheReq) GetPlatformId() int32 {
	if x != nil {
		return x.PlatformId
	}
	return 0
}

func (x *RefreshCDNCacheReq) GetAccountUuid() string {
	if x != nil {
		return x.AccountUuid
	}
	return ""
}

func (x *RefreshCDNCacheReq) GetSubAccountUuid() string {
	if x != nil {
		return x.SubAccountUuid
	}
	return ""
}

func (x *RefreshCDNCacheReq) GetSubAccountAccessKeyUuid() string {
	if x != nil {
		return x.SubAccountAccessKeyUuid
	}
	return ""
}

func (x *RefreshCDNCacheReq) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *RefreshCDNCacheReq) GetPaths() []string {
	if x != nil {
		return x.Paths
	}
	return nil
}

func (x *RefreshCDNCacheReq) GetDistributionId() string {
	if x != nil {
		return x.DistributionId
	}
	return ""
}

type RefreshCDNCacheReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *RefreshCDNCacheReply) Reset() {
	*x = RefreshCDNCacheReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefreshCDNCacheReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshCDNCacheReply) ProtoMessage() {}

func (x *RefreshCDNCacheReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshCDNCacheReply.ProtoReflect.Descriptor instead.
func (*RefreshCDNCacheReply) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{91}
}

func (x *RefreshCDNCacheReply) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

// CDN 配额
type GetCDNQuotaReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserUuid                string `protobuf:"bytes,1,opt,name=userUuid,proto3" json:"userUuid,omitempty"`
	OrgUuid                 string `protobuf:"bytes,2,opt,name=orgUuid,proto3" json:"orgUuid,omitempty"`
	ProductUuid             string `protobuf:"bytes,3,opt,name=productUuid,proto3" json:"productUuid,omitempty"`
	PlatformId              int32  `protobuf:"varint,4,opt,name=platformId,proto3" json:"platformId,omitempty"`
	AccountUuid             string `protobuf:"bytes,5,opt,name=accountUuid,proto3" json:"accountUuid,omitempty"`
	SubAccountUuid          string `protobuf:"bytes,6,opt,name=subAccountUuid,proto3" json:"subAccountUuid,omitempty"`
	SubAccountAccessKeyUuid string `protobuf:"bytes,7,opt,name=subAccountAccessKeyUuid,proto3" json:"subAccountAccessKeyUuid,omitempty"`
}

func (x *GetCDNQuotaReq) Reset() {
	*x = GetCDNQuotaReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCDNQuotaReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCDNQuotaReq) ProtoMessage() {}

func (x *GetCDNQuotaReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCDNQuotaReq.ProtoReflect.Descriptor instead.
func (*GetCDNQuotaReq) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{92}
}

func (x *GetCDNQuotaReq) GetUserUuid() string {
	if x != nil {
		return x.UserUuid
	}
	return ""
}

func (x *GetCDNQuotaReq) GetOrgUuid() string {
	if x != nil {
		return x.OrgUuid
	}
	return ""
}

func (x *GetCDNQuotaReq) GetProductUuid() string {
	if x != nil {
		return x.ProductUuid
	}
	return ""
}

func (x *GetCDNQuotaReq) GetPlatformId() int32 {
	if x != nil {
		return x.PlatformId
	}
	return 0
}

func (x *GetCDNQuotaReq) GetAccountUuid() string {
	if x != nil {
		return x.AccountUuid
	}
	return ""
}

func (x *GetCDNQuotaReq) GetSubAccountUuid() string {
	if x != nil {
		return x.SubAccountUuid
	}
	return ""
}

func (x *GetCDNQuotaReq) GetSubAccountAccessKeyUuid() string {
	if x != nil {
		return x.SubAccountAccessKeyUuid
	}
	return ""
}

type GetCDNQuotaReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RefreshUrlQuota  int32 `protobuf:"varint,1,opt,name=refreshUrlQuota,proto3" json:"refreshUrlQuota,omitempty"`
	RefreshUrlRemain int32 `protobuf:"varint,2,opt,name=refreshUrlRemain,proto3" json:"refreshUrlRemain,omitempty"`
	RefreshDirQuota  int32 `protobuf:"varint,3,opt,name=refreshDirQuota,proto3" json:"refreshDirQuota,omitempty"`
	RefreshDirRemain int32 `protobuf:"varint,4,opt,name=refreshDirRemain,proto3" json:"refreshDirRemain,omitempty"`
	PreloadQuota     int32 `protobuf:"varint,5,opt,name=preloadQuota,proto3" json:"preloadQuota,omitempty"`
	PreloadRemain    int32 `protobuf:"varint,6,opt,name=preloadRemain,proto3" json:"preloadRemain,omitempty"`
	BlockQuota       int32 `protobuf:"varint,7,opt,name=blockQuota,proto3" json:"blockQuota,omitempty"`
	BlockRemain      int32 `protobuf:"varint,8,opt,name=blockRemain,proto3" json:"blockRemain,omitempty"`
}

func (x *GetCDNQuotaReply) Reset() {
	*x = GetCDNQuotaReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCDNQuotaReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCDNQuotaReply) ProtoMessage() {}

func (x *GetCDNQuotaReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCDNQuotaReply.ProtoReflect.Descriptor instead.
func (*GetCDNQuotaReply) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{93}
}

func (x *GetCDNQuotaReply) GetRefreshUrlQuota() int32 {
	if x != nil {
		return x.RefreshUrlQuota
	}
	return 0
}

func (x *GetCDNQuotaReply) GetRefreshUrlRemain() int32 {
	if x != nil {
		return x.RefreshUrlRemain
	}
	return 0
}

func (x *GetCDNQuotaReply) GetRefreshDirQuota() int32 {
	if x != nil {
		return x.RefreshDirQuota
	}
	return 0
}

func (x *GetCDNQuotaReply) GetRefreshDirRemain() int32 {
	if x != nil {
		return x.RefreshDirRemain
	}
	return 0
}

func (x *GetCDNQuotaReply) GetPreloadQuota() int32 {
	if x != nil {
		return x.PreloadQuota
	}
	return 0
}

func (x *GetCDNQuotaReply) GetPreloadRemain() int32 {
	if x != nil {
		return x.PreloadRemain
	}
	return 0
}

func (x *GetCDNQuotaReply) GetBlockQuota() int32 {
	if x != nil {
		return x.BlockQuota
	}
	return 0
}

func (x *GetCDNQuotaReply) GetBlockRemain() int32 {
	if x != nil {
		return x.BlockRemain
	}
	return 0
}

// 获取 CDN 节点IP
type IsCdnIpReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserUuid                string `protobuf:"bytes,1,opt,name=userUuid,proto3" json:"userUuid,omitempty"`
	OrgUuid                 string `protobuf:"bytes,2,opt,name=orgUuid,proto3" json:"orgUuid,omitempty"`
	ProductUuid             string `protobuf:"bytes,3,opt,name=productUuid,proto3" json:"productUuid,omitempty"`
	PlatformId              int32  `protobuf:"varint,4,opt,name=platformId,proto3" json:"platformId,omitempty"`
	AccountUuid             string `protobuf:"bytes,5,opt,name=accountUuid,proto3" json:"accountUuid,omitempty"`
	SubAccountUuid          string `protobuf:"bytes,6,opt,name=subAccountUuid,proto3" json:"subAccountUuid,omitempty"`
	SubAccountAccessKeyUuid string `protobuf:"bytes,7,opt,name=subAccountAccessKeyUuid,proto3" json:"subAccountAccessKeyUuid,omitempty"`
	Ip                      string `protobuf:"bytes,8,opt,name=ip,proto3" json:"ip,omitempty"`
}

func (x *IsCdnIpReq) Reset() {
	*x = IsCdnIpReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsCdnIpReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsCdnIpReq) ProtoMessage() {}

func (x *IsCdnIpReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsCdnIpReq.ProtoReflect.Descriptor instead.
func (*IsCdnIpReq) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{94}
}

func (x *IsCdnIpReq) GetUserUuid() string {
	if x != nil {
		return x.UserUuid
	}
	return ""
}

func (x *IsCdnIpReq) GetOrgUuid() string {
	if x != nil {
		return x.OrgUuid
	}
	return ""
}

func (x *IsCdnIpReq) GetProductUuid() string {
	if x != nil {
		return x.ProductUuid
	}
	return ""
}

func (x *IsCdnIpReq) GetPlatformId() int32 {
	if x != nil {
		return x.PlatformId
	}
	return 0
}

func (x *IsCdnIpReq) GetAccountUuid() string {
	if x != nil {
		return x.AccountUuid
	}
	return ""
}

func (x *IsCdnIpReq) GetSubAccountUuid() string {
	if x != nil {
		return x.SubAccountUuid
	}
	return ""
}

func (x *IsCdnIpReq) GetSubAccountAccessKeyUuid() string {
	if x != nil {
		return x.SubAccountAccessKeyUuid
	}
	return ""
}

func (x *IsCdnIpReq) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

type IsCdnIpReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CdnIp   string `protobuf:"bytes,1,opt,name=cdnIp,proto3" json:"cdnIp,omitempty"`
	IspName string `protobuf:"bytes,2,opt,name=ispName,proto3" json:"ispName,omitempty"`
	Region  string `protobuf:"bytes,3,opt,name=region,proto3" json:"region,omitempty"`
}

func (x *IsCdnIpReply) Reset() {
	*x = IsCdnIpReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsCdnIpReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsCdnIpReply) ProtoMessage() {}

func (x *IsCdnIpReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsCdnIpReply.ProtoReflect.Descriptor instead.
func (*IsCdnIpReply) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{95}
}

func (x *IsCdnIpReply) GetCdnIp() string {
	if x != nil {
		return x.CdnIp
	}
	return ""
}

func (x *IsCdnIpReply) GetIspName() string {
	if x != nil {
		return x.IspName
	}
	return ""
}

func (x *IsCdnIpReply) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

// 获取 cdn ip 状态
type GetCdnIpStatusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserUuid                string   `protobuf:"bytes,1,opt,name=userUuid,proto3" json:"userUuid,omitempty"`
	OrgUuid                 string   `protobuf:"bytes,2,opt,name=orgUuid,proto3" json:"orgUuid,omitempty"`
	ProductUuid             string   `protobuf:"bytes,3,opt,name=productUuid,proto3" json:"productUuid,omitempty"`
	PlatformId              int32    `protobuf:"varint,4,opt,name=platformId,proto3" json:"platformId,omitempty"`
	AccountUuid             string   `protobuf:"bytes,5,opt,name=accountUuid,proto3" json:"accountUuid,omitempty"`
	SubAccountUuid          string   `protobuf:"bytes,6,opt,name=subAccountUuid,proto3" json:"subAccountUuid,omitempty"`
	SubAccountAccessKeyUuid string   `protobuf:"bytes,7,opt,name=subAccountAccessKeyUuid,proto3" json:"subAccountAccessKeyUuid,omitempty"`
	Ips                     []string `protobuf:"bytes,8,rep,name=ips,proto3" json:"ips,omitempty"`
}

func (x *GetCdnIpStatusReq) Reset() {
	*x = GetCdnIpStatusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCdnIpStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCdnIpStatusReq) ProtoMessage() {}

func (x *GetCdnIpStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCdnIpStatusReq.ProtoReflect.Descriptor instead.
func (*GetCdnIpStatusReq) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{96}
}

func (x *GetCdnIpStatusReq) GetUserUuid() string {
	if x != nil {
		return x.UserUuid
	}
	return ""
}

func (x *GetCdnIpStatusReq) GetOrgUuid() string {
	if x != nil {
		return x.OrgUuid
	}
	return ""
}

func (x *GetCdnIpStatusReq) GetProductUuid() string {
	if x != nil {
		return x.ProductUuid
	}
	return ""
}

func (x *GetCdnIpStatusReq) GetPlatformId() int32 {
	if x != nil {
		return x.PlatformId
	}
	return 0
}

func (x *GetCdnIpStatusReq) GetAccountUuid() string {
	if x != nil {
		return x.AccountUuid
	}
	return ""
}

func (x *GetCdnIpStatusReq) GetSubAccountUuid() string {
	if x != nil {
		return x.SubAccountUuid
	}
	return ""
}

func (x *GetCdnIpStatusReq) GetSubAccountAccessKeyUuid() string {
	if x != nil {
		return x.SubAccountAccessKeyUuid
	}
	return ""
}

func (x *GetCdnIpStatusReq) GetIps() []string {
	if x != nil {
		return x.Ips
	}
	return nil
}

type GetCdnIpStatusReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IpStatus []*GetCdnIpStatusReply_CdnIpStatus `protobuf:"bytes,1,rep,name=ipStatus,proto3" json:"ipStatus,omitempty"`
}

func (x *GetCdnIpStatusReply) Reset() {
	*x = GetCdnIpStatusReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCdnIpStatusReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCdnIpStatusReply) ProtoMessage() {}

func (x *GetCdnIpStatusReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCdnIpStatusReply.ProtoReflect.Descriptor instead.
func (*GetCdnIpStatusReply) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{97}
}

func (x *GetCdnIpStatusReply) GetIpStatus() []*GetCdnIpStatusReply_CdnIpStatus {
	if x != nil {
		return x.IpStatus
	}
	return nil
}

// 获取 cdn 服务状态
type GetCdnServiceStatusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserUuid                string `protobuf:"bytes,1,opt,name=userUuid,proto3" json:"userUuid,omitempty"`
	OrgUuid                 string `protobuf:"bytes,2,opt,name=orgUuid,proto3" json:"orgUuid,omitempty"`
	ProductUuid             string `protobuf:"bytes,3,opt,name=productUuid,proto3" json:"productUuid,omitempty"`
	PlatformId              int32  `protobuf:"varint,4,opt,name=platformId,proto3" json:"platformId,omitempty"`
	AccountUuid             string `protobuf:"bytes,5,opt,name=accountUuid,proto3" json:"accountUuid,omitempty"`
	SubAccountUuid          string `protobuf:"bytes,6,opt,name=subAccountUuid,proto3" json:"subAccountUuid,omitempty"`
	SubAccountAccessKeyUuid string `protobuf:"bytes,7,opt,name=subAccountAccessKeyUuid,proto3" json:"subAccountAccessKeyUuid,omitempty"`
}

func (x *GetCdnServiceStatusReq) Reset() {
	*x = GetCdnServiceStatusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCdnServiceStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCdnServiceStatusReq) ProtoMessage() {}

func (x *GetCdnServiceStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCdnServiceStatusReq.ProtoReflect.Descriptor instead.
func (*GetCdnServiceStatusReq) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{98}
}

func (x *GetCdnServiceStatusReq) GetUserUuid() string {
	if x != nil {
		return x.UserUuid
	}
	return ""
}

func (x *GetCdnServiceStatusReq) GetOrgUuid() string {
	if x != nil {
		return x.OrgUuid
	}
	return ""
}

func (x *GetCdnServiceStatusReq) GetProductUuid() string {
	if x != nil {
		return x.ProductUuid
	}
	return ""
}

func (x *GetCdnServiceStatusReq) GetPlatformId() int32 {
	if x != nil {
		return x.PlatformId
	}
	return 0
}

func (x *GetCdnServiceStatusReq) GetAccountUuid() string {
	if x != nil {
		return x.AccountUuid
	}
	return ""
}

func (x *GetCdnServiceStatusReq) GetSubAccountUuid() string {
	if x != nil {
		return x.SubAccountUuid
	}
	return ""
}

func (x *GetCdnServiceStatusReq) GetSubAccountAccessKeyUuid() string {
	if x != nil {
		return x.SubAccountAccessKeyUuid
	}
	return ""
}

type GetCdnServiceStatusReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstanceId         string `protobuf:"bytes,1,opt,name=instanceId,proto3" json:"instanceId,omitempty"`
	InternetChargeType string `protobuf:"bytes,2,opt,name=internetChargeType,proto3" json:"internetChargeType,omitempty"`
	ChangingAffectTime string `protobuf:"bytes,3,opt,name=changingAffectTime,proto3" json:"changingAffectTime,omitempty"`
	ChangingChargeType string `protobuf:"bytes,4,opt,name=changingChargeType,proto3" json:"changingChargeType,omitempty"`
	OpeningTime        string `protobuf:"bytes,5,opt,name=openingTime,proto3" json:"openingTime,omitempty"`
	LocksReason        string `protobuf:"bytes,6,opt,name=locksReason,proto3" json:"locksReason,omitempty"`
}

func (x *GetCdnServiceStatusReply) Reset() {
	*x = GetCdnServiceStatusReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCdnServiceStatusReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCdnServiceStatusReply) ProtoMessage() {}

func (x *GetCdnServiceStatusReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCdnServiceStatusReply.ProtoReflect.Descriptor instead.
func (*GetCdnServiceStatusReply) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{99}
}

func (x *GetCdnServiceStatusReply) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

func (x *GetCdnServiceStatusReply) GetInternetChargeType() string {
	if x != nil {
		return x.InternetChargeType
	}
	return ""
}

func (x *GetCdnServiceStatusReply) GetChangingAffectTime() string {
	if x != nil {
		return x.ChangingAffectTime
	}
	return ""
}

func (x *GetCdnServiceStatusReply) GetChangingChargeType() string {
	if x != nil {
		return x.ChangingChargeType
	}
	return ""
}

func (x *GetCdnServiceStatusReply) GetOpeningTime() string {
	if x != nil {
		return x.OpeningTime
	}
	return ""
}

func (x *GetCdnServiceStatusReply) GetLocksReason() string {
	if x != nil {
		return x.LocksReason
	}
	return ""
}

// DNS - 域名解析
// 列出域名
type ListDomainDnsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserUuid    string `protobuf:"bytes,1,opt,name=userUuid,proto3" json:"userUuid,omitempty"`
	OrgUuid     string `protobuf:"bytes,2,opt,name=orgUuid,proto3" json:"orgUuid,omitempty"`
	ProductUuid string `protobuf:"bytes,3,opt,name=productUuid,proto3" json:"productUuid,omitempty"`
}

func (x *ListDomainDnsReq) Reset() {
	*x = ListDomainDnsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[100]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDomainDnsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDomainDnsReq) ProtoMessage() {}

func (x *ListDomainDnsReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[100]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDomainDnsReq.ProtoReflect.Descriptor instead.
func (*ListDomainDnsReq) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{100}
}

func (x *ListDomainDnsReq) GetUserUuid() string {
	if x != nil {
		return x.UserUuid
	}
	return ""
}

func (x *ListDomainDnsReq) GetOrgUuid() string {
	if x != nil {
		return x.OrgUuid
	}
	return ""
}

func (x *ListDomainDnsReq) GetProductUuid() string {
	if x != nil {
		return x.ProductUuid
	}
	return ""
}

type ListDomainDnsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Domain []*ListDomainDnsReply_Domain `protobuf:"bytes,1,rep,name=domain,proto3" json:"domain,omitempty"`
}

func (x *ListDomainDnsReply) Reset() {
	*x = ListDomainDnsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[101]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDomainDnsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDomainDnsReply) ProtoMessage() {}

func (x *ListDomainDnsReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[101]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDomainDnsReply.ProtoReflect.Descriptor instead.
func (*ListDomainDnsReply) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{101}
}

func (x *ListDomainDnsReply) GetDomain() []*ListDomainDnsReply_Domain {
	if x != nil {
		return x.Domain
	}
	return nil
}

// 列出
type ListCloudDomainDnsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserUuid                string `protobuf:"bytes,1,opt,name=userUuid,proto3" json:"userUuid,omitempty"`
	OrgUuid                 string `protobuf:"bytes,2,opt,name=orgUuid,proto3" json:"orgUuid,omitempty"`
	ProductUuid             string `protobuf:"bytes,3,opt,name=productUuid,proto3" json:"productUuid,omitempty"`
	PlatformId              int32  `protobuf:"varint,4,opt,name=platformId,proto3" json:"platformId,omitempty"`
	AccountUuid             string `protobuf:"bytes,5,opt,name=accountUuid,proto3" json:"accountUuid,omitempty"`
	SubAccountUuid          string `protobuf:"bytes,6,opt,name=subAccountUuid,proto3" json:"subAccountUuid,omitempty"`
	SubAccountAccessKeyUuid string `protobuf:"bytes,7,opt,name=subAccountAccessKeyUuid,proto3" json:"subAccountAccessKeyUuid,omitempty"`
}

func (x *ListCloudDomainDnsReq) Reset() {
	*x = ListCloudDomainDnsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[102]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCloudDomainDnsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCloudDomainDnsReq) ProtoMessage() {}

func (x *ListCloudDomainDnsReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[102]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCloudDomainDnsReq.ProtoReflect.Descriptor instead.
func (*ListCloudDomainDnsReq) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{102}
}

func (x *ListCloudDomainDnsReq) GetUserUuid() string {
	if x != nil {
		return x.UserUuid
	}
	return ""
}

func (x *ListCloudDomainDnsReq) GetOrgUuid() string {
	if x != nil {
		return x.OrgUuid
	}
	return ""
}

func (x *ListCloudDomainDnsReq) GetProductUuid() string {
	if x != nil {
		return x.ProductUuid
	}
	return ""
}

func (x *ListCloudDomainDnsReq) GetPlatformId() int32 {
	if x != nil {
		return x.PlatformId
	}
	return 0
}

func (x *ListCloudDomainDnsReq) GetAccountUuid() string {
	if x != nil {
		return x.AccountUuid
	}
	return ""
}

func (x *ListCloudDomainDnsReq) GetSubAccountUuid() string {
	if x != nil {
		return x.SubAccountUuid
	}
	return ""
}

func (x *ListCloudDomainDnsReq) GetSubAccountAccessKeyUuid() string {
	if x != nil {
		return x.SubAccountAccessKeyUuid
	}
	return ""
}

type ListCloudDomainDnsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Domain []*ListCloudDomainDnsReply_Domain `protobuf:"bytes,1,rep,name=domain,proto3" json:"domain,omitempty"`
}

func (x *ListCloudDomainDnsReply) Reset() {
	*x = ListCloudDomainDnsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[103]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCloudDomainDnsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCloudDomainDnsReply) ProtoMessage() {}

func (x *ListCloudDomainDnsReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[103]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCloudDomainDnsReply.ProtoReflect.Descriptor instead.
func (*ListCloudDomainDnsReply) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{103}
}

func (x *ListCloudDomainDnsReply) GetDomain() []*ListCloudDomainDnsReply_Domain {
	if x != nil {
		return x.Domain
	}
	return nil
}

// 导入域名
type ImportDomainDnsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserUuid                string `protobuf:"bytes,1,opt,name=userUuid,proto3" json:"userUuid,omitempty"`
	OrgUuid                 string `protobuf:"bytes,2,opt,name=orgUuid,proto3" json:"orgUuid,omitempty"`
	ProductUuid             string `protobuf:"bytes,3,opt,name=productUuid,proto3" json:"productUuid,omitempty"`
	PlatformId              int32  `protobuf:"varint,4,opt,name=platformId,proto3" json:"platformId,omitempty"`
	AccountUuid             string `protobuf:"bytes,5,opt,name=accountUuid,proto3" json:"accountUuid,omitempty"`
	SubAccountUuid          string `protobuf:"bytes,6,opt,name=subAccountUuid,proto3" json:"subAccountUuid,omitempty"`
	SubAccountAccessKeyUuid string `protobuf:"bytes,7,opt,name=subAccountAccessKeyUuid,proto3" json:"subAccountAccessKeyUuid,omitempty"`
	DomainName              string `protobuf:"bytes,8,opt,name=domainName,proto3" json:"domainName,omitempty"`
}

func (x *ImportDomainDnsReq) Reset() {
	*x = ImportDomainDnsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[104]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImportDomainDnsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportDomainDnsReq) ProtoMessage() {}

func (x *ImportDomainDnsReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[104]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportDomainDnsReq.ProtoReflect.Descriptor instead.
func (*ImportDomainDnsReq) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{104}
}

func (x *ImportDomainDnsReq) GetUserUuid() string {
	if x != nil {
		return x.UserUuid
	}
	return ""
}

func (x *ImportDomainDnsReq) GetOrgUuid() string {
	if x != nil {
		return x.OrgUuid
	}
	return ""
}

func (x *ImportDomainDnsReq) GetProductUuid() string {
	if x != nil {
		return x.ProductUuid
	}
	return ""
}

func (x *ImportDomainDnsReq) GetPlatformId() int32 {
	if x != nil {
		return x.PlatformId
	}
	return 0
}

func (x *ImportDomainDnsReq) GetAccountUuid() string {
	if x != nil {
		return x.AccountUuid
	}
	return ""
}

func (x *ImportDomainDnsReq) GetSubAccountUuid() string {
	if x != nil {
		return x.SubAccountUuid
	}
	return ""
}

func (x *ImportDomainDnsReq) GetSubAccountAccessKeyUuid() string {
	if x != nil {
		return x.SubAccountAccessKeyUuid
	}
	return ""
}

func (x *ImportDomainDnsReq) GetDomainName() string {
	if x != nil {
		return x.DomainName
	}
	return ""
}

type ImportDomainDnsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *ImportDomainDnsReply) Reset() {
	*x = ImportDomainDnsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[105]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImportDomainDnsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportDomainDnsReply) ProtoMessage() {}

func (x *ImportDomainDnsReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[105]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportDomainDnsReply.ProtoReflect.Descriptor instead.
func (*ImportDomainDnsReply) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{105}
}

func (x *ImportDomainDnsReply) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

type ListCloudDomainDnsRecordReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserUuid                string `protobuf:"bytes,1,opt,name=userUuid,proto3" json:"userUuid,omitempty"`
	OrgUuid                 string `protobuf:"bytes,2,opt,name=orgUuid,proto3" json:"orgUuid,omitempty"`
	ProductUuid             string `protobuf:"bytes,3,opt,name=productUuid,proto3" json:"productUuid,omitempty"`
	PlatformId              int32  `protobuf:"varint,4,opt,name=platformId,proto3" json:"platformId,omitempty"`
	AccountUuid             string `protobuf:"bytes,5,opt,name=accountUuid,proto3" json:"accountUuid,omitempty"`
	SubAccountUuid          string `protobuf:"bytes,6,opt,name=subAccountUuid,proto3" json:"subAccountUuid,omitempty"`
	SubAccountAccessKeyUuid string `protobuf:"bytes,7,opt,name=subAccountAccessKeyUuid,proto3" json:"subAccountAccessKeyUuid,omitempty"`
	DomainName              string `protobuf:"bytes,8,opt,name=domainName,proto3" json:"domainName,omitempty"`
	DomainId                string `protobuf:"bytes,9,opt,name=domainId,proto3" json:"domainId,omitempty"`
	Keyword                 string `protobuf:"bytes,10,opt,name=keyword,proto3" json:"keyword,omitempty"`
}

func (x *ListCloudDomainDnsRecordReq) Reset() {
	*x = ListCloudDomainDnsRecordReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[106]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCloudDomainDnsRecordReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCloudDomainDnsRecordReq) ProtoMessage() {}

func (x *ListCloudDomainDnsRecordReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[106]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCloudDomainDnsRecordReq.ProtoReflect.Descriptor instead.
func (*ListCloudDomainDnsRecordReq) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{106}
}

func (x *ListCloudDomainDnsRecordReq) GetUserUuid() string {
	if x != nil {
		return x.UserUuid
	}
	return ""
}

func (x *ListCloudDomainDnsRecordReq) GetOrgUuid() string {
	if x != nil {
		return x.OrgUuid
	}
	return ""
}

func (x *ListCloudDomainDnsRecordReq) GetProductUuid() string {
	if x != nil {
		return x.ProductUuid
	}
	return ""
}

func (x *ListCloudDomainDnsRecordReq) GetPlatformId() int32 {
	if x != nil {
		return x.PlatformId
	}
	return 0
}

func (x *ListCloudDomainDnsRecordReq) GetAccountUuid() string {
	if x != nil {
		return x.AccountUuid
	}
	return ""
}

func (x *ListCloudDomainDnsRecordReq) GetSubAccountUuid() string {
	if x != nil {
		return x.SubAccountUuid
	}
	return ""
}

func (x *ListCloudDomainDnsRecordReq) GetSubAccountAccessKeyUuid() string {
	if x != nil {
		return x.SubAccountAccessKeyUuid
	}
	return ""
}

func (x *ListCloudDomainDnsRecordReq) GetDomainName() string {
	if x != nil {
		return x.DomainName
	}
	return ""
}

func (x *ListCloudDomainDnsRecordReq) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

func (x *ListCloudDomainDnsRecordReq) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

type ListCloudDomainDnsRecordReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Records []*ListCloudDomainDnsRecordReply_Record `protobuf:"bytes,1,rep,name=records,proto3" json:"records,omitempty"`
}

func (x *ListCloudDomainDnsRecordReply) Reset() {
	*x = ListCloudDomainDnsRecordReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[107]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCloudDomainDnsRecordReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCloudDomainDnsRecordReply) ProtoMessage() {}

func (x *ListCloudDomainDnsRecordReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[107]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCloudDomainDnsRecordReply.ProtoReflect.Descriptor instead.
func (*ListCloudDomainDnsRecordReply) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{107}
}

func (x *ListCloudDomainDnsRecordReply) GetRecords() []*ListCloudDomainDnsRecordReply_Record {
	if x != nil {
		return x.Records
	}
	return nil
}

// 添加 DNS 记录
type AddCloudDomainDNSRecordReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserUuid                string `protobuf:"bytes,1,opt,name=userUuid,proto3" json:"userUuid,omitempty"`
	OrgUuid                 string `protobuf:"bytes,2,opt,name=orgUuid,proto3" json:"orgUuid,omitempty"`
	ProductUuid             string `protobuf:"bytes,3,opt,name=productUuid,proto3" json:"productUuid,omitempty"`
	PlatformId              int32  `protobuf:"varint,4,opt,name=platformId,proto3" json:"platformId,omitempty"`
	AccountUuid             string `protobuf:"bytes,5,opt,name=accountUuid,proto3" json:"accountUuid,omitempty"`
	SubAccountUuid          string `protobuf:"bytes,6,opt,name=subAccountUuid,proto3" json:"subAccountUuid,omitempty"`
	SubAccountAccessKeyUuid string `protobuf:"bytes,7,opt,name=subAccountAccessKeyUuid,proto3" json:"subAccountAccessKeyUuid,omitempty"`
	DomainName              string `protobuf:"bytes,8,opt,name=domainName,proto3" json:"domainName,omitempty"`
	Rr                      string `protobuf:"bytes,9,opt,name=rr,proto3" json:"rr,omitempty"`
	Type                    string `protobuf:"bytes,10,opt,name=type,proto3" json:"type,omitempty"`
	Value                   string `protobuf:"bytes,11,opt,name=value,proto3" json:"value,omitempty"`
	Line                    string `protobuf:"bytes,12,opt,name=line,proto3" json:"line,omitempty"`
	Ttl                     int64  `protobuf:"varint,13,opt,name=ttl,proto3" json:"ttl,omitempty"`
}

func (x *AddCloudDomainDNSRecordReq) Reset() {
	*x = AddCloudDomainDNSRecordReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[108]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddCloudDomainDNSRecordReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCloudDomainDNSRecordReq) ProtoMessage() {}

func (x *AddCloudDomainDNSRecordReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[108]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCloudDomainDNSRecordReq.ProtoReflect.Descriptor instead.
func (*AddCloudDomainDNSRecordReq) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{108}
}

func (x *AddCloudDomainDNSRecordReq) GetUserUuid() string {
	if x != nil {
		return x.UserUuid
	}
	return ""
}

func (x *AddCloudDomainDNSRecordReq) GetOrgUuid() string {
	if x != nil {
		return x.OrgUuid
	}
	return ""
}

func (x *AddCloudDomainDNSRecordReq) GetProductUuid() string {
	if x != nil {
		return x.ProductUuid
	}
	return ""
}

func (x *AddCloudDomainDNSRecordReq) GetPlatformId() int32 {
	if x != nil {
		return x.PlatformId
	}
	return 0
}

func (x *AddCloudDomainDNSRecordReq) GetAccountUuid() string {
	if x != nil {
		return x.AccountUuid
	}
	return ""
}

func (x *AddCloudDomainDNSRecordReq) GetSubAccountUuid() string {
	if x != nil {
		return x.SubAccountUuid
	}
	return ""
}

func (x *AddCloudDomainDNSRecordReq) GetSubAccountAccessKeyUuid() string {
	if x != nil {
		return x.SubAccountAccessKeyUuid
	}
	return ""
}

func (x *AddCloudDomainDNSRecordReq) GetDomainName() string {
	if x != nil {
		return x.DomainName
	}
	return ""
}

func (x *AddCloudDomainDNSRecordReq) GetRr() string {
	if x != nil {
		return x.Rr
	}
	return ""
}

func (x *AddCloudDomainDNSRecordReq) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *AddCloudDomainDNSRecordReq) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *AddCloudDomainDNSRecordReq) GetLine() string {
	if x != nil {
		return x.Line
	}
	return ""
}

func (x *AddCloudDomainDNSRecordReq) GetTtl() int64 {
	if x != nil {
		return x.Ttl
	}
	return 0
}

type AddCloudDomainDNSRecordReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *AddCloudDomainDNSRecordReply) Reset() {
	*x = AddCloudDomainDNSRecordReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[109]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddCloudDomainDNSRecordReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCloudDomainDNSRecordReply) ProtoMessage() {}

func (x *AddCloudDomainDNSRecordReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[109]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCloudDomainDNSRecordReply.ProtoReflect.Descriptor instead.
func (*AddCloudDomainDNSRecordReply) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{109}
}

func (x *AddCloudDomainDNSRecordReply) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

// 删除 DNS 记录
type DelCloudDomainDNSRecordReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserUuid                string `protobuf:"bytes,1,opt,name=userUuid,proto3" json:"userUuid,omitempty"`
	OrgUuid                 string `protobuf:"bytes,2,opt,name=orgUuid,proto3" json:"orgUuid,omitempty"`
	ProductUuid             string `protobuf:"bytes,3,opt,name=productUuid,proto3" json:"productUuid,omitempty"`
	PlatformId              int32  `protobuf:"varint,4,opt,name=platformId,proto3" json:"platformId,omitempty"`
	AccountUuid             string `protobuf:"bytes,5,opt,name=accountUuid,proto3" json:"accountUuid,omitempty"`
	SubAccountUuid          string `protobuf:"bytes,6,opt,name=subAccountUuid,proto3" json:"subAccountUuid,omitempty"`
	SubAccountAccessKeyUuid string `protobuf:"bytes,7,opt,name=subAccountAccessKeyUuid,proto3" json:"subAccountAccessKeyUuid,omitempty"`
	DomainName              string `protobuf:"bytes,8,opt,name=domainName,proto3" json:"domainName,omitempty"`
	RecordId                string `protobuf:"bytes,9,opt,name=recordId,proto3" json:"recordId,omitempty"`
}

func (x *DelCloudDomainDNSRecordReq) Reset() {
	*x = DelCloudDomainDNSRecordReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[110]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelCloudDomainDNSRecordReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelCloudDomainDNSRecordReq) ProtoMessage() {}

func (x *DelCloudDomainDNSRecordReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[110]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelCloudDomainDNSRecordReq.ProtoReflect.Descriptor instead.
func (*DelCloudDomainDNSRecordReq) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{110}
}

func (x *DelCloudDomainDNSRecordReq) GetUserUuid() string {
	if x != nil {
		return x.UserUuid
	}
	return ""
}

func (x *DelCloudDomainDNSRecordReq) GetOrgUuid() string {
	if x != nil {
		return x.OrgUuid
	}
	return ""
}

func (x *DelCloudDomainDNSRecordReq) GetProductUuid() string {
	if x != nil {
		return x.ProductUuid
	}
	return ""
}

func (x *DelCloudDomainDNSRecordReq) GetPlatformId() int32 {
	if x != nil {
		return x.PlatformId
	}
	return 0
}

func (x *DelCloudDomainDNSRecordReq) GetAccountUuid() string {
	if x != nil {
		return x.AccountUuid
	}
	return ""
}

func (x *DelCloudDomainDNSRecordReq) GetSubAccountUuid() string {
	if x != nil {
		return x.SubAccountUuid
	}
	return ""
}

func (x *DelCloudDomainDNSRecordReq) GetSubAccountAccessKeyUuid() string {
	if x != nil {
		return x.SubAccountAccessKeyUuid
	}
	return ""
}

func (x *DelCloudDomainDNSRecordReq) GetDomainName() string {
	if x != nil {
		return x.DomainName
	}
	return ""
}

func (x *DelCloudDomainDNSRecordReq) GetRecordId() string {
	if x != nil {
		return x.RecordId
	}
	return ""
}

type DelCloudDomainDNSRecordReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *DelCloudDomainDNSRecordReply) Reset() {
	*x = DelCloudDomainDNSRecordReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[111]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelCloudDomainDNSRecordReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelCloudDomainDNSRecordReply) ProtoMessage() {}

func (x *DelCloudDomainDNSRecordReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[111]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelCloudDomainDNSRecordReply.ProtoReflect.Descriptor instead.
func (*DelCloudDomainDNSRecordReply) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{111}
}

func (x *DelCloudDomainDNSRecordReply) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

// 更新 DNS 记录
type UpdateCloudDomainDNSRecordReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserUuid                string `protobuf:"bytes,1,opt,name=userUuid,proto3" json:"userUuid,omitempty"`
	OrgUuid                 string `protobuf:"bytes,2,opt,name=orgUuid,proto3" json:"orgUuid,omitempty"`
	ProductUuid             string `protobuf:"bytes,3,opt,name=productUuid,proto3" json:"productUuid,omitempty"`
	PlatformId              int32  `protobuf:"varint,4,opt,name=platformId,proto3" json:"platformId,omitempty"`
	AccountUuid             string `protobuf:"bytes,5,opt,name=accountUuid,proto3" json:"accountUuid,omitempty"`
	SubAccountUuid          string `protobuf:"bytes,6,opt,name=subAccountUuid,proto3" json:"subAccountUuid,omitempty"`
	SubAccountAccessKeyUuid string `protobuf:"bytes,7,opt,name=subAccountAccessKeyUuid,proto3" json:"subAccountAccessKeyUuid,omitempty"`
	DomainName              string `protobuf:"bytes,8,opt,name=domainName,proto3" json:"domainName,omitempty"`
	RecordId                string `protobuf:"bytes,9,opt,name=recordId,proto3" json:"recordId,omitempty"`
	Rr                      string `protobuf:"bytes,10,opt,name=rr,proto3" json:"rr,omitempty"`
	Type                    string `protobuf:"bytes,11,opt,name=type,proto3" json:"type,omitempty"`
	Value                   string `protobuf:"bytes,12,opt,name=value,proto3" json:"value,omitempty"`
	Line                    string `protobuf:"bytes,13,opt,name=line,proto3" json:"line,omitempty"`
	Ttl                     int64  `protobuf:"varint,14,opt,name=ttl,proto3" json:"ttl,omitempty"`
}

func (x *UpdateCloudDomainDNSRecordReq) Reset() {
	*x = UpdateCloudDomainDNSRecordReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[112]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCloudDomainDNSRecordReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCloudDomainDNSRecordReq) ProtoMessage() {}

func (x *UpdateCloudDomainDNSRecordReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[112]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCloudDomainDNSRecordReq.ProtoReflect.Descriptor instead.
func (*UpdateCloudDomainDNSRecordReq) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{112}
}

func (x *UpdateCloudDomainDNSRecordReq) GetUserUuid() string {
	if x != nil {
		return x.UserUuid
	}
	return ""
}

func (x *UpdateCloudDomainDNSRecordReq) GetOrgUuid() string {
	if x != nil {
		return x.OrgUuid
	}
	return ""
}

func (x *UpdateCloudDomainDNSRecordReq) GetProductUuid() string {
	if x != nil {
		return x.ProductUuid
	}
	return ""
}

func (x *UpdateCloudDomainDNSRecordReq) GetPlatformId() int32 {
	if x != nil {
		return x.PlatformId
	}
	return 0
}

func (x *UpdateCloudDomainDNSRecordReq) GetAccountUuid() string {
	if x != nil {
		return x.AccountUuid
	}
	return ""
}

func (x *UpdateCloudDomainDNSRecordReq) GetSubAccountUuid() string {
	if x != nil {
		return x.SubAccountUuid
	}
	return ""
}

func (x *UpdateCloudDomainDNSRecordReq) GetSubAccountAccessKeyUuid() string {
	if x != nil {
		return x.SubAccountAccessKeyUuid
	}
	return ""
}

func (x *UpdateCloudDomainDNSRecordReq) GetDomainName() string {
	if x != nil {
		return x.DomainName
	}
	return ""
}

func (x *UpdateCloudDomainDNSRecordReq) GetRecordId() string {
	if x != nil {
		return x.RecordId
	}
	return ""
}

func (x *UpdateCloudDomainDNSRecordReq) GetRr() string {
	if x != nil {
		return x.Rr
	}
	return ""
}

func (x *UpdateCloudDomainDNSRecordReq) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *UpdateCloudDomainDNSRecordReq) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *UpdateCloudDomainDNSRecordReq) GetLine() string {
	if x != nil {
		return x.Line
	}
	return ""
}

func (x *UpdateCloudDomainDNSRecordReq) GetTtl() int64 {
	if x != nil {
		return x.Ttl
	}
	return 0
}

type UpdateCloudDomainDNSRecordReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *UpdateCloudDomainDNSRecordReply) Reset() {
	*x = UpdateCloudDomainDNSRecordReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[113]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCloudDomainDNSRecordReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCloudDomainDNSRecordReply) ProtoMessage() {}

func (x *UpdateCloudDomainDNSRecordReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[113]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCloudDomainDNSRecordReply.ProtoReflect.Descriptor instead.
func (*UpdateCloudDomainDNSRecordReply) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{113}
}

func (x *UpdateCloudDomainDNSRecordReply) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

// 同步云厂商间 DNS 记录
type SyncCloudDomainDnsRecordReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserUuid                      string `protobuf:"bytes,1,opt,name=userUuid,proto3" json:"userUuid,omitempty"`
	OrgUuid                       string `protobuf:"bytes,2,opt,name=orgUuid,proto3" json:"orgUuid,omitempty"`
	ProductUuid                   string `protobuf:"bytes,3,opt,name=productUuid,proto3" json:"productUuid,omitempty"`
	SourcePlatformId              int32  `protobuf:"varint,4,opt,name=sourcePlatformId,proto3" json:"sourcePlatformId,omitempty"`
	SourceAccountUuid             string `protobuf:"bytes,5,opt,name=sourceAccountUuid,proto3" json:"sourceAccountUuid,omitempty"`
	SourceSubAccountUuid          string `protobuf:"bytes,6,opt,name=sourceSubAccountUuid,proto3" json:"sourceSubAccountUuid,omitempty"`
	SourceSubAccountAccessKeyUuid string `protobuf:"bytes,7,opt,name=sourceSubAccountAccessKeyUuid,proto3" json:"sourceSubAccountAccessKeyUuid,omitempty"`
	SourceDomainName              string `protobuf:"bytes,8,opt,name=sourceDomainName,proto3" json:"sourceDomainName,omitempty"`
	DestPlatformId                int32  `protobuf:"varint,9,opt,name=destPlatformId,proto3" json:"destPlatformId,omitempty"`
	DestAccountUuid               string `protobuf:"bytes,10,opt,name=destAccountUuid,proto3" json:"destAccountUuid,omitempty"`
	DestSubAccountUuid            string `protobuf:"bytes,11,opt,name=destSubAccountUuid,proto3" json:"destSubAccountUuid,omitempty"`
	DestSubAccountAccessKeyUuid   string `protobuf:"bytes,12,opt,name=destSubAccountAccessKeyUuid,proto3" json:"destSubAccountAccessKeyUuid,omitempty"`
	DestDomainName                string `protobuf:"bytes,13,opt,name=destDomainName,proto3" json:"destDomainName,omitempty"`
}

func (x *SyncCloudDomainDnsRecordReq) Reset() {
	*x = SyncCloudDomainDnsRecordReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[114]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncCloudDomainDnsRecordReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncCloudDomainDnsRecordReq) ProtoMessage() {}

func (x *SyncCloudDomainDnsRecordReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[114]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncCloudDomainDnsRecordReq.ProtoReflect.Descriptor instead.
func (*SyncCloudDomainDnsRecordReq) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{114}
}

func (x *SyncCloudDomainDnsRecordReq) GetUserUuid() string {
	if x != nil {
		return x.UserUuid
	}
	return ""
}

func (x *SyncCloudDomainDnsRecordReq) GetOrgUuid() string {
	if x != nil {
		return x.OrgUuid
	}
	return ""
}

func (x *SyncCloudDomainDnsRecordReq) GetProductUuid() string {
	if x != nil {
		return x.ProductUuid
	}
	return ""
}

func (x *SyncCloudDomainDnsRecordReq) GetSourcePlatformId() int32 {
	if x != nil {
		return x.SourcePlatformId
	}
	return 0
}

func (x *SyncCloudDomainDnsRecordReq) GetSourceAccountUuid() string {
	if x != nil {
		return x.SourceAccountUuid
	}
	return ""
}

func (x *SyncCloudDomainDnsRecordReq) GetSourceSubAccountUuid() string {
	if x != nil {
		return x.SourceSubAccountUuid
	}
	return ""
}

func (x *SyncCloudDomainDnsRecordReq) GetSourceSubAccountAccessKeyUuid() string {
	if x != nil {
		return x.SourceSubAccountAccessKeyUuid
	}
	return ""
}

func (x *SyncCloudDomainDnsRecordReq) GetSourceDomainName() string {
	if x != nil {
		return x.SourceDomainName
	}
	return ""
}

func (x *SyncCloudDomainDnsRecordReq) GetDestPlatformId() int32 {
	if x != nil {
		return x.DestPlatformId
	}
	return 0
}

func (x *SyncCloudDomainDnsRecordReq) GetDestAccountUuid() string {
	if x != nil {
		return x.DestAccountUuid
	}
	return ""
}

func (x *SyncCloudDomainDnsRecordReq) GetDestSubAccountUuid() string {
	if x != nil {
		return x.DestSubAccountUuid
	}
	return ""
}

func (x *SyncCloudDomainDnsRecordReq) GetDestSubAccountAccessKeyUuid() string {
	if x != nil {
		return x.DestSubAccountAccessKeyUuid
	}
	return ""
}

func (x *SyncCloudDomainDnsRecordReq) GetDestDomainName() string {
	if x != nil {
		return x.DestDomainName
	}
	return ""
}

type SyncCloudDomainDnsRecordReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskId string `protobuf:"bytes,1,opt,name=taskId,proto3" json:"taskId,omitempty"`
}

func (x *SyncCloudDomainDnsRecordReply) Reset() {
	*x = SyncCloudDomainDnsRecordReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[115]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncCloudDomainDnsRecordReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncCloudDomainDnsRecordReply) ProtoMessage() {}

func (x *SyncCloudDomainDnsRecordReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[115]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncCloudDomainDnsRecordReply.ProtoReflect.Descriptor instead.
func (*SyncCloudDomainDnsRecordReply) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{115}
}

func (x *SyncCloudDomainDnsRecordReply) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

// 获取同步云厂商间 DNS 记录
type GetSyncCloudDomainDnsRecordReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserUuid    string `protobuf:"bytes,1,opt,name=userUuid,proto3" json:"userUuid,omitempty"`
	OrgUuid     string `protobuf:"bytes,2,opt,name=orgUuid,proto3" json:"orgUuid,omitempty"`
	ProductUuid string `protobuf:"bytes,3,opt,name=productUuid,proto3" json:"productUuid,omitempty"`
	TaskId      string `protobuf:"bytes,4,opt,name=taskId,proto3" json:"taskId,omitempty"`
}

func (x *GetSyncCloudDomainDnsRecordReq) Reset() {
	*x = GetSyncCloudDomainDnsRecordReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[116]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSyncCloudDomainDnsRecordReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSyncCloudDomainDnsRecordReq) ProtoMessage() {}

func (x *GetSyncCloudDomainDnsRecordReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[116]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSyncCloudDomainDnsRecordReq.ProtoReflect.Descriptor instead.
func (*GetSyncCloudDomainDnsRecordReq) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{116}
}

func (x *GetSyncCloudDomainDnsRecordReq) GetUserUuid() string {
	if x != nil {
		return x.UserUuid
	}
	return ""
}

func (x *GetSyncCloudDomainDnsRecordReq) GetOrgUuid() string {
	if x != nil {
		return x.OrgUuid
	}
	return ""
}

func (x *GetSyncCloudDomainDnsRecordReq) GetProductUuid() string {
	if x != nil {
		return x.ProductUuid
	}
	return ""
}

func (x *GetSyncCloudDomainDnsRecordReq) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

type GetSyncCloudDomainDnsRecordReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SrcPlatform        string `protobuf:"bytes,1,opt,name=srcPlatform,proto3" json:"srcPlatform,omitempty"`
	SrcAccountUuid     string `protobuf:"bytes,2,opt,name=srcAccountUuid,proto3" json:"srcAccountUuid,omitempty"`
	SrcSubAccountUuid  string `protobuf:"bytes,3,opt,name=srcSubAccountUuid,proto3" json:"srcSubAccountUuid,omitempty"`
	SrcDomainName      string `protobuf:"bytes,4,opt,name=srcDomainName,proto3" json:"srcDomainName,omitempty"`
	DestPlatform       string `protobuf:"bytes,5,opt,name=destPlatform,proto3" json:"destPlatform,omitempty"`
	DestAccountUuid    string `protobuf:"bytes,6,opt,name=destAccountUuid,proto3" json:"destAccountUuid,omitempty"`
	DestSubAccountUuid string `protobuf:"bytes,7,opt,name=destSubAccountUuid,proto3" json:"destSubAccountUuid,omitempty"`
	DestDomainName     string `protobuf:"bytes,8,opt,name=destDomainName,proto3" json:"destDomainName,omitempty"`
	Result             int32  `protobuf:"varint,9,opt,name=result,proto3" json:"result,omitempty"`
	Describe           string `protobuf:"bytes,10,opt,name=describe,proto3" json:"describe,omitempty"`
	CreateTime         int64  `protobuf:"varint,11,opt,name=createTime,proto3" json:"createTime,omitempty"`
	OverTime           int64  `protobuf:"varint,12,opt,name=overTime,proto3" json:"overTime,omitempty"`
}

func (x *GetSyncCloudDomainDnsRecordReply) Reset() {
	*x = GetSyncCloudDomainDnsRecordReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[117]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSyncCloudDomainDnsRecordReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSyncCloudDomainDnsRecordReply) ProtoMessage() {}

func (x *GetSyncCloudDomainDnsRecordReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[117]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSyncCloudDomainDnsRecordReply.ProtoReflect.Descriptor instead.
func (*GetSyncCloudDomainDnsRecordReply) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{117}
}

func (x *GetSyncCloudDomainDnsRecordReply) GetSrcPlatform() string {
	if x != nil {
		return x.SrcPlatform
	}
	return ""
}

func (x *GetSyncCloudDomainDnsRecordReply) GetSrcAccountUuid() string {
	if x != nil {
		return x.SrcAccountUuid
	}
	return ""
}

func (x *GetSyncCloudDomainDnsRecordReply) GetSrcSubAccountUuid() string {
	if x != nil {
		return x.SrcSubAccountUuid
	}
	return ""
}

func (x *GetSyncCloudDomainDnsRecordReply) GetSrcDomainName() string {
	if x != nil {
		return x.SrcDomainName
	}
	return ""
}

func (x *GetSyncCloudDomainDnsRecordReply) GetDestPlatform() string {
	if x != nil {
		return x.DestPlatform
	}
	return ""
}

func (x *GetSyncCloudDomainDnsRecordReply) GetDestAccountUuid() string {
	if x != nil {
		return x.DestAccountUuid
	}
	return ""
}

func (x *GetSyncCloudDomainDnsRecordReply) GetDestSubAccountUuid() string {
	if x != nil {
		return x.DestSubAccountUuid
	}
	return ""
}

func (x *GetSyncCloudDomainDnsRecordReply) GetDestDomainName() string {
	if x != nil {
		return x.DestDomainName
	}
	return ""
}

func (x *GetSyncCloudDomainDnsRecordReply) GetResult() int32 {
	if x != nil {
		return x.Result
	}
	return 0
}

func (x *GetSyncCloudDomainDnsRecordReply) GetDescribe() string {
	if x != nil {
		return x.Describe
	}
	return ""
}

func (x *GetSyncCloudDomainDnsRecordReply) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *GetSyncCloudDomainDnsRecordReply) GetOverTime() int64 {
	if x != nil {
		return x.OverTime
	}
	return 0
}

type GetUnSupportSyncCloudDomainDnsRecordReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserUuid    string `protobuf:"bytes,1,opt,name=userUuid,proto3" json:"userUuid,omitempty"`
	OrgUuid     string `protobuf:"bytes,2,opt,name=orgUuid,proto3" json:"orgUuid,omitempty"`
	ProductUuid string `protobuf:"bytes,3,opt,name=productUuid,proto3" json:"productUuid,omitempty"`
	TaskId      string `protobuf:"bytes,4,opt,name=taskId,proto3" json:"taskId,omitempty"`
}

func (x *GetUnSupportSyncCloudDomainDnsRecordReq) Reset() {
	*x = GetUnSupportSyncCloudDomainDnsRecordReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[118]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUnSupportSyncCloudDomainDnsRecordReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUnSupportSyncCloudDomainDnsRecordReq) ProtoMessage() {}

func (x *GetUnSupportSyncCloudDomainDnsRecordReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[118]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUnSupportSyncCloudDomainDnsRecordReq.ProtoReflect.Descriptor instead.
func (*GetUnSupportSyncCloudDomainDnsRecordReq) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{118}
}

func (x *GetUnSupportSyncCloudDomainDnsRecordReq) GetUserUuid() string {
	if x != nil {
		return x.UserUuid
	}
	return ""
}

func (x *GetUnSupportSyncCloudDomainDnsRecordReq) GetOrgUuid() string {
	if x != nil {
		return x.OrgUuid
	}
	return ""
}

func (x *GetUnSupportSyncCloudDomainDnsRecordReq) GetProductUuid() string {
	if x != nil {
		return x.ProductUuid
	}
	return ""
}

func (x *GetUnSupportSyncCloudDomainDnsRecordReq) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

type GetUnSupportSyncCloudDomainDnsRecordReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnSupportSyncCloudDomainDnsRecords []*GetUnSupportSyncCloudDomainDnsRecordReply_UnSupportSyncCloudDomainDnsRecord `protobuf:"bytes,1,rep,name=unSupportSyncCloudDomainDnsRecords,proto3" json:"unSupportSyncCloudDomainDnsRecords,omitempty"`
}

func (x *GetUnSupportSyncCloudDomainDnsRecordReply) Reset() {
	*x = GetUnSupportSyncCloudDomainDnsRecordReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[119]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUnSupportSyncCloudDomainDnsRecordReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUnSupportSyncCloudDomainDnsRecordReply) ProtoMessage() {}

func (x *GetUnSupportSyncCloudDomainDnsRecordReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[119]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUnSupportSyncCloudDomainDnsRecordReply.ProtoReflect.Descriptor instead.
func (*GetUnSupportSyncCloudDomainDnsRecordReply) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{119}
}

func (x *GetUnSupportSyncCloudDomainDnsRecordReply) GetUnSupportSyncCloudDomainDnsRecords() []*GetUnSupportSyncCloudDomainDnsRecordReply_UnSupportSyncCloudDomainDnsRecord {
	if x != nil {
		return x.UnSupportSyncCloudDomainDnsRecords
	}
	return nil
}

// certificate
// 购买证书，certificate
type BuyCertificateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserUuid      string `protobuf:"bytes,1,opt,name=userUuid,proto3" json:"userUuid,omitempty"`
	OrgUuid       string `protobuf:"bytes,2,opt,name=orgUuid,proto3" json:"orgUuid,omitempty"`
	ProductUuid   string `protobuf:"bytes,3,opt,name=productUuid,proto3" json:"productUuid,omitempty"`
	PlatformId    int32  `protobuf:"varint,4,opt,name=platformId,proto3" json:"platformId,omitempty"`
	AccessKeyUuid string `protobuf:"bytes,5,opt,name=accessKeyUuid,proto3" json:"accessKeyUuid,omitempty"`
}

func (x *BuyCertificateReq) Reset() {
	*x = BuyCertificateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[120]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuyCertificateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuyCertificateReq) ProtoMessage() {}

func (x *BuyCertificateReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[120]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuyCertificateReq.ProtoReflect.Descriptor instead.
func (*BuyCertificateReq) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{120}
}

func (x *BuyCertificateReq) GetUserUuid() string {
	if x != nil {
		return x.UserUuid
	}
	return ""
}

func (x *BuyCertificateReq) GetOrgUuid() string {
	if x != nil {
		return x.OrgUuid
	}
	return ""
}

func (x *BuyCertificateReq) GetProductUuid() string {
	if x != nil {
		return x.ProductUuid
	}
	return ""
}

func (x *BuyCertificateReq) GetPlatformId() int32 {
	if x != nil {
		return x.PlatformId
	}
	return 0
}

func (x *BuyCertificateReq) GetAccessKeyUuid() string {
	if x != nil {
		return x.AccessKeyUuid
	}
	return ""
}

type BuyCertificateReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *BuyCertificateReply) Reset() {
	*x = BuyCertificateReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[121]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuyCertificateReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuyCertificateReply) ProtoMessage() {}

func (x *BuyCertificateReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[121]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuyCertificateReply.ProtoReflect.Descriptor instead.
func (*BuyCertificateReply) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{121}
}

// 解析证书，不需要验证用户 - 功能
type ParseCertificateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Certificate string `protobuf:"bytes,1,opt,name=certificate,proto3" json:"certificate,omitempty"` // 内容为: base64 encode 之后的值
}

func (x *ParseCertificateReq) Reset() {
	*x = ParseCertificateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[122]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParseCertificateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParseCertificateReq) ProtoMessage() {}

func (x *ParseCertificateReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[122]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParseCertificateReq.ProtoReflect.Descriptor instead.
func (*ParseCertificateReq) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{122}
}

func (x *ParseCertificateReq) GetCertificate() string {
	if x != nil {
		return x.Certificate
	}
	return ""
}

type ParseCertificateReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version      int32    `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	SerialNumber string   `protobuf:"bytes,2,opt,name=serialNumber,proto3" json:"serialNumber,omitempty"`
	Subject      string   `protobuf:"bytes,3,opt,name=subject,proto3" json:"subject,omitempty"`
	DnsNames     []string `protobuf:"bytes,4,rep,name=dnsNames,proto3" json:"dnsNames,omitempty"`
	Issuer       string   `protobuf:"bytes,5,opt,name=issuer,proto3" json:"issuer,omitempty"`
	NotAfter     int64    `protobuf:"varint,6,opt,name=notAfter,proto3" json:"notAfter,omitempty"`
	NotBefore    int64    `protobuf:"varint,7,opt,name=notBefore,proto3" json:"notBefore,omitempty"`
}

func (x *ParseCertificateReply) Reset() {
	*x = ParseCertificateReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[123]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParseCertificateReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParseCertificateReply) ProtoMessage() {}

func (x *ParseCertificateReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[123]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParseCertificateReply.ProtoReflect.Descriptor instead.
func (*ParseCertificateReply) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{123}
}

func (x *ParseCertificateReply) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *ParseCertificateReply) GetSerialNumber() string {
	if x != nil {
		return x.SerialNumber
	}
	return ""
}

func (x *ParseCertificateReply) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *ParseCertificateReply) GetDnsNames() []string {
	if x != nil {
		return x.DnsNames
	}
	return nil
}

func (x *ParseCertificateReply) GetIssuer() string {
	if x != nil {
		return x.Issuer
	}
	return ""
}

func (x *ParseCertificateReply) GetNotAfter() int64 {
	if x != nil {
		return x.NotAfter
	}
	return 0
}

func (x *ParseCertificateReply) GetNotBefore() int64 {
	if x != nil {
		return x.NotBefore
	}
	return 0
}

// 录入证书
type RecordCertificateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserUuid    string `protobuf:"bytes,1,opt,name=userUuid,proto3" json:"userUuid,omitempty"`
	OrgUuid     string `protobuf:"bytes,2,opt,name=orgUuid,proto3" json:"orgUuid,omitempty"`
	ProductUuid string `protobuf:"bytes,3,opt,name=productUuid,proto3" json:"productUuid,omitempty"`
	Key         string `protobuf:"bytes,4,opt,name=key,proto3" json:"key,omitempty"`
	Certificate string `protobuf:"bytes,5,opt,name=certificate,proto3" json:"certificate,omitempty"`
}

func (x *RecordCertificateReq) Reset() {
	*x = RecordCertificateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[124]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordCertificateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordCertificateReq) ProtoMessage() {}

func (x *RecordCertificateReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[124]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordCertificateReq.ProtoReflect.Descriptor instead.
func (*RecordCertificateReq) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{124}
}

func (x *RecordCertificateReq) GetUserUuid() string {
	if x != nil {
		return x.UserUuid
	}
	return ""
}

func (x *RecordCertificateReq) GetOrgUuid() string {
	if x != nil {
		return x.OrgUuid
	}
	return ""
}

func (x *RecordCertificateReq) GetProductUuid() string {
	if x != nil {
		return x.ProductUuid
	}
	return ""
}

func (x *RecordCertificateReq) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *RecordCertificateReq) GetCertificate() string {
	if x != nil {
		return x.Certificate
	}
	return ""
}

type RecordCertificateReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *RecordCertificateReply) Reset() {
	*x = RecordCertificateReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[125]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordCertificateReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordCertificateReply) ProtoMessage() {}

func (x *RecordCertificateReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[125]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordCertificateReply.ProtoReflect.Descriptor instead.
func (*RecordCertificateReply) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{125}
}

func (x *RecordCertificateReply) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

// 列出证书
type ListCertificateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserUuid    string `protobuf:"bytes,1,opt,name=userUuid,proto3" json:"userUuid,omitempty"`
	OrgUuid     string `protobuf:"bytes,2,opt,name=orgUuid,proto3" json:"orgUuid,omitempty"`
	ProductUuid string `protobuf:"bytes,3,opt,name=productUuid,proto3" json:"productUuid,omitempty"`
	DomainName  string `protobuf:"bytes,4,opt,name=domainName,proto3" json:"domainName,omitempty"`
	NotExpire   bool   `protobuf:"varint,5,opt,name=notExpire,proto3" json:"notExpire,omitempty"`
}

func (x *ListCertificateReq) Reset() {
	*x = ListCertificateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[126]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCertificateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCertificateReq) ProtoMessage() {}

func (x *ListCertificateReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[126]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCertificateReq.ProtoReflect.Descriptor instead.
func (*ListCertificateReq) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{126}
}

func (x *ListCertificateReq) GetUserUuid() string {
	if x != nil {
		return x.UserUuid
	}
	return ""
}

func (x *ListCertificateReq) GetOrgUuid() string {
	if x != nil {
		return x.OrgUuid
	}
	return ""
}

func (x *ListCertificateReq) GetProductUuid() string {
	if x != nil {
		return x.ProductUuid
	}
	return ""
}

func (x *ListCertificateReq) GetDomainName() string {
	if x != nil {
		return x.DomainName
	}
	return ""
}

func (x *ListCertificateReq) GetNotExpire() bool {
	if x != nil {
		return x.NotExpire
	}
	return false
}

type ListCertificateReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Certificate []*ListCertificateReply_Certificate `protobuf:"bytes,1,rep,name=certificate,proto3" json:"certificate,omitempty"`
}

func (x *ListCertificateReply) Reset() {
	*x = ListCertificateReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[127]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCertificateReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCertificateReply) ProtoMessage() {}

func (x *ListCertificateReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[127]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCertificateReply.ProtoReflect.Descriptor instead.
func (*ListCertificateReply) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{127}
}

func (x *ListCertificateReply) GetCertificate() []*ListCertificateReply_Certificate {
	if x != nil {
		return x.Certificate
	}
	return nil
}

// 删除组织产品内的证书
type DelCertificateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserUuid        string `protobuf:"bytes,1,opt,name=userUuid,proto3" json:"userUuid,omitempty"`
	OrgUuid         string `protobuf:"bytes,2,opt,name=orgUuid,proto3" json:"orgUuid,omitempty"`
	ProductUuid     string `protobuf:"bytes,3,opt,name=productUuid,proto3" json:"productUuid,omitempty"`
	CertificateUuid string `protobuf:"bytes,4,opt,name=certificateUuid,proto3" json:"certificateUuid,omitempty"`
	SerialNumber    string `protobuf:"bytes,5,opt,name=serialNumber,proto3" json:"serialNumber,omitempty"`
}

func (x *DelCertificateReq) Reset() {
	*x = DelCertificateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[128]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelCertificateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelCertificateReq) ProtoMessage() {}

func (x *DelCertificateReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[128]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelCertificateReq.ProtoReflect.Descriptor instead.
func (*DelCertificateReq) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{128}
}

func (x *DelCertificateReq) GetUserUuid() string {
	if x != nil {
		return x.UserUuid
	}
	return ""
}

func (x *DelCertificateReq) GetOrgUuid() string {
	if x != nil {
		return x.OrgUuid
	}
	return ""
}

func (x *DelCertificateReq) GetProductUuid() string {
	if x != nil {
		return x.ProductUuid
	}
	return ""
}

func (x *DelCertificateReq) GetCertificateUuid() string {
	if x != nil {
		return x.CertificateUuid
	}
	return ""
}

func (x *DelCertificateReq) GetSerialNumber() string {
	if x != nil {
		return x.SerialNumber
	}
	return ""
}

type DelCertificateReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *DelCertificateReply) Reset() {
	*x = DelCertificateReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[129]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelCertificateReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelCertificateReply) ProtoMessage() {}

func (x *DelCertificateReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[129]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelCertificateReply.ProtoReflect.Descriptor instead.
func (*DelCertificateReply) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{129}
}

func (x *DelCertificateReply) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

// 获取证书 By Uuid - 仅提供给内部调用
type GetCertificateByUuidReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgUuid     string `protobuf:"bytes,1,opt,name=orgUuid,proto3" json:"orgUuid,omitempty"`
	ProductUuid string `protobuf:"bytes,2,opt,name=productUuid,proto3" json:"productUuid,omitempty"`
	Uuid        string `protobuf:"bytes,3,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *GetCertificateByUuidReq) Reset() {
	*x = GetCertificateByUuidReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[130]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCertificateByUuidReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCertificateByUuidReq) ProtoMessage() {}

func (x *GetCertificateByUuidReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[130]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCertificateByUuidReq.ProtoReflect.Descriptor instead.
func (*GetCertificateByUuidReq) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{130}
}

func (x *GetCertificateByUuidReq) GetOrgUuid() string {
	if x != nil {
		return x.OrgUuid
	}
	return ""
}

func (x *GetCertificateByUuidReq) GetProductUuid() string {
	if x != nil {
		return x.ProductUuid
	}
	return ""
}

func (x *GetCertificateByUuidReq) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type GetCertificateByUuidReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid         string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	OrgUuid      string `protobuf:"bytes,2,opt,name=orgUuid,proto3" json:"orgUuid,omitempty"`
	ProductUuid  string `protobuf:"bytes,3,opt,name=productUuid,proto3" json:"productUuid,omitempty"`
	Key          string `protobuf:"bytes,4,opt,name=key,proto3" json:"key,omitempty"`
	Pem          string `protobuf:"bytes,5,opt,name=pem,proto3" json:"pem,omitempty"`
	Version      int32  `protobuf:"varint,6,opt,name=version,proto3" json:"version,omitempty"`
	StartDate    int64  `protobuf:"varint,7,opt,name=startDate,proto3" json:"startDate,omitempty"`
	EndDate      int64  `protobuf:"varint,8,opt,name=endDate,proto3" json:"endDate,omitempty"`
	Subject      string `protobuf:"bytes,9,opt,name=subject,proto3" json:"subject,omitempty"`
	SerialNumber string `protobuf:"bytes,10,opt,name=serialNumber,proto3" json:"serialNumber,omitempty"`
	Issuer       string `protobuf:"bytes,11,opt,name=issuer,proto3" json:"issuer,omitempty"`
	DnsNames     string `protobuf:"bytes,12,opt,name=dnsNames,proto3" json:"dnsNames,omitempty"`
	CreateTime   int64  `protobuf:"varint,13,opt,name=createTime,proto3" json:"createTime,omitempty"`
}

func (x *GetCertificateByUuidReply) Reset() {
	*x = GetCertificateByUuidReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[131]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCertificateByUuidReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCertificateByUuidReply) ProtoMessage() {}

func (x *GetCertificateByUuidReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[131]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCertificateByUuidReply.ProtoReflect.Descriptor instead.
func (*GetCertificateByUuidReply) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{131}
}

func (x *GetCertificateByUuidReply) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *GetCertificateByUuidReply) GetOrgUuid() string {
	if x != nil {
		return x.OrgUuid
	}
	return ""
}

func (x *GetCertificateByUuidReply) GetProductUuid() string {
	if x != nil {
		return x.ProductUuid
	}
	return ""
}

func (x *GetCertificateByUuidReply) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *GetCertificateByUuidReply) GetPem() string {
	if x != nil {
		return x.Pem
	}
	return ""
}

func (x *GetCertificateByUuidReply) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *GetCertificateByUuidReply) GetStartDate() int64 {
	if x != nil {
		return x.StartDate
	}
	return 0
}

func (x *GetCertificateByUuidReply) GetEndDate() int64 {
	if x != nil {
		return x.EndDate
	}
	return 0
}

func (x *GetCertificateByUuidReply) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *GetCertificateByUuidReply) GetSerialNumber() string {
	if x != nil {
		return x.SerialNumber
	}
	return ""
}

func (x *GetCertificateByUuidReply) GetIssuer() string {
	if x != nil {
		return x.Issuer
	}
	return ""
}

func (x *GetCertificateByUuidReply) GetDnsNames() string {
	if x != nil {
		return x.DnsNames
	}
	return ""
}

func (x *GetCertificateByUuidReply) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

// 对象存储
// 列出对象存储桶
type ListOSSBucketReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserUuid                string `protobuf:"bytes,1,opt,name=userUuid,proto3" json:"userUuid,omitempty"`
	OrgUuid                 string `protobuf:"bytes,2,opt,name=orgUuid,proto3" json:"orgUuid,omitempty"`
	ProductUuid             string `protobuf:"bytes,3,opt,name=productUuid,proto3" json:"productUuid,omitempty"`
	PlatformId              int32  `protobuf:"varint,4,opt,name=platformId,proto3" json:"platformId,omitempty"`
	AccountUuid             string `protobuf:"bytes,5,opt,name=accountUuid,proto3" json:"accountUuid,omitempty"`
	SubAccountUuid          string `protobuf:"bytes,6,opt,name=subAccountUuid,proto3" json:"subAccountUuid,omitempty"`
	SubAccountAccessKeyUuid string `protobuf:"bytes,7,opt,name=subAccountAccessKeyUuid,proto3" json:"subAccountAccessKeyUuid,omitempty"`
}

func (x *ListOSSBucketReq) Reset() {
	*x = ListOSSBucketReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[132]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOSSBucketReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOSSBucketReq) ProtoMessage() {}

func (x *ListOSSBucketReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[132]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOSSBucketReq.ProtoReflect.Descriptor instead.
func (*ListOSSBucketReq) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{132}
}

func (x *ListOSSBucketReq) GetUserUuid() string {
	if x != nil {
		return x.UserUuid
	}
	return ""
}

func (x *ListOSSBucketReq) GetOrgUuid() string {
	if x != nil {
		return x.OrgUuid
	}
	return ""
}

func (x *ListOSSBucketReq) GetProductUuid() string {
	if x != nil {
		return x.ProductUuid
	}
	return ""
}

func (x *ListOSSBucketReq) GetPlatformId() int32 {
	if x != nil {
		return x.PlatformId
	}
	return 0
}

func (x *ListOSSBucketReq) GetAccountUuid() string {
	if x != nil {
		return x.AccountUuid
	}
	return ""
}

func (x *ListOSSBucketReq) GetSubAccountUuid() string {
	if x != nil {
		return x.SubAccountUuid
	}
	return ""
}

func (x *ListOSSBucketReq) GetSubAccountAccessKeyUuid() string {
	if x != nil {
		return x.SubAccountAccessKeyUuid
	}
	return ""
}

type ListOSSBucketReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bucket []*ListOSSBucketReply_Bucket `protobuf:"bytes,1,rep,name=bucket,proto3" json:"bucket,omitempty"`
}

func (x *ListOSSBucketReply) Reset() {
	*x = ListOSSBucketReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[133]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOSSBucketReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOSSBucketReply) ProtoMessage() {}

func (x *ListOSSBucketReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[133]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOSSBucketReply.ProtoReflect.Descriptor instead.
func (*ListOSSBucketReply) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{133}
}

func (x *ListOSSBucketReply) GetBucket() []*ListOSSBucketReply_Bucket {
	if x != nil {
		return x.Bucket
	}
	return nil
}

// 创建对象存储桶
type CreateOSSBucketReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserUuid                string `protobuf:"bytes,1,opt,name=userUuid,proto3" json:"userUuid,omitempty"`
	OrgUuid                 string `protobuf:"bytes,2,opt,name=orgUuid,proto3" json:"orgUuid,omitempty"`
	ProductUuid             string `protobuf:"bytes,3,opt,name=productUuid,proto3" json:"productUuid,omitempty"`
	PlatformId              int32  `protobuf:"varint,4,opt,name=platformId,proto3" json:"platformId,omitempty"`
	AccountUuid             string `protobuf:"bytes,5,opt,name=accountUuid,proto3" json:"accountUuid,omitempty"`
	SubAccountUuid          string `protobuf:"bytes,6,opt,name=subAccountUuid,proto3" json:"subAccountUuid,omitempty"`
	SubAccountAccessKeyUuid string `protobuf:"bytes,7,opt,name=subAccountAccessKeyUuid,proto3" json:"subAccountAccessKeyUuid,omitempty"`
	Name                    string `protobuf:"bytes,8,opt,name=name,proto3" json:"name,omitempty"`
	// 1. 私有写公共读，2. 私有写私有读 3. 公共写公共读 (拒绝该类创建)
	Permission int32 `protobuf:"varint,9,opt,name=permission,proto3" json:"permission,omitempty"`
}

func (x *CreateOSSBucketReq) Reset() {
	*x = CreateOSSBucketReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[134]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOSSBucketReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOSSBucketReq) ProtoMessage() {}

func (x *CreateOSSBucketReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[134]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOSSBucketReq.ProtoReflect.Descriptor instead.
func (*CreateOSSBucketReq) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{134}
}

func (x *CreateOSSBucketReq) GetUserUuid() string {
	if x != nil {
		return x.UserUuid
	}
	return ""
}

func (x *CreateOSSBucketReq) GetOrgUuid() string {
	if x != nil {
		return x.OrgUuid
	}
	return ""
}

func (x *CreateOSSBucketReq) GetProductUuid() string {
	if x != nil {
		return x.ProductUuid
	}
	return ""
}

func (x *CreateOSSBucketReq) GetPlatformId() int32 {
	if x != nil {
		return x.PlatformId
	}
	return 0
}

func (x *CreateOSSBucketReq) GetAccountUuid() string {
	if x != nil {
		return x.AccountUuid
	}
	return ""
}

func (x *CreateOSSBucketReq) GetSubAccountUuid() string {
	if x != nil {
		return x.SubAccountUuid
	}
	return ""
}

func (x *CreateOSSBucketReq) GetSubAccountAccessKeyUuid() string {
	if x != nil {
		return x.SubAccountAccessKeyUuid
	}
	return ""
}

func (x *CreateOSSBucketReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateOSSBucketReq) GetPermission() int32 {
	if x != nil {
		return x.Permission
	}
	return 0
}

type CreateOSSBucketReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *CreateOSSBucketReply) Reset() {
	*x = CreateOSSBucketReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[135]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOSSBucketReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOSSBucketReply) ProtoMessage() {}

func (x *CreateOSSBucketReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[135]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOSSBucketReply.ProtoReflect.Descriptor instead.
func (*CreateOSSBucketReply) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{135}
}

func (x *CreateOSSBucketReply) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

// 获取对象存储桶
type GetOSSBucketReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserUuid                string `protobuf:"bytes,1,opt,name=userUuid,proto3" json:"userUuid,omitempty"`
	OrgUuid                 string `protobuf:"bytes,2,opt,name=orgUuid,proto3" json:"orgUuid,omitempty"`
	ProductUuid             string `protobuf:"bytes,3,opt,name=productUuid,proto3" json:"productUuid,omitempty"`
	PlatformId              int32  `protobuf:"varint,4,opt,name=platformId,proto3" json:"platformId,omitempty"`
	AccountUuid             string `protobuf:"bytes,5,opt,name=accountUuid,proto3" json:"accountUuid,omitempty"`
	SubAccountUuid          string `protobuf:"bytes,6,opt,name=subAccountUuid,proto3" json:"subAccountUuid,omitempty"`
	SubAccountAccessKeyUuid string `protobuf:"bytes,7,opt,name=subAccountAccessKeyUuid,proto3" json:"subAccountAccessKeyUuid,omitempty"`
}

func (x *GetOSSBucketReq) Reset() {
	*x = GetOSSBucketReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[136]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOSSBucketReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOSSBucketReq) ProtoMessage() {}

func (x *GetOSSBucketReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[136]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOSSBucketReq.ProtoReflect.Descriptor instead.
func (*GetOSSBucketReq) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{136}
}

func (x *GetOSSBucketReq) GetUserUuid() string {
	if x != nil {
		return x.UserUuid
	}
	return ""
}

func (x *GetOSSBucketReq) GetOrgUuid() string {
	if x != nil {
		return x.OrgUuid
	}
	return ""
}

func (x *GetOSSBucketReq) GetProductUuid() string {
	if x != nil {
		return x.ProductUuid
	}
	return ""
}

func (x *GetOSSBucketReq) GetPlatformId() int32 {
	if x != nil {
		return x.PlatformId
	}
	return 0
}

func (x *GetOSSBucketReq) GetAccountUuid() string {
	if x != nil {
		return x.AccountUuid
	}
	return ""
}

func (x *GetOSSBucketReq) GetSubAccountUuid() string {
	if x != nil {
		return x.SubAccountUuid
	}
	return ""
}

func (x *GetOSSBucketReq) GetSubAccountAccessKeyUuid() string {
	if x != nil {
		return x.SubAccountAccessKeyUuid
	}
	return ""
}

type GetOSSBucketReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetOSSBucketReply) Reset() {
	*x = GetOSSBucketReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[137]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOSSBucketReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOSSBucketReply) ProtoMessage() {}

func (x *GetOSSBucketReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[137]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOSSBucketReply.ProtoReflect.Descriptor instead.
func (*GetOSSBucketReply) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{137}
}

func (x *GetOSSBucketReply) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// 删除对象存储对象 - 暂时不进行支持
type DelOSSObjectReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserUuid                string `protobuf:"bytes,1,opt,name=userUuid,proto3" json:"userUuid,omitempty"`
	OrgUuid                 string `protobuf:"bytes,2,opt,name=orgUuid,proto3" json:"orgUuid,omitempty"`
	ProductUuid             string `protobuf:"bytes,3,opt,name=productUuid,proto3" json:"productUuid,omitempty"`
	PlatformId              int32  `protobuf:"varint,4,opt,name=platformId,proto3" json:"platformId,omitempty"`
	AccountUuid             string `protobuf:"bytes,5,opt,name=accountUuid,proto3" json:"accountUuid,omitempty"`
	SubAccountUuid          string `protobuf:"bytes,6,opt,name=subAccountUuid,proto3" json:"subAccountUuid,omitempty"`
	SubAccountAccessKeyUuid string `protobuf:"bytes,7,opt,name=subAccountAccessKeyUuid,proto3" json:"subAccountAccessKeyUuid,omitempty"`
}

func (x *DelOSSObjectReq) Reset() {
	*x = DelOSSObjectReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[138]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelOSSObjectReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelOSSObjectReq) ProtoMessage() {}

func (x *DelOSSObjectReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[138]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelOSSObjectReq.ProtoReflect.Descriptor instead.
func (*DelOSSObjectReq) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{138}
}

func (x *DelOSSObjectReq) GetUserUuid() string {
	if x != nil {
		return x.UserUuid
	}
	return ""
}

func (x *DelOSSObjectReq) GetOrgUuid() string {
	if x != nil {
		return x.OrgUuid
	}
	return ""
}

func (x *DelOSSObjectReq) GetProductUuid() string {
	if x != nil {
		return x.ProductUuid
	}
	return ""
}

func (x *DelOSSObjectReq) GetPlatformId() int32 {
	if x != nil {
		return x.PlatformId
	}
	return 0
}

func (x *DelOSSObjectReq) GetAccountUuid() string {
	if x != nil {
		return x.AccountUuid
	}
	return ""
}

func (x *DelOSSObjectReq) GetSubAccountUuid() string {
	if x != nil {
		return x.SubAccountUuid
	}
	return ""
}

func (x *DelOSSObjectReq) GetSubAccountAccessKeyUuid() string {
	if x != nil {
		return x.SubAccountAccessKeyUuid
	}
	return ""
}

type DelOSSObjectReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *DelOSSObjectReply) Reset() {
	*x = DelOSSObjectReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[139]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelOSSObjectReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelOSSObjectReply) ProtoMessage() {}

func (x *DelOSSObjectReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[139]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelOSSObjectReply.ProtoReflect.Descriptor instead.
func (*DelOSSObjectReply) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{139}
}

func (x *DelOSSObjectReply) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

// 获取对象存储对象元数据
type GetOSSObjectMetaReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserUuid                string `protobuf:"bytes,1,opt,name=userUuid,proto3" json:"userUuid,omitempty"`
	OrgUuid                 string `protobuf:"bytes,2,opt,name=orgUuid,proto3" json:"orgUuid,omitempty"`
	ProductUuid             string `protobuf:"bytes,3,opt,name=productUuid,proto3" json:"productUuid,omitempty"`
	PlatformId              int32  `protobuf:"varint,4,opt,name=platformId,proto3" json:"platformId,omitempty"`
	AccountUuid             string `protobuf:"bytes,5,opt,name=accountUuid,proto3" json:"accountUuid,omitempty"`
	SubAccountUuid          string `protobuf:"bytes,6,opt,name=subAccountUuid,proto3" json:"subAccountUuid,omitempty"`
	SubAccountAccessKeyUuid string `protobuf:"bytes,7,opt,name=subAccountAccessKeyUuid,proto3" json:"subAccountAccessKeyUuid,omitempty"`
}

func (x *GetOSSObjectMetaReq) Reset() {
	*x = GetOSSObjectMetaReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[140]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOSSObjectMetaReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOSSObjectMetaReq) ProtoMessage() {}

func (x *GetOSSObjectMetaReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[140]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOSSObjectMetaReq.ProtoReflect.Descriptor instead.
func (*GetOSSObjectMetaReq) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{140}
}

func (x *GetOSSObjectMetaReq) GetUserUuid() string {
	if x != nil {
		return x.UserUuid
	}
	return ""
}

func (x *GetOSSObjectMetaReq) GetOrgUuid() string {
	if x != nil {
		return x.OrgUuid
	}
	return ""
}

func (x *GetOSSObjectMetaReq) GetProductUuid() string {
	if x != nil {
		return x.ProductUuid
	}
	return ""
}

func (x *GetOSSObjectMetaReq) GetPlatformId() int32 {
	if x != nil {
		return x.PlatformId
	}
	return 0
}

func (x *GetOSSObjectMetaReq) GetAccountUuid() string {
	if x != nil {
		return x.AccountUuid
	}
	return ""
}

func (x *GetOSSObjectMetaReq) GetSubAccountUuid() string {
	if x != nil {
		return x.SubAccountUuid
	}
	return ""
}

func (x *GetOSSObjectMetaReq) GetSubAccountAccessKeyUuid() string {
	if x != nil {
		return x.SubAccountAccessKeyUuid
	}
	return ""
}

type GetOSSObjectMetaReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetOSSObjectMetaReply) Reset() {
	*x = GetOSSObjectMetaReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[141]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOSSObjectMetaReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOSSObjectMetaReply) ProtoMessage() {}

func (x *GetOSSObjectMetaReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[141]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOSSObjectMetaReply.ProtoReflect.Descriptor instead.
func (*GetOSSObjectMetaReply) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{141}
}

// 解冻对象存储对象
type RestoreOSSObjectReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserUuid                string `protobuf:"bytes,1,opt,name=userUuid,proto3" json:"userUuid,omitempty"`
	OrgUuid                 string `protobuf:"bytes,2,opt,name=orgUuid,proto3" json:"orgUuid,omitempty"`
	ProductUuid             string `protobuf:"bytes,3,opt,name=productUuid,proto3" json:"productUuid,omitempty"`
	PlatformId              int32  `protobuf:"varint,4,opt,name=platformId,proto3" json:"platformId,omitempty"`
	AccountUuid             string `protobuf:"bytes,5,opt,name=accountUuid,proto3" json:"accountUuid,omitempty"`
	SubAccountUuid          string `protobuf:"bytes,6,opt,name=subAccountUuid,proto3" json:"subAccountUuid,omitempty"`
	SubAccountAccessKeyUuid string `protobuf:"bytes,7,opt,name=subAccountAccessKeyUuid,proto3" json:"subAccountAccessKeyUuid,omitempty"`
}

func (x *RestoreOSSObjectReq) Reset() {
	*x = RestoreOSSObjectReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[142]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RestoreOSSObjectReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestoreOSSObjectReq) ProtoMessage() {}

func (x *RestoreOSSObjectReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[142]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestoreOSSObjectReq.ProtoReflect.Descriptor instead.
func (*RestoreOSSObjectReq) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{142}
}

func (x *RestoreOSSObjectReq) GetUserUuid() string {
	if x != nil {
		return x.UserUuid
	}
	return ""
}

func (x *RestoreOSSObjectReq) GetOrgUuid() string {
	if x != nil {
		return x.OrgUuid
	}
	return ""
}

func (x *RestoreOSSObjectReq) GetProductUuid() string {
	if x != nil {
		return x.ProductUuid
	}
	return ""
}

func (x *RestoreOSSObjectReq) GetPlatformId() int32 {
	if x != nil {
		return x.PlatformId
	}
	return 0
}

func (x *RestoreOSSObjectReq) GetAccountUuid() string {
	if x != nil {
		return x.AccountUuid
	}
	return ""
}

func (x *RestoreOSSObjectReq) GetSubAccountUuid() string {
	if x != nil {
		return x.SubAccountUuid
	}
	return ""
}

func (x *RestoreOSSObjectReq) GetSubAccountAccessKeyUuid() string {
	if x != nil {
		return x.SubAccountAccessKeyUuid
	}
	return ""
}

type RestoreOSSObjectReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *RestoreOSSObjectReply) Reset() {
	*x = RestoreOSSObjectReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[143]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RestoreOSSObjectReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestoreOSSObjectReply) ProtoMessage() {}

func (x *RestoreOSSObjectReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[143]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestoreOSSObjectReply.ProtoReflect.Descriptor instead.
func (*RestoreOSSObjectReply) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{143}
}

func (x *RestoreOSSObjectReply) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

// 云服务Region
type AddCloudPlatformRegionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserUuid   string `protobuf:"bytes,1,opt,name=userUuid,proto3" json:"userUuid,omitempty"`
	OrgUuid    string `protobuf:"bytes,2,opt,name=orgUuid,proto3" json:"orgUuid,omitempty"`
	PlatformId int32  `protobuf:"varint,3,opt,name=platformId,proto3" json:"platformId,omitempty"`
	Region     string `protobuf:"bytes,4,opt,name=region,proto3" json:"region,omitempty"`
	RegionName string `protobuf:"bytes,5,opt,name=regionName,proto3" json:"regionName,omitempty"`
}

func (x *AddCloudPlatformRegionReq) Reset() {
	*x = AddCloudPlatformRegionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[144]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddCloudPlatformRegionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCloudPlatformRegionReq) ProtoMessage() {}

func (x *AddCloudPlatformRegionReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[144]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCloudPlatformRegionReq.ProtoReflect.Descriptor instead.
func (*AddCloudPlatformRegionReq) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{144}
}

func (x *AddCloudPlatformRegionReq) GetUserUuid() string {
	if x != nil {
		return x.UserUuid
	}
	return ""
}

func (x *AddCloudPlatformRegionReq) GetOrgUuid() string {
	if x != nil {
		return x.OrgUuid
	}
	return ""
}

func (x *AddCloudPlatformRegionReq) GetPlatformId() int32 {
	if x != nil {
		return x.PlatformId
	}
	return 0
}

func (x *AddCloudPlatformRegionReq) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *AddCloudPlatformRegionReq) GetRegionName() string {
	if x != nil {
		return x.RegionName
	}
	return ""
}

type AddCloudPlatformRegionReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *AddCloudPlatformRegionReply) Reset() {
	*x = AddCloudPlatformRegionReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[145]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddCloudPlatformRegionReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCloudPlatformRegionReply) ProtoMessage() {}

func (x *AddCloudPlatformRegionReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[145]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCloudPlatformRegionReply.ProtoReflect.Descriptor instead.
func (*AddCloudPlatformRegionReply) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{145}
}

func (x *AddCloudPlatformRegionReply) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

type DelCloudPlatformRegionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserUuid   string `protobuf:"bytes,1,opt,name=userUuid,proto3" json:"userUuid,omitempty"`
	OrgUuid    string `protobuf:"bytes,2,opt,name=orgUuid,proto3" json:"orgUuid,omitempty"`
	RegionUuid string `protobuf:"bytes,3,opt,name=regionUuid,proto3" json:"regionUuid,omitempty"`
}

func (x *DelCloudPlatformRegionReq) Reset() {
	*x = DelCloudPlatformRegionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[146]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelCloudPlatformRegionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelCloudPlatformRegionReq) ProtoMessage() {}

func (x *DelCloudPlatformRegionReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[146]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelCloudPlatformRegionReq.ProtoReflect.Descriptor instead.
func (*DelCloudPlatformRegionReq) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{146}
}

func (x *DelCloudPlatformRegionReq) GetUserUuid() string {
	if x != nil {
		return x.UserUuid
	}
	return ""
}

func (x *DelCloudPlatformRegionReq) GetOrgUuid() string {
	if x != nil {
		return x.OrgUuid
	}
	return ""
}

func (x *DelCloudPlatformRegionReq) GetRegionUuid() string {
	if x != nil {
		return x.RegionUuid
	}
	return ""
}

type DelCloudPlatformRegionReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *DelCloudPlatformRegionReply) Reset() {
	*x = DelCloudPlatformRegionReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[147]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelCloudPlatformRegionReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelCloudPlatformRegionReply) ProtoMessage() {}

func (x *DelCloudPlatformRegionReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[147]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelCloudPlatformRegionReply.ProtoReflect.Descriptor instead.
func (*DelCloudPlatformRegionReply) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{147}
}

func (x *DelCloudPlatformRegionReply) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

type ListCloudPlatformRegionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserUuid   string `protobuf:"bytes,1,opt,name=userUuid,proto3" json:"userUuid,omitempty"`
	OrgUuid    string `protobuf:"bytes,2,opt,name=orgUuid,proto3" json:"orgUuid,omitempty"`
	PlatformId int32  `protobuf:"varint,3,opt,name=platformId,proto3" json:"platformId,omitempty"`
}

func (x *ListCloudPlatformRegionReq) Reset() {
	*x = ListCloudPlatformRegionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[148]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCloudPlatformRegionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCloudPlatformRegionReq) ProtoMessage() {}

func (x *ListCloudPlatformRegionReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[148]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCloudPlatformRegionReq.ProtoReflect.Descriptor instead.
func (*ListCloudPlatformRegionReq) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{148}
}

func (x *ListCloudPlatformRegionReq) GetUserUuid() string {
	if x != nil {
		return x.UserUuid
	}
	return ""
}

func (x *ListCloudPlatformRegionReq) GetOrgUuid() string {
	if x != nil {
		return x.OrgUuid
	}
	return ""
}

func (x *ListCloudPlatformRegionReq) GetPlatformId() int32 {
	if x != nil {
		return x.PlatformId
	}
	return 0
}

type ListCloudPlatformRegionReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Region []*ListCloudPlatformRegionReply_Region `protobuf:"bytes,1,rep,name=region,proto3" json:"region,omitempty"`
}

func (x *ListCloudPlatformRegionReply) Reset() {
	*x = ListCloudPlatformRegionReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[149]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCloudPlatformRegionReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCloudPlatformRegionReply) ProtoMessage() {}

func (x *ListCloudPlatformRegionReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[149]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCloudPlatformRegionReply.ProtoReflect.Descriptor instead.
func (*ListCloudPlatformRegionReply) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{149}
}

func (x *ListCloudPlatformRegionReply) GetRegion() []*ListCloudPlatformRegionReply_Region {
	if x != nil {
		return x.Region
	}
	return nil
}

// ACME
type CreateAcmeAccountReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserUuid    string   `protobuf:"bytes,1,opt,name=userUuid,proto3" json:"userUuid,omitempty"`
	OrgUuid     string   `protobuf:"bytes,2,opt,name=orgUuid,proto3" json:"orgUuid,omitempty"`
	ProductUuid string   `protobuf:"bytes,3,opt,name=productUuid,proto3" json:"productUuid,omitempty"`
	Contacts    []string `protobuf:"bytes,4,rep,name=contacts,proto3" json:"contacts,omitempty"`
}

func (x *CreateAcmeAccountReq) Reset() {
	*x = CreateAcmeAccountReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[150]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAcmeAccountReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAcmeAccountReq) ProtoMessage() {}

func (x *CreateAcmeAccountReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[150]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAcmeAccountReq.ProtoReflect.Descriptor instead.
func (*CreateAcmeAccountReq) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{150}
}

func (x *CreateAcmeAccountReq) GetUserUuid() string {
	if x != nil {
		return x.UserUuid
	}
	return ""
}

func (x *CreateAcmeAccountReq) GetOrgUuid() string {
	if x != nil {
		return x.OrgUuid
	}
	return ""
}

func (x *CreateAcmeAccountReq) GetProductUuid() string {
	if x != nil {
		return x.ProductUuid
	}
	return ""
}

func (x *CreateAcmeAccountReq) GetContacts() []string {
	if x != nil {
		return x.Contacts
	}
	return nil
}

type CreateAcmeAccountReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateAcmeAccountReply) Reset() {
	*x = CreateAcmeAccountReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[151]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAcmeAccountReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAcmeAccountReply) ProtoMessage() {}

func (x *CreateAcmeAccountReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[151]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAcmeAccountReply.ProtoReflect.Descriptor instead.
func (*CreateAcmeAccountReply) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{151}
}

type DeleteAcmeAccountReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserUuid    string `protobuf:"bytes,1,opt,name=userUuid,proto3" json:"userUuid,omitempty"`
	OrgUuid     string `protobuf:"bytes,2,opt,name=orgUuid,proto3" json:"orgUuid,omitempty"`
	ProductUuid string `protobuf:"bytes,3,opt,name=productUuid,proto3" json:"productUuid,omitempty"`
	AccountUuid string `protobuf:"bytes,4,opt,name=accountUuid,proto3" json:"accountUuid,omitempty"`
}

func (x *DeleteAcmeAccountReq) Reset() {
	*x = DeleteAcmeAccountReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[152]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAcmeAccountReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAcmeAccountReq) ProtoMessage() {}

func (x *DeleteAcmeAccountReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[152]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAcmeAccountReq.ProtoReflect.Descriptor instead.
func (*DeleteAcmeAccountReq) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{152}
}

func (x *DeleteAcmeAccountReq) GetUserUuid() string {
	if x != nil {
		return x.UserUuid
	}
	return ""
}

func (x *DeleteAcmeAccountReq) GetOrgUuid() string {
	if x != nil {
		return x.OrgUuid
	}
	return ""
}

func (x *DeleteAcmeAccountReq) GetProductUuid() string {
	if x != nil {
		return x.ProductUuid
	}
	return ""
}

func (x *DeleteAcmeAccountReq) GetAccountUuid() string {
	if x != nil {
		return x.AccountUuid
	}
	return ""
}

type DeleteAcmeAccountReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteAcmeAccountReply) Reset() {
	*x = DeleteAcmeAccountReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[153]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAcmeAccountReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAcmeAccountReply) ProtoMessage() {}

func (x *DeleteAcmeAccountReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[153]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAcmeAccountReply.ProtoReflect.Descriptor instead.
func (*DeleteAcmeAccountReply) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{153}
}

type AcmeAccount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid                 string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	OrgUuid              string `protobuf:"bytes,2,opt,name=orgUuid,proto3" json:"orgUuid,omitempty"`
	ProductUuid          string `protobuf:"bytes,3,opt,name=productUuid,proto3" json:"productUuid,omitempty"`
	UserUuid             string `protobuf:"bytes,4,opt,name=userUuid,proto3" json:"userUuid,omitempty"`
	Contact              string `protobuf:"bytes,5,opt,name=contact,proto3" json:"contact,omitempty"`
	TermsOfServiceAgreed bool   `protobuf:"varint,6,opt,name=termsOfServiceAgreed,proto3" json:"termsOfServiceAgreed,omitempty"`
	PrivateKey           string `protobuf:"bytes,7,opt,name=privateKey,proto3" json:"privateKey,omitempty"`
	Status               string `protobuf:"bytes,8,opt,name=status,proto3" json:"status,omitempty"`
	Url                  string `protobuf:"bytes,9,opt,name=url,proto3" json:"url,omitempty"`
	CreateTime           int64  `protobuf:"varint,10,opt,name=createTime,proto3" json:"createTime,omitempty"`
}

func (x *AcmeAccount) Reset() {
	*x = AcmeAccount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[154]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AcmeAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcmeAccount) ProtoMessage() {}

func (x *AcmeAccount) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[154]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcmeAccount.ProtoReflect.Descriptor instead.
func (*AcmeAccount) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{154}
}

func (x *AcmeAccount) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *AcmeAccount) GetOrgUuid() string {
	if x != nil {
		return x.OrgUuid
	}
	return ""
}

func (x *AcmeAccount) GetProductUuid() string {
	if x != nil {
		return x.ProductUuid
	}
	return ""
}

func (x *AcmeAccount) GetUserUuid() string {
	if x != nil {
		return x.UserUuid
	}
	return ""
}

func (x *AcmeAccount) GetContact() string {
	if x != nil {
		return x.Contact
	}
	return ""
}

func (x *AcmeAccount) GetTermsOfServiceAgreed() bool {
	if x != nil {
		return x.TermsOfServiceAgreed
	}
	return false
}

func (x *AcmeAccount) GetPrivateKey() string {
	if x != nil {
		return x.PrivateKey
	}
	return ""
}

func (x *AcmeAccount) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *AcmeAccount) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *AcmeAccount) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

type ListAcmeAccountReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserUuid    string `protobuf:"bytes,1,opt,name=userUuid,proto3" json:"userUuid,omitempty"`
	OrgUuid     string `protobuf:"bytes,2,opt,name=orgUuid,proto3" json:"orgUuid,omitempty"`
	ProductUuid string `protobuf:"bytes,3,opt,name=productUuid,proto3" json:"productUuid,omitempty"`
}

func (x *ListAcmeAccountReq) Reset() {
	*x = ListAcmeAccountReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[155]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAcmeAccountReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAcmeAccountReq) ProtoMessage() {}

func (x *ListAcmeAccountReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[155]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAcmeAccountReq.ProtoReflect.Descriptor instead.
func (*ListAcmeAccountReq) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{155}
}

func (x *ListAcmeAccountReq) GetUserUuid() string {
	if x != nil {
		return x.UserUuid
	}
	return ""
}

func (x *ListAcmeAccountReq) GetOrgUuid() string {
	if x != nil {
		return x.OrgUuid
	}
	return ""
}

func (x *ListAcmeAccountReq) GetProductUuid() string {
	if x != nil {
		return x.ProductUuid
	}
	return ""
}

type ListAcmeAccountReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Accounts []*AcmeAccount `protobuf:"bytes,1,rep,name=accounts,proto3" json:"accounts,omitempty"`
}

func (x *ListAcmeAccountReply) Reset() {
	*x = ListAcmeAccountReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[156]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAcmeAccountReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAcmeAccountReply) ProtoMessage() {}

func (x *ListAcmeAccountReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[156]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAcmeAccountReply.ProtoReflect.Descriptor instead.
func (*ListAcmeAccountReply) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{156}
}

func (x *ListAcmeAccountReply) GetAccounts() []*AcmeAccount {
	if x != nil {
		return x.Accounts
	}
	return nil
}

type CreateAcmeOrderReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserUuid    string   `protobuf:"bytes,1,opt,name=userUuid,proto3" json:"userUuid,omitempty"`
	OrgUuid     string   `protobuf:"bytes,2,opt,name=orgUuid,proto3" json:"orgUuid,omitempty"`
	ProductUuid string   `protobuf:"bytes,3,opt,name=productUuid,proto3" json:"productUuid,omitempty"`
	AccountUuid string   `protobuf:"bytes,4,opt,name=accountUuid,proto3" json:"accountUuid,omitempty"`
	Domains     []string `protobuf:"bytes,5,rep,name=domains,proto3" json:"domains,omitempty"`
}

func (x *CreateAcmeOrderReq) Reset() {
	*x = CreateAcmeOrderReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[157]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAcmeOrderReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAcmeOrderReq) ProtoMessage() {}

func (x *CreateAcmeOrderReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[157]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAcmeOrderReq.ProtoReflect.Descriptor instead.
func (*CreateAcmeOrderReq) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{157}
}

func (x *CreateAcmeOrderReq) GetUserUuid() string {
	if x != nil {
		return x.UserUuid
	}
	return ""
}

func (x *CreateAcmeOrderReq) GetOrgUuid() string {
	if x != nil {
		return x.OrgUuid
	}
	return ""
}

func (x *CreateAcmeOrderReq) GetProductUuid() string {
	if x != nil {
		return x.ProductUuid
	}
	return ""
}

func (x *CreateAcmeOrderReq) GetAccountUuid() string {
	if x != nil {
		return x.AccountUuid
	}
	return ""
}

func (x *CreateAcmeOrderReq) GetDomains() []string {
	if x != nil {
		return x.Domains
	}
	return nil
}

type CreateAcmeOrderReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateAcmeOrderReply) Reset() {
	*x = CreateAcmeOrderReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[158]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAcmeOrderReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAcmeOrderReply) ProtoMessage() {}

func (x *CreateAcmeOrderReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[158]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAcmeOrderReply.ProtoReflect.Descriptor instead.
func (*CreateAcmeOrderReply) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{158}
}

type AcmeOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid           string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	AccountUuid    string `protobuf:"bytes,2,opt,name=accountUuid,proto3" json:"accountUuid,omitempty"`
	Domains        string `protobuf:"bytes,15,opt,name=domains,proto3" json:"domains,omitempty"`
	OrderUrl       string `protobuf:"bytes,3,opt,name=orderUrl,proto3" json:"orderUrl,omitempty"`
	Status         string `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	Expires        string `protobuf:"bytes,5,opt,name=expires,proto3" json:"expires,omitempty"`
	NotBefore      string `protobuf:"bytes,6,opt,name=notBefore,proto3" json:"notBefore,omitempty"`
	NotAfter       string `protobuf:"bytes,7,opt,name=notAfter,proto3" json:"notAfter,omitempty"`
	Identifiers    string `protobuf:"bytes,8,opt,name=identifiers,proto3" json:"identifiers,omitempty"`
	Authorizations string `protobuf:"bytes,9,opt,name=authorizations,proto3" json:"authorizations,omitempty"`
	Finalize       string `protobuf:"bytes,10,opt,name=finalize,proto3" json:"finalize,omitempty"`
	PrivateKey     string `protobuf:"bytes,11,opt,name=privateKey,proto3" json:"privateKey,omitempty"`
	Csr            string `protobuf:"bytes,12,opt,name=csr,proto3" json:"csr,omitempty"`
	Certificate    string `protobuf:"bytes,13,opt,name=certificate,proto3" json:"certificate,omitempty"`
	CreateTime     int64  `protobuf:"varint,14,opt,name=createTime,proto3" json:"createTime,omitempty"`
}

func (x *AcmeOrder) Reset() {
	*x = AcmeOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[159]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AcmeOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcmeOrder) ProtoMessage() {}

func (x *AcmeOrder) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[159]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcmeOrder.ProtoReflect.Descriptor instead.
func (*AcmeOrder) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{159}
}

func (x *AcmeOrder) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *AcmeOrder) GetAccountUuid() string {
	if x != nil {
		return x.AccountUuid
	}
	return ""
}

func (x *AcmeOrder) GetDomains() string {
	if x != nil {
		return x.Domains
	}
	return ""
}

func (x *AcmeOrder) GetOrderUrl() string {
	if x != nil {
		return x.OrderUrl
	}
	return ""
}

func (x *AcmeOrder) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *AcmeOrder) GetExpires() string {
	if x != nil {
		return x.Expires
	}
	return ""
}

func (x *AcmeOrder) GetNotBefore() string {
	if x != nil {
		return x.NotBefore
	}
	return ""
}

func (x *AcmeOrder) GetNotAfter() string {
	if x != nil {
		return x.NotAfter
	}
	return ""
}

func (x *AcmeOrder) GetIdentifiers() string {
	if x != nil {
		return x.Identifiers
	}
	return ""
}

func (x *AcmeOrder) GetAuthorizations() string {
	if x != nil {
		return x.Authorizations
	}
	return ""
}

func (x *AcmeOrder) GetFinalize() string {
	if x != nil {
		return x.Finalize
	}
	return ""
}

func (x *AcmeOrder) GetPrivateKey() string {
	if x != nil {
		return x.PrivateKey
	}
	return ""
}

func (x *AcmeOrder) GetCsr() string {
	if x != nil {
		return x.Csr
	}
	return ""
}

func (x *AcmeOrder) GetCertificate() string {
	if x != nil {
		return x.Certificate
	}
	return ""
}

func (x *AcmeOrder) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

type ListAcmeOrderReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserUuid    string `protobuf:"bytes,1,opt,name=userUuid,proto3" json:"userUuid,omitempty"`
	OrgUuid     string `protobuf:"bytes,2,opt,name=orgUuid,proto3" json:"orgUuid,omitempty"`
	ProductUuid string `protobuf:"bytes,3,opt,name=productUuid,proto3" json:"productUuid,omitempty"`
	AccountUuid string `protobuf:"bytes,4,opt,name=accountUuid,proto3" json:"accountUuid,omitempty"`
}

func (x *ListAcmeOrderReq) Reset() {
	*x = ListAcmeOrderReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[160]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAcmeOrderReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAcmeOrderReq) ProtoMessage() {}

func (x *ListAcmeOrderReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[160]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAcmeOrderReq.ProtoReflect.Descriptor instead.
func (*ListAcmeOrderReq) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{160}
}

func (x *ListAcmeOrderReq) GetUserUuid() string {
	if x != nil {
		return x.UserUuid
	}
	return ""
}

func (x *ListAcmeOrderReq) GetOrgUuid() string {
	if x != nil {
		return x.OrgUuid
	}
	return ""
}

func (x *ListAcmeOrderReq) GetProductUuid() string {
	if x != nil {
		return x.ProductUuid
	}
	return ""
}

func (x *ListAcmeOrderReq) GetAccountUuid() string {
	if x != nil {
		return x.AccountUuid
	}
	return ""
}

type ListAcmeOrderReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Orders []*AcmeOrder `protobuf:"bytes,1,rep,name=orders,proto3" json:"orders,omitempty"`
}

func (x *ListAcmeOrderReply) Reset() {
	*x = ListAcmeOrderReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[161]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAcmeOrderReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAcmeOrderReply) ProtoMessage() {}

func (x *ListAcmeOrderReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[161]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAcmeOrderReply.ProtoReflect.Descriptor instead.
func (*ListAcmeOrderReply) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{161}
}

func (x *ListAcmeOrderReply) GetOrders() []*AcmeOrder {
	if x != nil {
		return x.Orders
	}
	return nil
}

type GetAcmeOrderReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserUuid    string `protobuf:"bytes,1,opt,name=userUuid,proto3" json:"userUuid,omitempty"`
	OrgUuid     string `protobuf:"bytes,2,opt,name=orgUuid,proto3" json:"orgUuid,omitempty"`
	ProductUuid string `protobuf:"bytes,3,opt,name=productUuid,proto3" json:"productUuid,omitempty"`
	OrderUuid   string `protobuf:"bytes,4,opt,name=orderUuid,proto3" json:"orderUuid,omitempty"`
}

func (x *GetAcmeOrderReq) Reset() {
	*x = GetAcmeOrderReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[162]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAcmeOrderReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAcmeOrderReq) ProtoMessage() {}

func (x *GetAcmeOrderReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[162]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAcmeOrderReq.ProtoReflect.Descriptor instead.
func (*GetAcmeOrderReq) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{162}
}

func (x *GetAcmeOrderReq) GetUserUuid() string {
	if x != nil {
		return x.UserUuid
	}
	return ""
}

func (x *GetAcmeOrderReq) GetOrgUuid() string {
	if x != nil {
		return x.OrgUuid
	}
	return ""
}

func (x *GetAcmeOrderReq) GetProductUuid() string {
	if x != nil {
		return x.ProductUuid
	}
	return ""
}

func (x *GetAcmeOrderReq) GetOrderUuid() string {
	if x != nil {
		return x.OrderUuid
	}
	return ""
}

type GetAcmeOrderReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Order *AcmeOrder `protobuf:"bytes,1,opt,name=order,proto3" json:"order,omitempty"`
}

func (x *GetAcmeOrderReply) Reset() {
	*x = GetAcmeOrderReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[163]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAcmeOrderReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAcmeOrderReply) ProtoMessage() {}

func (x *GetAcmeOrderReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[163]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAcmeOrderReply.ProtoReflect.Descriptor instead.
func (*GetAcmeOrderReply) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{163}
}

func (x *GetAcmeOrderReply) GetOrder() *AcmeOrder {
	if x != nil {
		return x.Order
	}
	return nil
}

type AcmeOrderAuthorization struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status        string                   `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Expires       string                   `protobuf:"bytes,2,opt,name=expires,proto3" json:"expires,omitempty"`
	Wildcard      bool                     `protobuf:"varint,3,opt,name=wildcard,proto3" json:"wildcard,omitempty"`
	Challenges    []*AcmeOrderChallenge    `protobuf:"bytes,4,rep,name=challenges,proto3" json:"challenges,omitempty"`
	DnsChallenges []*AcmeOrderDnsChallenge `protobuf:"bytes,5,rep,name=dnsChallenges,proto3" json:"dnsChallenges,omitempty"`
}

func (x *AcmeOrderAuthorization) Reset() {
	*x = AcmeOrderAuthorization{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[164]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AcmeOrderAuthorization) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcmeOrderAuthorization) ProtoMessage() {}

func (x *AcmeOrderAuthorization) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[164]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcmeOrderAuthorization.ProtoReflect.Descriptor instead.
func (*AcmeOrderAuthorization) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{164}
}

func (x *AcmeOrderAuthorization) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *AcmeOrderAuthorization) GetExpires() string {
	if x != nil {
		return x.Expires
	}
	return ""
}

func (x *AcmeOrderAuthorization) GetWildcard() bool {
	if x != nil {
		return x.Wildcard
	}
	return false
}

func (x *AcmeOrderAuthorization) GetChallenges() []*AcmeOrderChallenge {
	if x != nil {
		return x.Challenges
	}
	return nil
}

func (x *AcmeOrderAuthorization) GetDnsChallenges() []*AcmeOrderDnsChallenge {
	if x != nil {
		return x.DnsChallenges
	}
	return nil
}

type AcmeOrderChallenge struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type      string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Status    string `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Url       string `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	Token     string `protobuf:"bytes,4,opt,name=token,proto3" json:"token,omitempty"`
	Validated string `protobuf:"bytes,5,opt,name=validated,proto3" json:"validated,omitempty"`
}

func (x *AcmeOrderChallenge) Reset() {
	*x = AcmeOrderChallenge{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[165]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AcmeOrderChallenge) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcmeOrderChallenge) ProtoMessage() {}

func (x *AcmeOrderChallenge) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[165]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcmeOrderChallenge.ProtoReflect.Descriptor instead.
func (*AcmeOrderChallenge) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{165}
}

func (x *AcmeOrderChallenge) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *AcmeOrderChallenge) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *AcmeOrderChallenge) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *AcmeOrderChallenge) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *AcmeOrderChallenge) GetValidated() string {
	if x != nil {
		return x.Validated
	}
	return ""
}

type AcmeOrderDnsChallenge struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DomainName string `protobuf:"bytes,1,opt,name=domainName,proto3" json:"domainName,omitempty"`
	Fqdn       string `protobuf:"bytes,2,opt,name=fqdn,proto3" json:"fqdn,omitempty"`
	Type       string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	Value      string `protobuf:"bytes,4,opt,name=value,proto3" json:"value,omitempty"`
	Token      string `protobuf:"bytes,5,opt,name=token,proto3" json:"token,omitempty"`
	Status     string `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`
	Result     bool   `protobuf:"varint,7,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *AcmeOrderDnsChallenge) Reset() {
	*x = AcmeOrderDnsChallenge{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[166]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AcmeOrderDnsChallenge) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcmeOrderDnsChallenge) ProtoMessage() {}

func (x *AcmeOrderDnsChallenge) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[166]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcmeOrderDnsChallenge.ProtoReflect.Descriptor instead.
func (*AcmeOrderDnsChallenge) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{166}
}

func (x *AcmeOrderDnsChallenge) GetDomainName() string {
	if x != nil {
		return x.DomainName
	}
	return ""
}

func (x *AcmeOrderDnsChallenge) GetFqdn() string {
	if x != nil {
		return x.Fqdn
	}
	return ""
}

func (x *AcmeOrderDnsChallenge) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *AcmeOrderDnsChallenge) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *AcmeOrderDnsChallenge) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *AcmeOrderDnsChallenge) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *AcmeOrderDnsChallenge) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

type GetAcmeOrderAuthorizationsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserUuid    string `protobuf:"bytes,1,opt,name=userUuid,proto3" json:"userUuid,omitempty"`
	OrgUuid     string `protobuf:"bytes,2,opt,name=orgUuid,proto3" json:"orgUuid,omitempty"`
	ProductUuid string `protobuf:"bytes,3,opt,name=productUuid,proto3" json:"productUuid,omitempty"`
	OrderUuid   string `protobuf:"bytes,4,opt,name=orderUuid,proto3" json:"orderUuid,omitempty"`
}

func (x *GetAcmeOrderAuthorizationsReq) Reset() {
	*x = GetAcmeOrderAuthorizationsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[167]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAcmeOrderAuthorizationsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAcmeOrderAuthorizationsReq) ProtoMessage() {}

func (x *GetAcmeOrderAuthorizationsReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[167]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAcmeOrderAuthorizationsReq.ProtoReflect.Descriptor instead.
func (*GetAcmeOrderAuthorizationsReq) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{167}
}

func (x *GetAcmeOrderAuthorizationsReq) GetUserUuid() string {
	if x != nil {
		return x.UserUuid
	}
	return ""
}

func (x *GetAcmeOrderAuthorizationsReq) GetOrgUuid() string {
	if x != nil {
		return x.OrgUuid
	}
	return ""
}

func (x *GetAcmeOrderAuthorizationsReq) GetProductUuid() string {
	if x != nil {
		return x.ProductUuid
	}
	return ""
}

func (x *GetAcmeOrderAuthorizationsReq) GetOrderUuid() string {
	if x != nil {
		return x.OrderUuid
	}
	return ""
}

type GetAcmeOrderAuthorizationsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Authorizations []*AcmeOrderAuthorization `protobuf:"bytes,1,rep,name=authorizations,proto3" json:"authorizations,omitempty"`
}

func (x *GetAcmeOrderAuthorizationsReply) Reset() {
	*x = GetAcmeOrderAuthorizationsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[168]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAcmeOrderAuthorizationsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAcmeOrderAuthorizationsReply) ProtoMessage() {}

func (x *GetAcmeOrderAuthorizationsReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[168]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAcmeOrderAuthorizationsReply.ProtoReflect.Descriptor instead.
func (*GetAcmeOrderAuthorizationsReply) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{168}
}

func (x *GetAcmeOrderAuthorizationsReply) GetAuthorizations() []*AcmeOrderAuthorization {
	if x != nil {
		return x.Authorizations
	}
	return nil
}

type GetAcmeOrderChallengesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserUuid    string `protobuf:"bytes,1,opt,name=userUuid,proto3" json:"userUuid,omitempty"`
	OrgUuid     string `protobuf:"bytes,2,opt,name=orgUuid,proto3" json:"orgUuid,omitempty"`
	ProductUuid string `protobuf:"bytes,3,opt,name=productUuid,proto3" json:"productUuid,omitempty"`
	OrderUuid   string `protobuf:"bytes,4,opt,name=orderUuid,proto3" json:"orderUuid,omitempty"`
}

func (x *GetAcmeOrderChallengesReq) Reset() {
	*x = GetAcmeOrderChallengesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[169]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAcmeOrderChallengesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAcmeOrderChallengesReq) ProtoMessage() {}

func (x *GetAcmeOrderChallengesReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[169]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAcmeOrderChallengesReq.ProtoReflect.Descriptor instead.
func (*GetAcmeOrderChallengesReq) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{169}
}

func (x *GetAcmeOrderChallengesReq) GetUserUuid() string {
	if x != nil {
		return x.UserUuid
	}
	return ""
}

func (x *GetAcmeOrderChallengesReq) GetOrgUuid() string {
	if x != nil {
		return x.OrgUuid
	}
	return ""
}

func (x *GetAcmeOrderChallengesReq) GetProductUuid() string {
	if x != nil {
		return x.ProductUuid
	}
	return ""
}

func (x *GetAcmeOrderChallengesReq) GetOrderUuid() string {
	if x != nil {
		return x.OrderUuid
	}
	return ""
}

type GetAcmeOrderChallengesReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Authorizations []*AcmeOrderAuthorization `protobuf:"bytes,1,rep,name=authorizations,proto3" json:"authorizations,omitempty"`
}

func (x *GetAcmeOrderChallengesReply) Reset() {
	*x = GetAcmeOrderChallengesReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[170]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAcmeOrderChallengesReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAcmeOrderChallengesReply) ProtoMessage() {}

func (x *GetAcmeOrderChallengesReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[170]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAcmeOrderChallengesReply.ProtoReflect.Descriptor instead.
func (*GetAcmeOrderChallengesReply) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{170}
}

func (x *GetAcmeOrderChallengesReply) GetAuthorizations() []*AcmeOrderAuthorization {
	if x != nil {
		return x.Authorizations
	}
	return nil
}

type FinalizeAcmeOrderReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserUuid    string `protobuf:"bytes,1,opt,name=userUuid,proto3" json:"userUuid,omitempty"`
	OrgUuid     string `protobuf:"bytes,2,opt,name=orgUuid,proto3" json:"orgUuid,omitempty"`
	ProductUuid string `protobuf:"bytes,3,opt,name=productUuid,proto3" json:"productUuid,omitempty"`
	OrderUuid   string `protobuf:"bytes,4,opt,name=orderUuid,proto3" json:"orderUuid,omitempty"`
}

func (x *FinalizeAcmeOrderReq) Reset() {
	*x = FinalizeAcmeOrderReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[171]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FinalizeAcmeOrderReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FinalizeAcmeOrderReq) ProtoMessage() {}

func (x *FinalizeAcmeOrderReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[171]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FinalizeAcmeOrderReq.ProtoReflect.Descriptor instead.
func (*FinalizeAcmeOrderReq) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{171}
}

func (x *FinalizeAcmeOrderReq) GetUserUuid() string {
	if x != nil {
		return x.UserUuid
	}
	return ""
}

func (x *FinalizeAcmeOrderReq) GetOrgUuid() string {
	if x != nil {
		return x.OrgUuid
	}
	return ""
}

func (x *FinalizeAcmeOrderReq) GetProductUuid() string {
	if x != nil {
		return x.ProductUuid
	}
	return ""
}

func (x *FinalizeAcmeOrderReq) GetOrderUuid() string {
	if x != nil {
		return x.OrderUuid
	}
	return ""
}

type FinalizeAcmeOrderReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Order *AcmeOrder `protobuf:"bytes,1,opt,name=order,proto3" json:"order,omitempty"`
}

func (x *FinalizeAcmeOrderReply) Reset() {
	*x = FinalizeAcmeOrderReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[172]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FinalizeAcmeOrderReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FinalizeAcmeOrderReply) ProtoMessage() {}

func (x *FinalizeAcmeOrderReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[172]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FinalizeAcmeOrderReply.ProtoReflect.Descriptor instead.
func (*FinalizeAcmeOrderReply) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{172}
}

func (x *FinalizeAcmeOrderReply) GetOrder() *AcmeOrder {
	if x != nil {
		return x.Order
	}
	return nil
}

type GetAcmeOrderCertificateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserUuid    string `protobuf:"bytes,1,opt,name=userUuid,proto3" json:"userUuid,omitempty"`
	OrgUuid     string `protobuf:"bytes,2,opt,name=orgUuid,proto3" json:"orgUuid,omitempty"`
	ProductUuid string `protobuf:"bytes,3,opt,name=productUuid,proto3" json:"productUuid,omitempty"`
	OrderUuid   string `protobuf:"bytes,4,opt,name=orderUuid,proto3" json:"orderUuid,omitempty"`
}

func (x *GetAcmeOrderCertificateReq) Reset() {
	*x = GetAcmeOrderCertificateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[173]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAcmeOrderCertificateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAcmeOrderCertificateReq) ProtoMessage() {}

func (x *GetAcmeOrderCertificateReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[173]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAcmeOrderCertificateReq.ProtoReflect.Descriptor instead.
func (*GetAcmeOrderCertificateReq) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{173}
}

func (x *GetAcmeOrderCertificateReq) GetUserUuid() string {
	if x != nil {
		return x.UserUuid
	}
	return ""
}

func (x *GetAcmeOrderCertificateReq) GetOrgUuid() string {
	if x != nil {
		return x.OrgUuid
	}
	return ""
}

func (x *GetAcmeOrderCertificateReq) GetProductUuid() string {
	if x != nil {
		return x.ProductUuid
	}
	return ""
}

func (x *GetAcmeOrderCertificateReq) GetOrderUuid() string {
	if x != nil {
		return x.OrderUuid
	}
	return ""
}

type GetAcmeOrderCertificateReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Order *AcmeOrder `protobuf:"bytes,1,opt,name=order,proto3" json:"order,omitempty"`
}

func (x *GetAcmeOrderCertificateReply) Reset() {
	*x = GetAcmeOrderCertificateReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[174]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAcmeOrderCertificateReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAcmeOrderCertificateReply) ProtoMessage() {}

func (x *GetAcmeOrderCertificateReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[174]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAcmeOrderCertificateReply.ProtoReflect.Descriptor instead.
func (*GetAcmeOrderCertificateReply) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{174}
}

func (x *GetAcmeOrderCertificateReply) GetOrder() *AcmeOrder {
	if x != nil {
		return x.Order
	}
	return nil
}

type ListSupportPlatformReply_Platform struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name     string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Describe string `protobuf:"bytes,3,opt,name=describe,proto3" json:"describe,omitempty"`
	HomeUrl  string `protobuf:"bytes,4,opt,name=homeUrl,proto3" json:"homeUrl,omitempty"`
}

func (x *ListSupportPlatformReply_Platform) Reset() {
	*x = ListSupportPlatformReply_Platform{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[175]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSupportPlatformReply_Platform) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSupportPlatformReply_Platform) ProtoMessage() {}

func (x *ListSupportPlatformReply_Platform) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[175]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSupportPlatformReply_Platform.ProtoReflect.Descriptor instead.
func (*ListSupportPlatformReply_Platform) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{1, 0}
}

func (x *ListSupportPlatformReply_Platform) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ListSupportPlatformReply_Platform) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ListSupportPlatformReply_Platform) GetDescribe() string {
	if x != nil {
		return x.Describe
	}
	return ""
}

func (x *ListSupportPlatformReply_Platform) GetHomeUrl() string {
	if x != nil {
		return x.HomeUrl
	}
	return ""
}

type ListPlatformReply_Platform struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name     string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Describe string `protobuf:"bytes,3,opt,name=describe,proto3" json:"describe,omitempty"`
	HomeUrl  string `protobuf:"bytes,4,opt,name=homeUrl,proto3" json:"homeUrl,omitempty"`
}

func (x *ListPlatformReply_Platform) Reset() {
	*x = ListPlatformReply_Platform{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[176]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPlatformReply_Platform) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPlatformReply_Platform) ProtoMessage() {}

func (x *ListPlatformReply_Platform) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[176]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPlatformReply_Platform.ProtoReflect.Descriptor instead.
func (*ListPlatformReply_Platform) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{3, 0}
}

func (x *ListPlatformReply_Platform) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ListPlatformReply_Platform) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ListPlatformReply_Platform) GetDescribe() string {
	if x != nil {
		return x.Describe
	}
	return ""
}

func (x *ListPlatformReply_Platform) GetHomeUrl() string {
	if x != nil {
		return x.HomeUrl
	}
	return ""
}

type ListPlatformAccountReply_PlatformAccount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid        string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	OrgUuid     string `protobuf:"bytes,2,opt,name=orgUuid,proto3" json:"orgUuid,omitempty"`
	ProductUuid string `protobuf:"bytes,3,opt,name=productUuid,proto3" json:"productUuid,omitempty"`
	OwnerUuid   string `protobuf:"bytes,4,opt,name=ownerUuid,proto3" json:"ownerUuid,omitempty"`
	Name        string `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	PlatformId  int32  `protobuf:"varint,6,opt,name=platformId,proto3" json:"platformId,omitempty"`
	AccountName string `protobuf:"bytes,7,opt,name=accountName,proto3" json:"accountName,omitempty"`
	Email       string `protobuf:"bytes,8,opt,name=email,proto3" json:"email,omitempty"`
	PhoneNumber int64  `protobuf:"varint,9,opt,name=phoneNumber,proto3" json:"phoneNumber,omitempty"`
	Describe    string `protobuf:"bytes,10,opt,name=describe,proto3" json:"describe,omitempty"`
	CreateTime  int64  `protobuf:"varint,11,opt,name=createTime,proto3" json:"createTime,omitempty"`
}

func (x *ListPlatformAccountReply_PlatformAccount) Reset() {
	*x = ListPlatformAccountReply_PlatformAccount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[177]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPlatformAccountReply_PlatformAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPlatformAccountReply_PlatformAccount) ProtoMessage() {}

func (x *ListPlatformAccountReply_PlatformAccount) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[177]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPlatformAccountReply_PlatformAccount.ProtoReflect.Descriptor instead.
func (*ListPlatformAccountReply_PlatformAccount) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{7, 0}
}

func (x *ListPlatformAccountReply_PlatformAccount) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *ListPlatformAccountReply_PlatformAccount) GetOrgUuid() string {
	if x != nil {
		return x.OrgUuid
	}
	return ""
}

func (x *ListPlatformAccountReply_PlatformAccount) GetProductUuid() string {
	if x != nil {
		return x.ProductUuid
	}
	return ""
}

func (x *ListPlatformAccountReply_PlatformAccount) GetOwnerUuid() string {
	if x != nil {
		return x.OwnerUuid
	}
	return ""
}

func (x *ListPlatformAccountReply_PlatformAccount) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ListPlatformAccountReply_PlatformAccount) GetPlatformId() int32 {
	if x != nil {
		return x.PlatformId
	}
	return 0
}

func (x *ListPlatformAccountReply_PlatformAccount) GetAccountName() string {
	if x != nil {
		return x.AccountName
	}
	return ""
}

func (x *ListPlatformAccountReply_PlatformAccount) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *ListPlatformAccountReply_PlatformAccount) GetPhoneNumber() int64 {
	if x != nil {
		return x.PhoneNumber
	}
	return 0
}

func (x *ListPlatformAccountReply_PlatformAccount) GetDescribe() string {
	if x != nil {
		return x.Describe
	}
	return ""
}

func (x *ListPlatformAccountReply_PlatformAccount) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

type ListPlatformSubAccountReply_PlatformSubAccount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid                string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	PlatformAccountUuid string `protobuf:"bytes,2,opt,name=platformAccountUuid,proto3" json:"platformAccountUuid,omitempty"`
	OwnerUuid           string `protobuf:"bytes,3,opt,name=ownerUuid,proto3" json:"ownerUuid,omitempty"`
	Username            string `protobuf:"bytes,4,opt,name=username,proto3" json:"username,omitempty"`
	Email               string `protobuf:"bytes,5,opt,name=email,proto3" json:"email,omitempty"`
	PhoneNumber         int64  `protobuf:"varint,6,opt,name=phoneNumber,proto3" json:"phoneNumber,omitempty"`
	Describe            string `protobuf:"bytes,7,opt,name=describe,proto3" json:"describe,omitempty"`
	CreateTime          int64  `protobuf:"varint,8,opt,name=createTime,proto3" json:"createTime,omitempty"`
}

func (x *ListPlatformSubAccountReply_PlatformSubAccount) Reset() {
	*x = ListPlatformSubAccountReply_PlatformSubAccount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[178]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPlatformSubAccountReply_PlatformSubAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPlatformSubAccountReply_PlatformSubAccount) ProtoMessage() {}

func (x *ListPlatformSubAccountReply_PlatformSubAccount) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[178]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPlatformSubAccountReply_PlatformSubAccount.ProtoReflect.Descriptor instead.
func (*ListPlatformSubAccountReply_PlatformSubAccount) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{13, 0}
}

func (x *ListPlatformSubAccountReply_PlatformSubAccount) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *ListPlatformSubAccountReply_PlatformSubAccount) GetPlatformAccountUuid() string {
	if x != nil {
		return x.PlatformAccountUuid
	}
	return ""
}

func (x *ListPlatformSubAccountReply_PlatformSubAccount) GetOwnerUuid() string {
	if x != nil {
		return x.OwnerUuid
	}
	return ""
}

func (x *ListPlatformSubAccountReply_PlatformSubAccount) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *ListPlatformSubAccountReply_PlatformSubAccount) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *ListPlatformSubAccountReply_PlatformSubAccount) GetPhoneNumber() int64 {
	if x != nil {
		return x.PhoneNumber
	}
	return 0
}

func (x *ListPlatformSubAccountReply_PlatformSubAccount) GetDescribe() string {
	if x != nil {
		return x.Describe
	}
	return ""
}

func (x *ListPlatformSubAccountReply_PlatformSubAccount) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

type GetAccessKeyReply_AccessKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid           string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	SubAccountUuid string `protobuf:"bytes,2,opt,name=subAccountUuid,proto3" json:"subAccountUuid,omitempty"`
	AccessKey      string `protobuf:"bytes,4,opt,name=accessKey,proto3" json:"accessKey,omitempty"`
	Describe       string `protobuf:"bytes,5,opt,name=describe,proto3" json:"describe,omitempty"`
	CreateTime     int64  `protobuf:"varint,6,opt,name=createTime,proto3" json:"createTime,omitempty"`
}

func (x *GetAccessKeyReply_AccessKey) Reset() {
	*x = GetAccessKeyReply_AccessKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[179]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAccessKeyReply_AccessKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccessKeyReply_AccessKey) ProtoMessage() {}

func (x *GetAccessKeyReply_AccessKey) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[179]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccessKeyReply_AccessKey.ProtoReflect.Descriptor instead.
func (*GetAccessKeyReply_AccessKey) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{19, 0}
}

func (x *GetAccessKeyReply_AccessKey) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *GetAccessKeyReply_AccessKey) GetSubAccountUuid() string {
	if x != nil {
		return x.SubAccountUuid
	}
	return ""
}

func (x *GetAccessKeyReply_AccessKey) GetAccessKey() string {
	if x != nil {
		return x.AccessKey
	}
	return ""
}

func (x *GetAccessKeyReply_AccessKey) GetDescribe() string {
	if x != nil {
		return x.Describe
	}
	return ""
}

func (x *GetAccessKeyReply_AccessKey) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

type ListObjectStorageSecurityTokenGeneratorReply_Generator struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid          string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	OrgUuid       string `protobuf:"bytes,2,opt,name=orgUuid,proto3" json:"orgUuid,omitempty"`
	ProductUuid   string `protobuf:"bytes,3,opt,name=productUuid,proto3" json:"productUuid,omitempty"`
	PlatformId    int32  `protobuf:"varint,4,opt,name=platformId,proto3" json:"platformId,omitempty"`
	PlatformName  string `protobuf:"bytes,11,opt,name=platformName,proto3" json:"platformName,omitempty"`
	AccountUuid   string `protobuf:"bytes,5,opt,name=accountUuid,proto3" json:"accountUuid,omitempty"`
	AccessKeyUuid string `protobuf:"bytes,6,opt,name=accessKeyUuid,proto3" json:"accessKeyUuid,omitempty"`
	BucketName    string `protobuf:"bytes,7,opt,name=bucketName,proto3" json:"bucketName,omitempty"`
	Endpoint      string `protobuf:"bytes,8,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	Arn           string `protobuf:"bytes,9,opt,name=arn,proto3" json:"arn,omitempty"`
	CreateTime    int64  `protobuf:"varint,10,opt,name=createTime,proto3" json:"createTime,omitempty"`
}

func (x *ListObjectStorageSecurityTokenGeneratorReply_Generator) Reset() {
	*x = ListObjectStorageSecurityTokenGeneratorReply_Generator{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[180]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListObjectStorageSecurityTokenGeneratorReply_Generator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListObjectStorageSecurityTokenGeneratorReply_Generator) ProtoMessage() {}

func (x *ListObjectStorageSecurityTokenGeneratorReply_Generator) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[180]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListObjectStorageSecurityTokenGeneratorReply_Generator.ProtoReflect.Descriptor instead.
func (*ListObjectStorageSecurityTokenGeneratorReply_Generator) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{33, 0}
}

func (x *ListObjectStorageSecurityTokenGeneratorReply_Generator) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *ListObjectStorageSecurityTokenGeneratorReply_Generator) GetOrgUuid() string {
	if x != nil {
		return x.OrgUuid
	}
	return ""
}

func (x *ListObjectStorageSecurityTokenGeneratorReply_Generator) GetProductUuid() string {
	if x != nil {
		return x.ProductUuid
	}
	return ""
}

func (x *ListObjectStorageSecurityTokenGeneratorReply_Generator) GetPlatformId() int32 {
	if x != nil {
		return x.PlatformId
	}
	return 0
}

func (x *ListObjectStorageSecurityTokenGeneratorReply_Generator) GetPlatformName() string {
	if x != nil {
		return x.PlatformName
	}
	return ""
}

func (x *ListObjectStorageSecurityTokenGeneratorReply_Generator) GetAccountUuid() string {
	if x != nil {
		return x.AccountUuid
	}
	return ""
}

func (x *ListObjectStorageSecurityTokenGeneratorReply_Generator) GetAccessKeyUuid() string {
	if x != nil {
		return x.AccessKeyUuid
	}
	return ""
}

func (x *ListObjectStorageSecurityTokenGeneratorReply_Generator) GetBucketName() string {
	if x != nil {
		return x.BucketName
	}
	return ""
}

func (x *ListObjectStorageSecurityTokenGeneratorReply_Generator) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *ListObjectStorageSecurityTokenGeneratorReply_Generator) GetArn() string {
	if x != nil {
		return x.Arn
	}
	return ""
}

func (x *ListObjectStorageSecurityTokenGeneratorReply_Generator) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

type ListRDSReply_Instance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstanceId   string `protobuf:"bytes,1,opt,name=instanceId,proto3" json:"instanceId,omitempty"`
	InstanceName string `protobuf:"bytes,2,opt,name=instanceName,proto3" json:"instanceName,omitempty"`
	PublicNet    int64  `protobuf:"varint,3,opt,name=publicNet,proto3" json:"publicNet,omitempty"`
	Cpu          int64  `protobuf:"varint,4,opt,name=cpu,proto3" json:"cpu,omitempty"`
	Memory       int64  `protobuf:"varint,5,opt,name=memory,proto3" json:"memory,omitempty"`
	Qps          int64  `protobuf:"varint,6,opt,name=qps,proto3" json:"qps,omitempty"`
	Status       int64  `protobuf:"varint,7,opt,name=status,proto3" json:"status,omitempty"`
	AutoRenew    int64  `protobuf:"varint,8,opt,name=autoRenew,proto3" json:"autoRenew,omitempty"`
	InstanceType int64  `protobuf:"varint,9,opt,name=instanceType,proto3" json:"instanceType,omitempty"`
	CreateTime   int64  `protobuf:"varint,10,opt,name=createTime,proto3" json:"createTime,omitempty"`
	DeadlineTime int64  `protobuf:"varint,11,opt,name=deadlineTime,proto3" json:"deadlineTime,omitempty"`
	CdbError     int64  `protobuf:"varint,12,opt,name=cdbError,proto3" json:"cdbError,omitempty"`
	Region       string `protobuf:"bytes,13,opt,name=region,proto3" json:"region,omitempty"`
}

func (x *ListRDSReply_Instance) Reset() {
	*x = ListRDSReply_Instance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[181]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRDSReply_Instance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRDSReply_Instance) ProtoMessage() {}

func (x *ListRDSReply_Instance) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[181]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRDSReply_Instance.ProtoReflect.Descriptor instead.
func (*ListRDSReply_Instance) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{67, 0}
}

func (x *ListRDSReply_Instance) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

func (x *ListRDSReply_Instance) GetInstanceName() string {
	if x != nil {
		return x.InstanceName
	}
	return ""
}

func (x *ListRDSReply_Instance) GetPublicNet() int64 {
	if x != nil {
		return x.PublicNet
	}
	return 0
}

func (x *ListRDSReply_Instance) GetCpu() int64 {
	if x != nil {
		return x.Cpu
	}
	return 0
}

func (x *ListRDSReply_Instance) GetMemory() int64 {
	if x != nil {
		return x.Memory
	}
	return 0
}

func (x *ListRDSReply_Instance) GetQps() int64 {
	if x != nil {
		return x.Qps
	}
	return 0
}

func (x *ListRDSReply_Instance) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ListRDSReply_Instance) GetAutoRenew() int64 {
	if x != nil {
		return x.AutoRenew
	}
	return 0
}

func (x *ListRDSReply_Instance) GetInstanceType() int64 {
	if x != nil {
		return x.InstanceType
	}
	return 0
}

func (x *ListRDSReply_Instance) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *ListRDSReply_Instance) GetDeadlineTime() int64 {
	if x != nil {
		return x.DeadlineTime
	}
	return 0
}

func (x *ListRDSReply_Instance) GetCdbError() int64 {
	if x != nil {
		return x.CdbError
	}
	return 0
}

func (x *ListRDSReply_Instance) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

type ListRDSSlowLogsReply_SlowLog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp int64   `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	UserHost  string  `protobuf:"bytes,2,opt,name=userHost,proto3" json:"userHost,omitempty"`
	UserName  string  `protobuf:"bytes,3,opt,name=userName,proto3" json:"userName,omitempty"`
	Database  string  `protobuf:"bytes,4,opt,name=database,proto3" json:"database,omitempty"`
	SqlQuery  string  `protobuf:"bytes,5,opt,name=sqlQuery,proto3" json:"sqlQuery,omitempty"`
	QueryTime float64 `protobuf:"fixed64,6,opt,name=queryTime,proto3" json:"queryTime,omitempty"`
	LockTime  float64 `protobuf:"fixed64,7,opt,name=lockTime,proto3" json:"lockTime,omitempty"`
	ScanRow   int64   `protobuf:"varint,8,opt,name=scanRow,proto3" json:"scanRow,omitempty"`
	ResultRow int64   `protobuf:"varint,9,opt,name=resultRow,proto3" json:"resultRow,omitempty"`
}

func (x *ListRDSSlowLogsReply_SlowLog) Reset() {
	*x = ListRDSSlowLogsReply_SlowLog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[182]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRDSSlowLogsReply_SlowLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRDSSlowLogsReply_SlowLog) ProtoMessage() {}

func (x *ListRDSSlowLogsReply_SlowLog) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[182]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRDSSlowLogsReply_SlowLog.ProtoReflect.Descriptor instead.
func (*ListRDSSlowLogsReply_SlowLog) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{69, 0}
}

func (x *ListRDSSlowLogsReply_SlowLog) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *ListRDSSlowLogsReply_SlowLog) GetUserHost() string {
	if x != nil {
		return x.UserHost
	}
	return ""
}

func (x *ListRDSSlowLogsReply_SlowLog) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *ListRDSSlowLogsReply_SlowLog) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *ListRDSSlowLogsReply_SlowLog) GetSqlQuery() string {
	if x != nil {
		return x.SqlQuery
	}
	return ""
}

func (x *ListRDSSlowLogsReply_SlowLog) GetQueryTime() float64 {
	if x != nil {
		return x.QueryTime
	}
	return 0
}

func (x *ListRDSSlowLogsReply_SlowLog) GetLockTime() float64 {
	if x != nil {
		return x.LockTime
	}
	return 0
}

func (x *ListRDSSlowLogsReply_SlowLog) GetScanRow() int64 {
	if x != nil {
		return x.ScanRow
	}
	return 0
}

func (x *ListRDSSlowLogsReply_SlowLog) GetResultRow() int64 {
	if x != nil {
		return x.ResultRow
	}
	return 0
}

type ListRDSErrLogsReply_ErrLog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp int64  `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Content   string `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *ListRDSErrLogsReply_ErrLog) Reset() {
	*x = ListRDSErrLogsReply_ErrLog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[183]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRDSErrLogsReply_ErrLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRDSErrLogsReply_ErrLog) ProtoMessage() {}

func (x *ListRDSErrLogsReply_ErrLog) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[183]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRDSErrLogsReply_ErrLog.ProtoReflect.Descriptor instead.
func (*ListRDSErrLogsReply_ErrLog) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{71, 0}
}

func (x *ListRDSErrLogsReply_ErrLog) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *ListRDSErrLogsReply_ErrLog) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type ListCDNReply_Cdn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DomainId     string                 `protobuf:"bytes,1,opt,name=domainId,proto3" json:"domainId,omitempty"`
	DomainName   string                 `protobuf:"bytes,2,opt,name=domainName,proto3" json:"domainName,omitempty"`
	Status       string                 `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	Cname        string                 `protobuf:"bytes,4,opt,name=cname,proto3" json:"cname,omitempty"`
	Origin       []*ListCDNReply_Origin `protobuf:"bytes,5,rep,name=origin,proto3" json:"origin,omitempty"`
	BackupOrigin []*ListCDNReply_Origin `protobuf:"bytes,6,rep,name=backupOrigin,proto3" json:"backupOrigin,omitempty"`
}

func (x *ListCDNReply_Cdn) Reset() {
	*x = ListCDNReply_Cdn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[184]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCDNReply_Cdn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCDNReply_Cdn) ProtoMessage() {}

func (x *ListCDNReply_Cdn) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[184]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCDNReply_Cdn.ProtoReflect.Descriptor instead.
func (*ListCDNReply_Cdn) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{79, 0}
}

func (x *ListCDNReply_Cdn) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

func (x *ListCDNReply_Cdn) GetDomainName() string {
	if x != nil {
		return x.DomainName
	}
	return ""
}

func (x *ListCDNReply_Cdn) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ListCDNReply_Cdn) GetCname() string {
	if x != nil {
		return x.Cname
	}
	return ""
}

func (x *ListCDNReply_Cdn) GetOrigin() []*ListCDNReply_Origin {
	if x != nil {
		return x.Origin
	}
	return nil
}

func (x *ListCDNReply_Cdn) GetBackupOrigin() []*ListCDNReply_Origin {
	if x != nil {
		return x.BackupOrigin
	}
	return nil
}

type ListCDNReply_Origin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Origin     string `protobuf:"bytes,1,opt,name=origin,proto3" json:"origin,omitempty"`
	ServerName string `protobuf:"bytes,2,opt,name=serverName,proto3" json:"serverName,omitempty"`
	Type       string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *ListCDNReply_Origin) Reset() {
	*x = ListCDNReply_Origin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[185]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCDNReply_Origin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCDNReply_Origin) ProtoMessage() {}

func (x *ListCDNReply_Origin) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[185]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCDNReply_Origin.ProtoReflect.Descriptor instead.
func (*ListCDNReply_Origin) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{79, 1}
}

func (x *ListCDNReply_Origin) GetOrigin() string {
	if x != nil {
		return x.Origin
	}
	return ""
}

func (x *ListCDNReply_Origin) GetServerName() string {
	if x != nil {
		return x.ServerName
	}
	return ""
}

func (x *ListCDNReply_Origin) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type GetCDNReply_Origin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Origin     string `protobuf:"bytes,1,opt,name=origin,proto3" json:"origin,omitempty"`
	ServerName string `protobuf:"bytes,2,opt,name=serverName,proto3" json:"serverName,omitempty"`
	Type       string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *GetCDNReply_Origin) Reset() {
	*x = GetCDNReply_Origin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[186]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCDNReply_Origin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCDNReply_Origin) ProtoMessage() {}

func (x *GetCDNReply_Origin) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[186]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCDNReply_Origin.ProtoReflect.Descriptor instead.
func (*GetCDNReply_Origin) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{81, 0}
}

func (x *GetCDNReply_Origin) GetOrigin() string {
	if x != nil {
		return x.Origin
	}
	return ""
}

func (x *GetCDNReply_Origin) GetServerName() string {
	if x != nil {
		return x.ServerName
	}
	return ""
}

func (x *GetCDNReply_Origin) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type GetCdnIpStatusReply_CdnIpStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ip     string `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	Status string `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *GetCdnIpStatusReply_CdnIpStatus) Reset() {
	*x = GetCdnIpStatusReply_CdnIpStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[187]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCdnIpStatusReply_CdnIpStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCdnIpStatusReply_CdnIpStatus) ProtoMessage() {}

func (x *GetCdnIpStatusReply_CdnIpStatus) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[187]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCdnIpStatusReply_CdnIpStatus.ProtoReflect.Descriptor instead.
func (*GetCdnIpStatusReply_CdnIpStatus) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{97, 0}
}

func (x *GetCdnIpStatusReply_CdnIpStatus) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *GetCdnIpStatusReply_CdnIpStatus) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type ListDomainDnsReply_Domain struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name            string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	DomainId        string `protobuf:"bytes,2,opt,name=domainId,proto3" json:"domainId,omitempty"`
	AccountName     string `protobuf:"bytes,3,opt,name=accountName,proto3" json:"accountName,omitempty"`
	AccountPlatform int64  `protobuf:"varint,4,opt,name=accountPlatform,proto3" json:"accountPlatform,omitempty"`
	ResourceGroupId string `protobuf:"bytes,5,opt,name=resourceGroupId,proto3" json:"resourceGroupId,omitempty"`
	DnsServer       string `protobuf:"bytes,6,opt,name=dnsServer,proto3" json:"dnsServer,omitempty"`
	CreateTime      int64  `protobuf:"varint,7,opt,name=createTime,proto3" json:"createTime,omitempty"`
}

func (x *ListDomainDnsReply_Domain) Reset() {
	*x = ListDomainDnsReply_Domain{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[188]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDomainDnsReply_Domain) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDomainDnsReply_Domain) ProtoMessage() {}

func (x *ListDomainDnsReply_Domain) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[188]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDomainDnsReply_Domain.ProtoReflect.Descriptor instead.
func (*ListDomainDnsReply_Domain) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{101, 0}
}

func (x *ListDomainDnsReply_Domain) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ListDomainDnsReply_Domain) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

func (x *ListDomainDnsReply_Domain) GetAccountName() string {
	if x != nil {
		return x.AccountName
	}
	return ""
}

func (x *ListDomainDnsReply_Domain) GetAccountPlatform() int64 {
	if x != nil {
		return x.AccountPlatform
	}
	return 0
}

func (x *ListDomainDnsReply_Domain) GetResourceGroupId() string {
	if x != nil {
		return x.ResourceGroupId
	}
	return ""
}

func (x *ListDomainDnsReply_Domain) GetDnsServer() string {
	if x != nil {
		return x.DnsServer
	}
	return ""
}

func (x *ListDomainDnsReply_Domain) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

type ListCloudDomainDnsReply_Domain struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name            string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	DomainId        string `protobuf:"bytes,2,opt,name=domainId,proto3" json:"domainId,omitempty"`
	ResourceGroupId string `protobuf:"bytes,3,opt,name=resourceGroupId,proto3" json:"resourceGroupId,omitempty"`
	DnsServer       string `protobuf:"bytes,4,opt,name=dnsServer,proto3" json:"dnsServer,omitempty"`
}

func (x *ListCloudDomainDnsReply_Domain) Reset() {
	*x = ListCloudDomainDnsReply_Domain{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[189]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCloudDomainDnsReply_Domain) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCloudDomainDnsReply_Domain) ProtoMessage() {}

func (x *ListCloudDomainDnsReply_Domain) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[189]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCloudDomainDnsReply_Domain.ProtoReflect.Descriptor instead.
func (*ListCloudDomainDnsReply_Domain) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{103, 0}
}

func (x *ListCloudDomainDnsReply_Domain) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ListCloudDomainDnsReply_Domain) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

func (x *ListCloudDomainDnsReply_Domain) GetResourceGroupId() string {
	if x != nil {
		return x.ResourceGroupId
	}
	return ""
}

func (x *ListCloudDomainDnsReply_Domain) GetDnsServer() string {
	if x != nil {
		return x.DnsServer
	}
	return ""
}

type ListCloudDomainDnsRecordReply_Record struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RecordId   string `protobuf:"bytes,1,opt,name=recordId,proto3" json:"recordId,omitempty"`
	DomainName string `protobuf:"bytes,2,opt,name=domainName,proto3" json:"domainName,omitempty"`
	Rr         string `protobuf:"bytes,3,opt,name=rr,proto3" json:"rr,omitempty"`
	Type       string `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	Value      string `protobuf:"bytes,5,opt,name=value,proto3" json:"value,omitempty"`
	Line       string `protobuf:"bytes,6,opt,name=line,proto3" json:"line,omitempty"`
	Ttl        int64  `protobuf:"varint,7,opt,name=ttl,proto3" json:"ttl,omitempty"`
	Status     string `protobuf:"bytes,8,opt,name=status,proto3" json:"status,omitempty"`
	Lock       bool   `protobuf:"varint,9,opt,name=lock,proto3" json:"lock,omitempty"`
}

func (x *ListCloudDomainDnsRecordReply_Record) Reset() {
	*x = ListCloudDomainDnsRecordReply_Record{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[190]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCloudDomainDnsRecordReply_Record) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCloudDomainDnsRecordReply_Record) ProtoMessage() {}

func (x *ListCloudDomainDnsRecordReply_Record) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[190]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCloudDomainDnsRecordReply_Record.ProtoReflect.Descriptor instead.
func (*ListCloudDomainDnsRecordReply_Record) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{107, 0}
}

func (x *ListCloudDomainDnsRecordReply_Record) GetRecordId() string {
	if x != nil {
		return x.RecordId
	}
	return ""
}

func (x *ListCloudDomainDnsRecordReply_Record) GetDomainName() string {
	if x != nil {
		return x.DomainName
	}
	return ""
}

func (x *ListCloudDomainDnsRecordReply_Record) GetRr() string {
	if x != nil {
		return x.Rr
	}
	return ""
}

func (x *ListCloudDomainDnsRecordReply_Record) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ListCloudDomainDnsRecordReply_Record) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *ListCloudDomainDnsRecordReply_Record) GetLine() string {
	if x != nil {
		return x.Line
	}
	return ""
}

func (x *ListCloudDomainDnsRecordReply_Record) GetTtl() int64 {
	if x != nil {
		return x.Ttl
	}
	return 0
}

func (x *ListCloudDomainDnsRecordReply_Record) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ListCloudDomainDnsRecordReply_Record) GetLock() bool {
	if x != nil {
		return x.Lock
	}
	return false
}

type GetUnSupportSyncCloudDomainDnsRecordReply_UnSupportSyncCloudDomainDnsRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskId   string `protobuf:"bytes,1,opt,name=taskId,proto3" json:"taskId,omitempty"`
	Domain   string `protobuf:"bytes,2,opt,name=domain,proto3" json:"domain,omitempty"`
	Rr       string `protobuf:"bytes,3,opt,name=rr,proto3" json:"rr,omitempty"`
	Type     string `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	Value    string `protobuf:"bytes,5,opt,name=value,proto3" json:"value,omitempty"`
	Ttl      int64  `protobuf:"varint,6,opt,name=ttl,proto3" json:"ttl,omitempty"`
	Describe string `protobuf:"bytes,7,opt,name=describe,proto3" json:"describe,omitempty"`
}

func (x *GetUnSupportSyncCloudDomainDnsRecordReply_UnSupportSyncCloudDomainDnsRecord) Reset() {
	*x = GetUnSupportSyncCloudDomainDnsRecordReply_UnSupportSyncCloudDomainDnsRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[191]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUnSupportSyncCloudDomainDnsRecordReply_UnSupportSyncCloudDomainDnsRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUnSupportSyncCloudDomainDnsRecordReply_UnSupportSyncCloudDomainDnsRecord) ProtoMessage() {}

func (x *GetUnSupportSyncCloudDomainDnsRecordReply_UnSupportSyncCloudDomainDnsRecord) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[191]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUnSupportSyncCloudDomainDnsRecordReply_UnSupportSyncCloudDomainDnsRecord.ProtoReflect.Descriptor instead.
func (*GetUnSupportSyncCloudDomainDnsRecordReply_UnSupportSyncCloudDomainDnsRecord) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{119, 0}
}

func (x *GetUnSupportSyncCloudDomainDnsRecordReply_UnSupportSyncCloudDomainDnsRecord) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *GetUnSupportSyncCloudDomainDnsRecordReply_UnSupportSyncCloudDomainDnsRecord) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *GetUnSupportSyncCloudDomainDnsRecordReply_UnSupportSyncCloudDomainDnsRecord) GetRr() string {
	if x != nil {
		return x.Rr
	}
	return ""
}

func (x *GetUnSupportSyncCloudDomainDnsRecordReply_UnSupportSyncCloudDomainDnsRecord) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *GetUnSupportSyncCloudDomainDnsRecordReply_UnSupportSyncCloudDomainDnsRecord) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *GetUnSupportSyncCloudDomainDnsRecordReply_UnSupportSyncCloudDomainDnsRecord) GetTtl() int64 {
	if x != nil {
		return x.Ttl
	}
	return 0
}

func (x *GetUnSupportSyncCloudDomainDnsRecordReply_UnSupportSyncCloudDomainDnsRecord) GetDescribe() string {
	if x != nil {
		return x.Describe
	}
	return ""
}

type ListCertificateReply_Certificate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid         string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	OrgUuid      string `protobuf:"bytes,2,opt,name=orgUuid,proto3" json:"orgUuid,omitempty"`
	Key          string `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
	Pem          string `protobuf:"bytes,4,opt,name=pem,proto3" json:"pem,omitempty"`
	Version      int32  `protobuf:"varint,5,opt,name=version,proto3" json:"version,omitempty"`
	StartDate    int64  `protobuf:"varint,6,opt,name=startDate,proto3" json:"startDate,omitempty"`
	EndDate      int64  `protobuf:"varint,7,opt,name=endDate,proto3" json:"endDate,omitempty"`
	Subject      string `protobuf:"bytes,8,opt,name=subject,proto3" json:"subject,omitempty"`
	SerialNumber string `protobuf:"bytes,9,opt,name=serialNumber,proto3" json:"serialNumber,omitempty"`
	Issuer       string `protobuf:"bytes,10,opt,name=issuer,proto3" json:"issuer,omitempty"`
	DnsNames     string `protobuf:"bytes,11,opt,name=dnsNames,proto3" json:"dnsNames,omitempty"`
	CreateTime   int64  `protobuf:"varint,12,opt,name=createTime,proto3" json:"createTime,omitempty"`
}

func (x *ListCertificateReply_Certificate) Reset() {
	*x = ListCertificateReply_Certificate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[192]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCertificateReply_Certificate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCertificateReply_Certificate) ProtoMessage() {}

func (x *ListCertificateReply_Certificate) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[192]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCertificateReply_Certificate.ProtoReflect.Descriptor instead.
func (*ListCertificateReply_Certificate) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{127, 0}
}

func (x *ListCertificateReply_Certificate) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *ListCertificateReply_Certificate) GetOrgUuid() string {
	if x != nil {
		return x.OrgUuid
	}
	return ""
}

func (x *ListCertificateReply_Certificate) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *ListCertificateReply_Certificate) GetPem() string {
	if x != nil {
		return x.Pem
	}
	return ""
}

func (x *ListCertificateReply_Certificate) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *ListCertificateReply_Certificate) GetStartDate() int64 {
	if x != nil {
		return x.StartDate
	}
	return 0
}

func (x *ListCertificateReply_Certificate) GetEndDate() int64 {
	if x != nil {
		return x.EndDate
	}
	return 0
}

func (x *ListCertificateReply_Certificate) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *ListCertificateReply_Certificate) GetSerialNumber() string {
	if x != nil {
		return x.SerialNumber
	}
	return ""
}

func (x *ListCertificateReply_Certificate) GetIssuer() string {
	if x != nil {
		return x.Issuer
	}
	return ""
}

func (x *ListCertificateReply_Certificate) GetDnsNames() string {
	if x != nil {
		return x.DnsNames
	}
	return ""
}

func (x *ListCertificateReply_Certificate) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

type ListOSSBucketReply_Bucket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Location     string `protobuf:"bytes,2,opt,name=location,proto3" json:"location,omitempty"`
	CreateTime   string `protobuf:"bytes,3,opt,name=createTime,proto3" json:"createTime,omitempty"`
	StorageClass string `protobuf:"bytes,4,opt,name=storageClass,proto3" json:"storageClass,omitempty"`
}

func (x *ListOSSBucketReply_Bucket) Reset() {
	*x = ListOSSBucketReply_Bucket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[193]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOSSBucketReply_Bucket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOSSBucketReply_Bucket) ProtoMessage() {}

func (x *ListOSSBucketReply_Bucket) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[193]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOSSBucketReply_Bucket.ProtoReflect.Descriptor instead.
func (*ListOSSBucketReply_Bucket) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{133, 0}
}

func (x *ListOSSBucketReply_Bucket) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ListOSSBucketReply_Bucket) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *ListOSSBucketReply_Bucket) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *ListOSSBucketReply_Bucket) GetStorageClass() string {
	if x != nil {
		return x.StorageClass
	}
	return ""
}

type ListCloudPlatformRegionReply_Region struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid       string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	PlatformId int32  `protobuf:"varint,2,opt,name=platformId,proto3" json:"platformId,omitempty"`
	Region     string `protobuf:"bytes,3,opt,name=region,proto3" json:"region,omitempty"`
	RegionName string `protobuf:"bytes,4,opt,name=regionName,proto3" json:"regionName,omitempty"`
}

func (x *ListCloudPlatformRegionReply_Region) Reset() {
	*x = ListCloudPlatformRegionReply_Region{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[194]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCloudPlatformRegionReply_Region) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCloudPlatformRegionReply_Region) ProtoMessage() {}

func (x *ListCloudPlatformRegionReply_Region) ProtoReflect() protoreflect.Message {
	mi := &file_oneCloud_v1_oneCloud_proto_msgTypes[194]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCloudPlatformRegionReply_Region.ProtoReflect.Descriptor instead.
func (*ListCloudPlatformRegionReply_Region) Descriptor() ([]byte, []int) {
	return file_oneCloud_v1_oneCloud_proto_rawDescGZIP(), []int{149, 0}
}

func (x *ListCloudPlatformRegionReply_Region) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *ListCloudPlatformRegionReply_Region) GetPlatformId() int32 {
	if x != nil {
		return x.PlatformId
	}
	return 0
}

func (x *ListCloudPlatformRegionReply_Region) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *ListCloudPlatformRegionReply_Region) GetRegionName() string {
	if x != nil {
		return x.RegionName
	}
	return ""
}

var File_oneCloud_v1_oneCloud_proto protoreflect.FileDescriptor

var file_oneCloud_v1_oneCloud_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x76, 0x31, 0x2f, 0x6f, 0x6e,
	0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x6f, 0x6e,
	0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x18, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72,
	0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x65, 0x71, 0x22, 0xcc, 0x01, 0x0a,
	0x18, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x4a, 0x0a, 0x08, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x6f, 0x6e,
	0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x75,
	0x70, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x2e, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x08, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x1a, 0x64, 0x0a, 0x08, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x68, 0x6f, 0x6d, 0x65, 0x55, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x68, 0x6f, 0x6d, 0x65, 0x55, 0x72, 0x6c, 0x22, 0x84, 0x01, 0x0a, 0x0f,
	0x4c, 0x69, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x65, 0x71, 0x12,
	0x23, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x55, 0x75, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x07,
	0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x55, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x75,
	0x69, 0x64, 0x22, 0xbe, 0x01, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x43, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6f, 0x6e, 0x65,
	0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x50, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x1a, 0x64, 0x0a,
	0x08, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x68, 0x6f, 0x6d,
	0x65, 0x55, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x68, 0x6f, 0x6d, 0x65,
	0x55, 0x72, 0x6c, 0x22, 0xc6, 0x02, 0x0a, 0x15, 0x41, 0x64, 0x64, 0x50, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x23, 0x0a,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x55, 0x75,
	0x69, 0x64, 0x12, 0x21, 0x0a, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x07, 0x6f, 0x72,
	0x67, 0x55, 0x75, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x55, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72,
	0x02, 0x10, 0x01, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x75, 0x69, 0x64,
	0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64,
	0x12, 0x1b, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x29, 0x0a,
	0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0b, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x20,
	0x0a, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x22, 0x31, 0x0a, 0x17,
	0x41, 0x64, 0x64, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22,
	0xab, 0x01, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x23, 0x0a, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x12,
	0x21, 0x0a, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75,
	0x69, 0x64, 0x12, 0x29, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x75, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01,
	0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x1e, 0x0a,
	0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x22, 0xc7, 0x03,
	0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x5f, 0x0a, 0x0f, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x50, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x0f, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x1a, 0xc9, 0x02, 0x0a, 0x0f,
	0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75,
	0x75, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x12, 0x20, 0x0a,
	0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12,
	0x1c, 0x0a, 0x09, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49,
	0x64, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x68, 0x6f,
	0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b,
	0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xb5, 0x01, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x50,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x12, 0x23, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01,
	0x52, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x0b, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x55, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x55, 0x75, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55,
	0x75, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02,
	0x10, 0x01, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x22,
	0x31, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x22, 0xb1, 0x02, 0x0a, 0x18, 0x41, 0x64, 0x64, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x53, 0x75, 0x62, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12,
	0x23, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x55, 0x75, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x07,
	0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x55, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x75,
	0x69, 0x64, 0x12, 0x29, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x75, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01,
	0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x23, 0x0a,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x68, 0x6f, 0x6e,
	0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x70,
	0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x22, 0x34, 0x0a, 0x1a, 0x41, 0x64, 0x64, 0x50, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x53, 0x75, 0x62, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xb9, 0x01, 0x0a,
	0x19, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x53, 0x75, 0x62,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x23, 0x0a, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x12,
	0x21, 0x0a, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75,
	0x69, 0x64, 0x12, 0x29, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x75, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01,
	0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x29, 0x0a,
	0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0b, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x22, 0x97, 0x03, 0x0a, 0x1b, 0x4c, 0x69, 0x73,
	0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x53, 0x75, 0x62, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x6d, 0x0a, 0x13, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x53, 0x75, 0x62, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x53, 0x75, 0x62, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e,
	0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x53, 0x75, 0x62, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x13, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x53, 0x75, 0x62, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x1a, 0x88, 0x02, 0x0a, 0x12, 0x50, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x53, 0x75, 0x62, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75,
	0x69, 0x64, 0x12, 0x30, 0x0a, 0x13, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x13, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x55, 0x75, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x55, 0x75, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x55, 0x75,
	0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x22, 0xbe, 0x01, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x53, 0x75, 0x62, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12,
	0x23, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x55, 0x75, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x07,
	0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x55, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x75,
	0x69, 0x64, 0x12, 0x2f, 0x0a, 0x0e, 0x73, 0x75, 0x62, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x55, 0x75, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72,
	0x02, 0x10, 0x01, 0x52, 0x0e, 0x73, 0x75, 0x62, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55,
	0x75, 0x69, 0x64, 0x22, 0x34, 0x0a, 0x1a, 0x44, 0x65, 0x6c, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x53, 0x75, 0x62, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xd4, 0x01, 0x0a, 0x12, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71,
	0x12, 0x23, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x55, 0x75, 0x69, 0x64, 0x12, 0x2f, 0x0a, 0x0e, 0x73, 0x75, 0x62, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0e, 0x73, 0x75, 0x62, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x4b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02,
	0x10, 0x01, 0x52, 0x09, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x12, 0x25, 0x0a,
	0x09, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x09, 0x73, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x4b, 0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x22, 0x2e, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x4b, 0x65, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x22, 0xb5, 0x01, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65,
	0x79, 0x52, 0x65, 0x71, 0x12, 0x23, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x07, 0x6f, 0x72, 0x67,
	0x55, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72,
	0x02, 0x10, 0x01, 0x52, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x0b,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x2f, 0x0a, 0x0e, 0x73, 0x75, 0x62, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0e, 0x73, 0x75, 0x62, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x22, 0x81, 0x02, 0x0a, 0x11, 0x47, 0x65, 0x74,
	0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x48,
	0x0a, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x52, 0x0a, 0x61, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x73, 0x1a, 0xa1, 0x01, 0x0a, 0x09, 0x41, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x73, 0x75,
	0x62, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x73, 0x75, 0x62, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x75,
	0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79,
	0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xe4, 0x01, 0x0a,
	0x0f, 0x44, 0x65, 0x6c, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71,
	0x12, 0x23, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x55, 0x75, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52,
	0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x55, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55,
	0x75, 0x69, 0x64, 0x12, 0x2f, 0x0a, 0x0e, 0x73, 0x75, 0x62, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x55, 0x75, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x72, 0x02, 0x10, 0x01, 0x52, 0x0e, 0x73, 0x75, 0x62, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x55, 0x75, 0x69, 0x64, 0x12, 0x2d, 0x0a, 0x0d, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65,
	0x79, 0x55, 0x75, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x72, 0x02, 0x10, 0x01, 0x52, 0x0d, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x55,
	0x75, 0x69, 0x64, 0x22, 0x2b, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x4b, 0x65, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x22, 0xcf, 0x03, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x23, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x55, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72,
	0x02, 0x10, 0x01, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x12, 0x21, 0x0a,
	0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64,
	0x12, 0x29, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x75, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0b,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x0b, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x2f, 0x0a, 0x0e, 0x73, 0x75, 0x62, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0e, 0x73, 0x75, 0x62, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x41, 0x0a, 0x17, 0x73, 0x75, 0x62, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x55, 0x75,
	0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10,
	0x01, 0x52, 0x17, 0x73, 0x75, 0x62, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x55, 0x75, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x03, 0x41, 0x52,
	0x4e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01,
	0x52, 0x03, 0x41, 0x52, 0x4e, 0x12, 0x29, 0x0a, 0x0b, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72,
	0x02, 0x10, 0x01, 0x52, 0x0b, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x28, 0x0a, 0x0f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x63, 0x6f,
	0x6e, 0x64, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x64, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x22, 0xcd, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69,
	0x74, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x20, 0x0a, 0x0b,
	0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x49, 0x64, 0x12, 0x28,
	0x0a, 0x0f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x53, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b,
	0x65, 0x79, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x65, 0x63, 0x75,
	0x72, 0x69, 0x74, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x22,
	0x0a, 0x0c, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0xc1, 0x03, 0x0a, 0x2c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69,
	0x74, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x52, 0x65, 0x71, 0x12, 0x23, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x07, 0x6f, 0x72, 0x67, 0x55,
	0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02,
	0x10, 0x01, 0x52, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x0b, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x55, 0x75, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x72, 0x02, 0x10, 0x01, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x75, 0x69,
	0x64, 0x12, 0x2f, 0x0a, 0x0e, 0x73, 0x75, 0x62, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55,
	0x75, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02,
	0x10, 0x01, 0x52, 0x0e, 0x73, 0x75, 0x62, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x75,
	0x69, 0x64, 0x12, 0x41, 0x0a, 0x17, 0x73, 0x75, 0x62, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x55, 0x75, 0x69, 0x64, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x17, 0x73, 0x75,
	0x62, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65,
	0x79, 0x55, 0x75, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x06,
	0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x23, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10,
	0x01, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x03, 0x61,
	0x72, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10,
	0x01, 0x52, 0x03, 0x61, 0x72, 0x6e, 0x22, 0x48, 0x0a, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x53, 0x65, 0x63,
	0x75, 0x72, 0x69, 0x74, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x22, 0xe1, 0x01, 0x0a, 0x2b, 0x45, 0x78, 0x69, 0x73, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71,
	0x12, 0x23, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x55, 0x75, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52,
	0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x55, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55,
	0x75, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x06, 0x62, 0x75,
	0x63, 0x6b, 0x65, 0x74, 0x22, 0x47, 0x0a, 0x2d, 0x45, 0x78, 0x69, 0x73, 0x74, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69,
	0x74, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xcd, 0x01,
	0x0a, 0x29, 0x47, 0x65, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x47,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x12, 0x23, 0x0a, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64,
	0x12, 0x21, 0x0a, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x07, 0x6f, 0x72, 0x67, 0x55,
	0x75, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x75,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10,
	0x01, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x2d,
	0x0a, 0x0d, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x55, 0x75, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0d,
	0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x55, 0x75, 0x69, 0x64, 0x22, 0xf7, 0x02,
	0x0a, 0x2b, 0x47, 0x65, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x47,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a,
	0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x1e, 0x0a,
	0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x12, 0x22, 0x0a,
	0x0c, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x75, 0x69, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55,
	0x75, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79,
	0x55, 0x75, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x4b, 0x65, 0x79, 0x55, 0x75, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x75, 0x63,
	0x6b, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62,
	0x75, 0x63, 0x6b, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6e, 0x64,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x6e, 0x64,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x72, 0x6e, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x61, 0x72, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xcd, 0x01, 0x0a, 0x29, 0x44, 0x65, 0x6c, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x53, 0x65, 0x63, 0x75,
	0x72, 0x69, 0x74, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x6f, 0x72, 0x52, 0x65, 0x71, 0x12, 0x23, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01,
	0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x07, 0x6f, 0x72,
	0x67, 0x55, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x72, 0x02, 0x10, 0x01, 0x52, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x12, 0x29, 0x0a,
	0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0b, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x2d, 0x0a, 0x0d, 0x67, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x55, 0x75, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0d, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x55, 0x75, 0x69, 0x64, 0x22, 0x45, 0x0a, 0x2b, 0x44, 0x65, 0x6c, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x53, 0x65, 0x63, 0x75, 0x72,
	0x69, 0x74, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x9f,
	0x01, 0x0a, 0x2a, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x12, 0x23, 0x0a,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x55, 0x75,
	0x69, 0x64, 0x12, 0x21, 0x0a, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x07, 0x6f, 0x72,
	0x67, 0x55, 0x75, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x55, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72,
	0x02, 0x10, 0x01, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x75, 0x69, 0x64,
	0x22, 0xe9, 0x03, 0x0a, 0x2c, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x61, 0x0a, 0x09, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x43, 0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e,
	0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x09, 0x67, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x1a, 0xd5, 0x02, 0x0a, 0x09, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64,
	0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x75, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x75,
	0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x55, 0x75, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x4b, 0x65, 0x79, 0x55, 0x75, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x55, 0x75, 0x69, 0x64, 0x12, 0x1e,
	0x0a, 0x0a, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x72,
	0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x72, 0x6e, 0x12, 0x1e, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xf8, 0x01, 0x0a,
	0x2b, 0x47, 0x65, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x79,
	0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x12, 0x23, 0x0a, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69,
	0x64, 0x12, 0x21, 0x0a, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x07, 0x6f, 0x72, 0x67,
	0x55, 0x75, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55,
	0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02,
	0x10, 0x01, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12,
	0x2d, 0x0a, 0x0d, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x55, 0x75, 0x69, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52,
	0x0d, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x55, 0x75, 0x69, 0x64, 0x12, 0x27,
	0x0a, 0x0a, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x76, 0x65, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0a, 0x72, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x76, 0x65, 0x49, 0x64, 0x22, 0xd6, 0x02, 0x0a, 0x2d, 0x47, 0x65, 0x74, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x53, 0x65, 0x63, 0x75,
	0x72, 0x69, 0x74, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x79, 0x47, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x53,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74,
	0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x65,
	0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x65,
	0x78, 0x74, 0x65, 0x6e, 0x64, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12,
	0x1e, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x16, 0x0a, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f,
	0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x22, 0xa0, 0x01, 0x0a, 0x27, 0x47, 0x65, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x42, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x2d, 0x0a, 0x0d,
	0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x55, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0d, 0x67, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x55, 0x75, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x05, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72,
	0x02, 0x10, 0x01, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x27, 0x0a, 0x0a, 0x72, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x76, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0a, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x76,
	0x65, 0x49, 0x64, 0x22, 0xbd, 0x01, 0x0a, 0x29, 0x47, 0x65, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65,
	0x79, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79,
	0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x24, 0x0a,
	0x0d, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x79, 0x0a, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x53, 0x65, 0x63, 0x75,
	0x72, 0x69, 0x74, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x50, 0x75, 0x74, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0a, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x76,
	0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02,
	0x10, 0x01, 0x52, 0x0a, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x76, 0x65, 0x49, 0x64, 0x22, 0x4a,
	0x0a, 0x30, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x50, 0x75, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x22, 0xc5, 0x02, 0x0a, 0x11, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x12, 0x23, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x55, 0x75, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52,
	0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x55, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55,
	0x75, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x75,
	0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10,
	0x01, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x2f,
	0x0a, 0x0e, 0x73, 0x75, 0x62, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x75, 0x69, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52,
	0x0e, 0x73, 0x75, 0x62, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12,
	0x41, 0x0a, 0x17, 0x73, 0x75, 0x62, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x55, 0x75, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x17, 0x73, 0x75, 0x62, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x55, 0x75,
	0x69, 0x64, 0x22, 0xe3, 0x02, 0x0a, 0x13, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x62, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x63, 0x61, 0x73, 0x68, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x12, 0x63, 0x61, 0x73, 0x68, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x77, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x6f, 0x77, 0x65, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x69, 0x73, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x41, 0x72, 0x72,
	0x65, 0x61, 0x72, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x69, 0x73, 0x41, 0x6c,
	0x6c, 0x6f, 0x77, 0x41, 0x72, 0x72, 0x65, 0x61, 0x72, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x69, 0x73,
	0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0f, 0x69, 0x73, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x4c, 0x69, 0x6d,
	0x69, 0x74, 0x65, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x63, 0x72, 0x65, 0x64,
	0x69, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x72, 0x65, 0x64,
	0x69, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x0d, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x2c,
	0x0a, 0x11, 0x72, 0x65, 0x61, 0x6c, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x42, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x11, 0x72, 0x65, 0x61, 0x6c, 0x43,
	0x72, 0x65, 0x64, 0x69, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x22, 0xdc, 0x01, 0x0a, 0x0f, 0x47, 0x65, 0x74,
	0x45, 0x43, 0x53, 0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x12, 0x23, 0x0a, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69,
	0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49,
	0x64, 0x12, 0x2d, 0x0a, 0x0d, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x55, 0x75,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10,
	0x01, 0x52, 0x0d, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x55, 0x75, 0x69, 0x64,
	0x12, 0x23, 0x0a, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x08, 0x72, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x70, 0x75, 0x43, 0x6f, 0x72, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x70, 0x75, 0x43, 0x6f, 0x72, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x22, 0x13, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x45, 0x43,
	0x53, 0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0xcd, 0x01, 0x0a,
	0x09, 0x47, 0x65, 0x74, 0x45, 0x43, 0x53, 0x52, 0x65, 0x71, 0x12, 0x23, 0x0a, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x12,
	0x21, 0x0a, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75,
	0x69, 0x64, 0x12, 0x29, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x75, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01,
	0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x1e, 0x0a,
	0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x12, 0x2d, 0x0a,
	0x0d, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x55, 0x75, 0x69, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0d, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x55, 0x75, 0x69, 0x64, 0x22, 0x0d, 0x0a, 0x0b,
	0x47, 0x65, 0x74, 0x45, 0x43, 0x53, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0xd0, 0x01, 0x0a, 0x0c,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x43, 0x53, 0x52, 0x65, 0x71, 0x12, 0x23, 0x0a, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69,
	0x64, 0x12, 0x21, 0x0a, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x07, 0x6f, 0x72, 0x67,
	0x55, 0x75, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55,
	0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02,
	0x10, 0x01, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12,
	0x1e, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x12,
	0x2d, 0x0a, 0x0d, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x55, 0x75, 0x69, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52,
	0x0d, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x55, 0x75, 0x69, 0x64, 0x22, 0x10,
	0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x43, 0x53, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0xd1, 0x01, 0x0a, 0x0d, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x45, 0x43, 0x53, 0x52,
	0x65, 0x71, 0x12, 0x23, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10,
	0x01, 0x52, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x0b, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x0d, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b,
	0x65, 0x79, 0x55, 0x75, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0d, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79,
	0x55, 0x75, 0x69, 0x64, 0x22, 0x11, 0x0a, 0x0f, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x45,
	0x43, 0x53, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0xd0, 0x01, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x45, 0x43, 0x53, 0x52, 0x65, 0x71, 0x12, 0x23, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x55, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72,
	0x02, 0x10, 0x01, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x12, 0x21, 0x0a,
	0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64,
	0x12, 0x29, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x75, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0b,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x0d, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x55, 0x75, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0d, 0x61, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x55, 0x75, 0x69, 0x64, 0x22, 0x10, 0x0a, 0x0e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x45, 0x43, 0x53, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0xd2, 0x01, 0x0a,
	0x0e, 0x53, 0x68, 0x75, 0x74, 0x64, 0x6f, 0x77, 0x6e, 0x45, 0x43, 0x53, 0x52, 0x65, 0x71, 0x12,
	0x23, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x55, 0x75, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x07,
	0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x55, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x75,
	0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x49, 0x64, 0x12, 0x2d, 0x0a, 0x0d, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x55,
	0x75, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02,
	0x10, 0x01, 0x52, 0x0d, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x55, 0x75, 0x69,
	0x64, 0x22, 0x12, 0x0a, 0x10, 0x53, 0x68, 0x75, 0x74, 0x64, 0x6f, 0x77, 0x6e, 0x45, 0x43, 0x53,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0xd0, 0x01, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x45, 0x49, 0x50, 0x52, 0x65, 0x71, 0x12, 0x23, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x55, 0x75,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10,
	0x01, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x07, 0x6f,
	0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x12, 0x29,
	0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0b, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x0d, 0x61, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x55, 0x75, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0d, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x4b, 0x65, 0x79, 0x55, 0x75, 0x69, 0x64, 0x22, 0x10, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x45, 0x49, 0x50, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x7f, 0x0a, 0x09, 0x47, 0x65,
	0x74, 0x45, 0x49, 0x50, 0x52, 0x65, 0x71, 0x12, 0x23, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x55,
	0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02,
	0x10, 0x01, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x0d,
	0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x55, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0d, 0x61, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x55, 0x75, 0x69, 0x64, 0x22, 0x0d, 0x0a, 0x0b, 0x47,
	0x65, 0x74, 0x45, 0x49, 0x50, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0xd0, 0x01, 0x0a, 0x0c, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x49, 0x50, 0x52, 0x65, 0x71, 0x12, 0x23, 0x0a, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64,
	0x12, 0x21, 0x0a, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x07, 0x6f, 0x72, 0x67, 0x55,
	0x75, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x75,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10,
	0x01, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x1e,
	0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x12, 0x2d,
	0x0a, 0x0d, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x55, 0x75, 0x69, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0d,
	0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x55, 0x75, 0x69, 0x64, 0x22, 0x10, 0x0a,
	0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x49, 0x50, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0xd1, 0x01, 0x0a, 0x0d, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x45, 0x49, 0x50, 0x52, 0x65,
	0x71, 0x12, 0x23, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01,
	0x52, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x0b, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x55, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x55, 0x75, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x0d, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65,
	0x79, 0x55, 0x75, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x72, 0x02, 0x10, 0x01, 0x52, 0x0d, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x55,
	0x75, 0x69, 0x64, 0x22, 0x11, 0x0a, 0x0f, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x45, 0x49,
	0x50, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0xc0, 0x02, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x44, 0x53, 0x52, 0x65, 0x71, 0x12, 0x23, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x55,
	0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02,
	0x10, 0x01, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x07,
	0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x12,
	0x29, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x75, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0b, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x0b, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x2f, 0x0a, 0x0e, 0x73, 0x75, 0x62, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0e, 0x73, 0x75, 0x62, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x41, 0x0a, 0x17, 0x73, 0x75, 0x62, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x55, 0x75, 0x69,
	0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01,
	0x52, 0x17, 0x73, 0x75, 0x62, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x4b, 0x65, 0x79, 0x55, 0x75, 0x69, 0x64, 0x22, 0x10, 0x0a, 0x0e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x52, 0x44, 0x53, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0xbd, 0x02, 0x0a, 0x09,
	0x47, 0x65, 0x74, 0x52, 0x44, 0x53, 0x52, 0x65, 0x71, 0x12, 0x23, 0x0a, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x55, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x72, 0x02, 0x10, 0x01, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x12, 0x21,
	0x0a, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69,
	0x64, 0x12, 0x29, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x75, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52,
	0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x0b,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x2f, 0x0a, 0x0e, 0x73, 0x75, 0x62, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0e, 0x73, 0x75, 0x62, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x41, 0x0a, 0x17, 0x73, 0x75, 0x62, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x55,
	0x75, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02,
	0x10, 0x01, 0x52, 0x17, 0x73, 0x75, 0x62, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x55, 0x75, 0x69, 0x64, 0x22, 0x0d, 0x0a, 0x0b, 0x47,
	0x65, 0x74, 0x52, 0x44, 0x53, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0xdf, 0x02, 0x0a, 0x0a, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x44, 0x53, 0x52, 0x65, 0x71, 0x12, 0x23, 0x0a, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x55, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x72, 0x02, 0x10, 0x01, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x12, 0x21,
	0x0a, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69,
	0x64, 0x12, 0x29, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x75, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52,
	0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x0b,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x2f, 0x0a, 0x0e, 0x73, 0x75, 0x62, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0e, 0x73, 0x75, 0x62, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x41, 0x0a, 0x17, 0x73, 0x75, 0x62, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x55,
	0x75, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02,
	0x10, 0x01, 0x52, 0x17, 0x73, 0x75, 0x62, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x55, 0x75, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x06, 0x72,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x72, 0x02, 0x10, 0x01, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x22, 0xcd, 0x03, 0x0a,
	0x0c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x44, 0x53, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x40, 0x0a,
	0x09, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x44, 0x53, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x52, 0x09, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x1a,
	0xfa, 0x02, 0x0a, 0x08, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4e, 0x65, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4e, 0x65, 0x74, 0x12, 0x10,
	0x0a, 0x03, 0x63, 0x70, 0x75, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x63, 0x70, 0x75,
	0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x71, 0x70, 0x73, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x71, 0x70, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x6e, 0x65, 0x77, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x61, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x6e, 0x65, 0x77,
	0x12, 0x22, 0x0a, 0x0c, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x64, 0x65, 0x61, 0x64,
	0x6c, 0x69, 0x6e, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x64, 0x62, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x64, 0x62, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x22, 0xda, 0x03, 0x0a,
	0x12, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x44, 0x53, 0x53, 0x6c, 0x6f, 0x77, 0x4c, 0x6f, 0x67, 0x73,
	0x52, 0x65, 0x71, 0x12, 0x23, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x07, 0x6f, 0x72, 0x67, 0x55,
	0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02,
	0x10, 0x01, 0x52, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x0b, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x55, 0x75, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x72, 0x02, 0x10, 0x01, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x75, 0x69,
	0x64, 0x12, 0x2f, 0x0a, 0x0e, 0x73, 0x75, 0x62, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55,
	0x75, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02,
	0x10, 0x01, 0x52, 0x0e, 0x73, 0x75, 0x62, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x75,
	0x69, 0x64, 0x12, 0x41, 0x0a, 0x17, 0x73, 0x75, 0x62, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x55, 0x75, 0x69, 0x64, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x17, 0x73, 0x75,
	0x62, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65,
	0x79, 0x55, 0x75, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x06,
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72,
	0x02, 0x10, 0x01, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12,
	0x25, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x20, 0x01, 0x52, 0x09, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x20, 0x01,
	0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xe9, 0x02, 0x0a, 0x14, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x44, 0x53, 0x53, 0x6c, 0x6f, 0x77, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x45, 0x0a, 0x08, 0x53, 0x6c, 0x6f, 0x77, 0x4c, 0x6f, 0x67, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x44, 0x53, 0x53, 0x6c, 0x6f, 0x77, 0x4c, 0x6f,
	0x67, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x53, 0x6c, 0x6f, 0x77, 0x4c, 0x6f, 0x67, 0x52,
	0x08, 0x53, 0x6c, 0x6f, 0x77, 0x4c, 0x6f, 0x67, 0x73, 0x1a, 0x89, 0x02, 0x0a, 0x07, 0x53, 0x6c,
	0x6f, 0x77, 0x4c, 0x6f, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x48, 0x6f, 0x73, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x48, 0x6f, 0x73, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64,
	0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64,
	0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x71, 0x6c, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x71, 0x6c, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x71, 0x75, 0x65, 0x72, 0x79, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x71, 0x75, 0x65, 0x72, 0x79, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x63, 0x61, 0x6e, 0x52, 0x6f, 0x77, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x73, 0x63, 0x61, 0x6e, 0x52, 0x6f, 0x77, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x52, 0x6f, 0x77, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x52, 0x6f, 0x77, 0x22, 0xd9, 0x03, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x44,
	0x53, 0x45, 0x72, 0x72, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x71, 0x12, 0x23, 0x0a, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64,
	0x12, 0x21, 0x0a, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x07, 0x6f, 0x72, 0x67, 0x55,
	0x75, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x75,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10,
	0x01, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x1e,
	0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x12, 0x29,
	0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0b, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x2f, 0x0a, 0x0e, 0x73, 0x75, 0x62,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0e, 0x73, 0x75, 0x62, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x41, 0x0a, 0x17, 0x73, 0x75,
	0x62, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65,
	0x79, 0x55, 0x75, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x72, 0x02, 0x10, 0x01, 0x52, 0x17, 0x73, 0x75, 0x62, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x55, 0x75, 0x69, 0x64, 0x12, 0x1f, 0x0a,
	0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x27,
	0x0a, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0a, 0x69, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22,
	0x02, 0x20, 0x01, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x21,
	0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x20, 0x01, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x22, 0x9a, 0x01, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x44, 0x53, 0x45, 0x72, 0x72,
	0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x41, 0x0a, 0x07, 0x65, 0x72, 0x72,
	0x4c, 0x6f, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6f, 0x6e, 0x65,
	0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x44, 0x53,
	0x45, 0x72, 0x72, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x45, 0x72, 0x72,
	0x4c, 0x6f, 0x67, 0x52, 0x07, 0x65, 0x72, 0x72, 0x4c, 0x6f, 0x67, 0x73, 0x1a, 0x40, 0x0a, 0x06,
	0x45, 0x72, 0x72, 0x4c, 0x6f, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0xcf,
	0x01, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x42, 0x52, 0x65, 0x71, 0x12, 0x23,
	0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x55,
	0x75, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x07, 0x6f,
	0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x55, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x72, 0x02, 0x10, 0x01, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x75, 0x69,
	0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49,
	0x64, 0x12, 0x2d, 0x0a, 0x0d, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x55, 0x75,
	0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10,
	0x01, 0x52, 0x0d, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x55, 0x75, 0x69, 0x64,
	0x22, 0x0f, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x42, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0xcc, 0x01, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x4c, 0x42, 0x52, 0x65, 0x71, 0x12, 0x23,
	0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x55,
	0x75, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x07, 0x6f,
	0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x55, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x72, 0x02, 0x10, 0x01, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x75, 0x69,
	0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49,
	0x64, 0x12, 0x2d, 0x0a, 0x0d, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x55, 0x75,
	0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10,
	0x01, 0x52, 0x0d, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x55, 0x75, 0x69, 0x64,
	0x22, 0x0c, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x4c, 0x42, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0xd0,
	0x01, 0x0a, 0x0c, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x4c, 0x42, 0x52, 0x65, 0x71, 0x12,
	0x23, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x55, 0x75, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x07,
	0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x55, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x75,
	0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x49, 0x64, 0x12, 0x2d, 0x0a, 0x0d, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x55,
	0x75, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02,
	0x10, 0x01, 0x52, 0x0d, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x55, 0x75, 0x69,
	0x64, 0x22, 0x10, 0x0a, 0x0e, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x4c, 0x42, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0xbe, 0x02, 0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x44, 0x4e, 0x52,
	0x65, 0x71, 0x12, 0x23, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10,
	0x01, 0x52, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x0b, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x55, 0x75, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72,
	0x02, 0x10, 0x01, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x75, 0x69, 0x64,
	0x12, 0x2f, 0x0a, 0x0e, 0x73, 0x75, 0x62, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x75,
	0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10,
	0x01, 0x52, 0x0e, 0x73, 0x75, 0x62, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x75, 0x69,
	0x64, 0x12, 0x41, 0x0a, 0x17, 0x73, 0x75, 0x62, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x55, 0x75, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x17, 0x73, 0x75, 0x62,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79,
	0x55, 0x75, 0x69, 0x64, 0x22, 0x87, 0x03, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x44, 0x4e,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2f, 0x0a, 0x03, 0x63, 0x64, 0x6e, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x44, 0x4e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x43, 0x64,
	0x6e, 0x52, 0x03, 0x63, 0x64, 0x6e, 0x1a, 0xef, 0x01, 0x0a, 0x03, 0x43, 0x64, 0x6e, 0x12, 0x1a,
	0x0a, 0x08, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x63, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x38, 0x0a, 0x06, 0x6f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x44, 0x4e, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x2e, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x52, 0x06, 0x6f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x12, 0x44, 0x0a, 0x0c, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x4f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x44, 0x4e, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x2e, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x52, 0x0c, 0x62, 0x61, 0x63, 0x6b,
	0x75, 0x70, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x1a, 0x54, 0x0a, 0x06, 0x4f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0xe6,
	0x02, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x43, 0x44, 0x4e, 0x52, 0x65, 0x71, 0x12, 0x23, 0x0a, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69,
	0x64, 0x12, 0x21, 0x0a, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x07, 0x6f, 0x72, 0x67,
	0x55, 0x75, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55,
	0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02,
	0x10, 0x01, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12,
	0x1e, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x12,
	0x29, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0b, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x2f, 0x0a, 0x0e, 0x73, 0x75,
	0x62, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0e, 0x73, 0x75, 0x62,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x41, 0x0a, 0x17, 0x73,
	0x75, 0x62, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b,
	0x65, 0x79, 0x55, 0x75, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x17, 0x73, 0x75, 0x62, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x55, 0x75, 0x69, 0x64, 0x12, 0x27,
	0x0a, 0x0a, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0a, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xa7, 0x02, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x43,
	0x44, 0x4e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x37, 0x0a,
	0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43,
	0x44, 0x4e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x52, 0x06,
	0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x43, 0x0a, 0x0c, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70,
	0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6f,
	0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x44,
	0x4e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x52, 0x0c, 0x62,
	0x61, 0x63, 0x6b, 0x75, 0x70, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x1a, 0x54, 0x0a, 0x06, 0x4f,
	0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x1e, 0x0a,
	0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x22, 0x87, 0x03, 0x0a, 0x09, 0x41, 0x64, 0x64, 0x43, 0x44, 0x4e, 0x52, 0x65, 0x71, 0x12,
	0x23, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x55, 0x75, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x07,
	0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x55, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x75,
	0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x49, 0x64, 0x12, 0x29, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x75, 0x69,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01,
	0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x2f, 0x0a,
	0x0e, 0x73, 0x75, 0x62, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0e,
	0x73, 0x75, 0x62, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x41,
	0x0a, 0x17, 0x73, 0x75, 0x62, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x4b, 0x65, 0x79, 0x55, 0x75, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x17, 0x73, 0x75, 0x62, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x55, 0x75, 0x69,
	0x64, 0x12, 0x27, 0x0a, 0x0a, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0a,
	0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x06, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72,
	0x02, 0x10, 0x01, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x25, 0x0a, 0x0b, 0x41,
	0x64, 0x64, 0x43, 0x44, 0x4e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x22, 0xe9, 0x02, 0x0a, 0x0c, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x44, 0x4e,
	0x52, 0x65, 0x71, 0x12, 0x23, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x07, 0x6f, 0x72, 0x67, 0x55,
	0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02,
	0x10, 0x01, 0x52, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x0b, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x55, 0x75, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x72, 0x02, 0x10, 0x01, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x75, 0x69,
	0x64, 0x12, 0x2f, 0x0a, 0x0e, 0x73, 0x75, 0x62, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55,
	0x75, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02,
	0x10, 0x01, 0x52, 0x0e, 0x73, 0x75, 0x62, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x75,
	0x69, 0x64, 0x12, 0x41, 0x0a, 0x17, 0x73, 0x75, 0x62, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x55, 0x75, 0x69, 0x64, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x17, 0x73, 0x75,
	0x62, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65,
	0x79, 0x55, 0x75, 0x69, 0x64, 0x12, 0x27, 0x0a, 0x0a, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02,
	0x10, 0x01, 0x52, 0x0a, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x28,
	0x0a, 0x0e, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x44, 0x4e, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xc1, 0x02, 0x0a, 0x0d, 0x52, 0x65, 0x6c,
	0x65, 0x61, 0x73, 0x65, 0x43, 0x44, 0x4e, 0x52, 0x65, 0x71, 0x12, 0x23, 0x0a, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x12,
	0x21, 0x0a, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75,
	0x69, 0x64, 0x12, 0x29, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x75, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01,
	0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x1e, 0x0a,
	0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x12, 0x29, 0x0a,
	0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0b, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x2f, 0x0a, 0x0e, 0x73, 0x75, 0x62, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0e, 0x73, 0x75, 0x62, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x41, 0x0a, 0x17, 0x73, 0x75, 0x62,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79,
	0x55, 0x75, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72,
	0x02, 0x10, 0x01, 0x52, 0x17, 0x73, 0x75, 0x62, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x55, 0x75, 0x69, 0x64, 0x22, 0x29, 0x0a, 0x0f,
	0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x43, 0x44, 0x4e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xc0, 0x02, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x43, 0x44, 0x4e, 0x52, 0x65, 0x71, 0x12, 0x23, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x55, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72,
	0x02, 0x10, 0x01, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x12, 0x21, 0x0a,
	0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64,
	0x12, 0x29, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x75, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0b,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x0b, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x2f, 0x0a, 0x0e, 0x73, 0x75, 0x62, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0e, 0x73, 0x75, 0x62, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x41, 0x0a, 0x17, 0x73, 0x75, 0x62, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x55, 0x75,
	0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10,
	0x01, 0x52, 0x17, 0x73, 0x75, 0x62, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x55, 0x75, 0x69, 0x64, 0x22, 0x28, 0x0a, 0x0e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x43, 0x44, 0x4e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x22, 0x98, 0x03, 0x0a, 0x12, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68,
	0x43, 0x44, 0x4e, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x71, 0x12, 0x23, 0x0a, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64,
	0x12, 0x21, 0x0a, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x07, 0x6f, 0x72, 0x67, 0x55,
	0x75, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x75,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10,
	0x01, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x1e,
	0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x12, 0x29,
	0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0b, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x2f, 0x0a, 0x0e, 0x73, 0x75, 0x62,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0e, 0x73, 0x75, 0x62, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x41, 0x0a, 0x17, 0x73, 0x75,
	0x62, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65,
	0x79, 0x55, 0x75, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x72, 0x02, 0x10, 0x01, 0x52, 0x17, 0x73, 0x75, 0x62, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x55, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x74, 0x68, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x05, 0x70, 0x61, 0x74, 0x68, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x64, 0x69, 0x73, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22,
	0x2e, 0x0a, 0x14, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x43, 0x44, 0x4e, 0x43, 0x61, 0x63,
	0x68, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22,
	0xc2, 0x02, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x43, 0x44, 0x4e, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x52,
	0x65, 0x71, 0x12, 0x23, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10,
	0x01, 0x52, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x0b, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x55, 0x75, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72,
	0x02, 0x10, 0x01, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x75, 0x69, 0x64,
	0x12, 0x2f, 0x0a, 0x0e, 0x73, 0x75, 0x62, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x75,
	0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10,
	0x01, 0x52, 0x0e, 0x73, 0x75, 0x62, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x75, 0x69,
	0x64, 0x12, 0x41, 0x0a, 0x17, 0x73, 0x75, 0x62, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x55, 0x75, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x17, 0x73, 0x75, 0x62,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79,
	0x55, 0x75, 0x69, 0x64, 0x22, 0xca, 0x02, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x43, 0x44, 0x4e, 0x51,
	0x75, 0x6f, 0x74, 0x61, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x28, 0x0a, 0x0f, 0x72, 0x65, 0x66,
	0x72, 0x65, 0x73, 0x68, 0x55, 0x72, 0x6c, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0f, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x55, 0x72, 0x6c, 0x51, 0x75,
	0x6f, 0x74, 0x61, 0x12, 0x2a, 0x0a, 0x10, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x55, 0x72,
	0x6c, 0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x72,
	0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x12,
	0x28, 0x0a, 0x0f, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x44, 0x69, 0x72, 0x51, 0x75, 0x6f,
	0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73,
	0x68, 0x44, 0x69, 0x72, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x12, 0x2a, 0x0a, 0x10, 0x72, 0x65, 0x66,
	0x72, 0x65, 0x73, 0x68, 0x44, 0x69, 0x72, 0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x10, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x44, 0x69, 0x72, 0x52,
	0x65, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x72, 0x65, 0x6c, 0x6f, 0x61, 0x64,
	0x51, 0x75, 0x6f, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x70, 0x72, 0x65,
	0x6c, 0x6f, 0x61, 0x64, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x12, 0x24, 0x0a, 0x0d, 0x70, 0x72, 0x65,
	0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0d, 0x70, 0x72, 0x65, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x12,
	0x1e, 0x0a, 0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x12,
	0x20, 0x0a, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x6d, 0x61, 0x69,
	0x6e, 0x22, 0xd7, 0x02, 0x0a, 0x0a, 0x49, 0x73, 0x43, 0x64, 0x6e, 0x49, 0x70, 0x52, 0x65, 0x71,
	0x12, 0x23, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x55, 0x75, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52,
	0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x55, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55,
	0x75, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x75,
	0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10,
	0x01, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x2f,
	0x0a, 0x0e, 0x73, 0x75, 0x62, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x75, 0x69, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52,
	0x0e, 0x73, 0x75, 0x62, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12,
	0x41, 0x0a, 0x17, 0x73, 0x75, 0x62, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x55, 0x75, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x17, 0x73, 0x75, 0x62, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x55, 0x75,
	0x69, 0x64, 0x12, 0x17, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x72, 0x02, 0x70, 0x01, 0x52, 0x02, 0x69, 0x70, 0x22, 0x56, 0x0a, 0x0c, 0x49,
	0x73, 0x43, 0x64, 0x6e, 0x49, 0x70, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x63,
	0x64, 0x6e, 0x49, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x64, 0x6e, 0x49,
	0x70, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x73, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x69, 0x73, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x22, 0xd7, 0x02, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x43, 0x64, 0x6e, 0x49, 0x70,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x12, 0x23, 0x0a, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x55, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x72, 0x02, 0x10, 0x01, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x12, 0x21,
	0x0a, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69,
	0x64, 0x12, 0x29, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x75, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52,
	0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x0b,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x2f, 0x0a, 0x0e, 0x73, 0x75, 0x62, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0e, 0x73, 0x75, 0x62, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x41, 0x0a, 0x17, 0x73, 0x75, 0x62, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x55,
	0x75, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02,
	0x10, 0x01, 0x52, 0x17, 0x73, 0x75, 0x62, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x55, 0x75, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x69,
	0x70, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x69, 0x70, 0x73, 0x22, 0x96, 0x01,
	0x0a, 0x13, 0x47, 0x65, 0x74, 0x43, 0x64, 0x6e, 0x49, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x48, 0x0a, 0x08, 0x69, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x64, 0x6e, 0x49, 0x70, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x43, 0x64, 0x6e, 0x49, 0x70, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x08, 0x69, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x1a,
	0x35, 0x0a, 0x0b, 0x43, 0x64, 0x6e, 0x49, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xca, 0x02, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x43, 0x64,
	0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65,
	0x71, 0x12, 0x23, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01,
	0x52, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x0b, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x55, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x55, 0x75, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55,
	0x75, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02,
	0x10, 0x01, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12,
	0x2f, 0x0a, 0x0e, 0x73, 0x75, 0x62, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x75, 0x69,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01,
	0x52, 0x0e, 0x73, 0x75, 0x62, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x75, 0x69, 0x64,
	0x12, 0x41, 0x0a, 0x17, 0x73, 0x75, 0x62, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x55, 0x75, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x17, 0x73, 0x75, 0x62, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x55,
	0x75, 0x69, 0x64, 0x22, 0x8e, 0x02, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x43, 0x64, 0x6e, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64,
	0x12, 0x2e, 0x0a, 0x12, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x43, 0x68, 0x61, 0x72,
	0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x2e, 0x0a, 0x12, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x69, 0x6e, 0x67, 0x41, 0x66, 0x66, 0x65,
	0x63, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x69, 0x6e, 0x67, 0x41, 0x66, 0x66, 0x65, 0x63, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x2e, 0x0a, 0x12, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x69, 0x6e, 0x67, 0x43, 0x68, 0x61, 0x72,
	0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x69, 0x6e, 0x67, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x52, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x22, 0x85, 0x01, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x44, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x12, 0x23, 0x0a, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x55, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x72, 0x02, 0x10, 0x01, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x12, 0x21,
	0x0a, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69,
	0x64, 0x12, 0x29, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x75, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52,
	0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x75, 0x69, 0x64, 0x22, 0xc3, 0x02, 0x0a,
	0x12, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x44, 0x6e, 0x73, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x3e, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x44, 0x6e, 0x73, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x2e, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x06, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x1a, 0xec, 0x01, 0x0a, 0x06, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x20,
	0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x28, 0x0a, 0x0f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x28, 0x0a, 0x0f, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x6e, 0x73, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x6e, 0x73, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x22, 0xc9, 0x02, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x6f, 0x75, 0x64,
	0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x44, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x12, 0x23, 0x0a, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69,
	0x64, 0x12, 0x21, 0x0a, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x07, 0x6f, 0x72, 0x67,
	0x55, 0x75, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55,
	0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02,
	0x10, 0x01, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12,
	0x1e, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x12,
	0x29, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0b, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x2f, 0x0a, 0x0e, 0x73, 0x75,
	0x62, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0e, 0x73, 0x75, 0x62,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x41, 0x0a, 0x17, 0x73,
	0x75, 0x62, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b,
	0x65, 0x79, 0x55, 0x75, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x17, 0x73, 0x75, 0x62, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x55, 0x75, 0x69, 0x64, 0x22, 0xe1,
	0x01, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x44, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x44, 0x6e, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x43, 0x0a, 0x06, 0x64, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x6f, 0x6e, 0x65,
	0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x44, 0x6e, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x2e, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x1a,
	0x80, 0x01, 0x0a, 0x06, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x6e, 0x73, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x6e, 0x73, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x22, 0xef, 0x02, 0x0a, 0x12, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x44, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x12, 0x23, 0x0a, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x55, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x72, 0x02, 0x10, 0x01, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x12, 0x21,
	0x0a, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69,
	0x64, 0x12, 0x29, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x75, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52,
	0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x0b,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x2f, 0x0a, 0x0e, 0x73, 0x75, 0x62, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0e, 0x73, 0x75, 0x62, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x41, 0x0a, 0x17, 0x73, 0x75, 0x62, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x55,
	0x75, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02,
	0x10, 0x01, 0x52, 0x17, 0x73, 0x75, 0x62, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x55, 0x75, 0x69, 0x64, 0x12, 0x27, 0x0a, 0x0a, 0x64,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0a, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x4e, 0x61, 0x6d, 0x65, 0x22, 0x2e, 0x0a, 0x14, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x44, 0x6e, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x22, 0xae, 0x03, 0x0a, 0x1b, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x44, 0x6e, 0x73, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x52, 0x65, 0x71, 0x12, 0x23, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x07, 0x6f, 0x72, 0x67,
	0x55, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72,
	0x02, 0x10, 0x01, 0x52, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x0b,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x75,
	0x69, 0x64, 0x12, 0x2f, 0x0a, 0x0e, 0x73, 0x75, 0x62, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x55, 0x75, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72,
	0x02, 0x10, 0x01, 0x52, 0x0e, 0x73, 0x75, 0x62, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55,
	0x75, 0x69, 0x64, 0x12, 0x41, 0x0a, 0x17, 0x73, 0x75, 0x62, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x55, 0x75, 0x69, 0x64, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x17, 0x73,
	0x75, 0x62, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b,
	0x65, 0x79, 0x55, 0x75, 0x69, 0x64, 0x12, 0x27, 0x0a, 0x0a, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72,
	0x02, 0x10, 0x01, 0x52, 0x0a, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6b,
	0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x65,
	0x79, 0x77, 0x6f, 0x72, 0x64, 0x22, 0xbf, 0x02, 0x0a, 0x1d, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6c,
	0x6f, 0x75, 0x64, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x44, 0x6e, 0x73, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x4b, 0x0a, 0x07, 0x72, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x6f, 0x75, 0x64,
	0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x44, 0x6e, 0x73, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x07, 0x72, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x73, 0x1a, 0xd0, 0x01, 0x0a, 0x06, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x64,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x72,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x72, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x74, 0x6c,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x74, 0x74, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x04, 0x6c, 0x6f, 0x63, 0x6b, 0x22, 0xf2, 0x03, 0x0a, 0x1a, 0x41, 0x64, 0x64, 0x43,
	0x6c, 0x6f, 0x75, 0x64, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x44, 0x4e, 0x53, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x12, 0x23, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x55, 0x75,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10,
	0x01, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x07, 0x6f,
	0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x12, 0x29,
	0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0b, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x0b, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x55, 0x75, 0x69, 0x64, 0x12, 0x2f, 0x0a, 0x0e, 0x73, 0x75, 0x62, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0e, 0x73, 0x75, 0x62, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x41, 0x0a, 0x17, 0x73, 0x75, 0x62, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x55, 0x75, 0x69, 0x64,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52,
	0x17, 0x73, 0x75, 0x62, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x4b, 0x65, 0x79, 0x55, 0x75, 0x69, 0x64, 0x12, 0x27, 0x0a, 0x0a, 0x64, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0a, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x17, 0x0a, 0x02, 0x72, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x02, 0x72, 0x72, 0x12, 0x1b, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10,
	0x01, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x74,
	0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x74, 0x74, 0x6c, 0x22, 0x36, 0x0a, 0x1c,
	0x41, 0x64, 0x64, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x44, 0x4e,
	0x53, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x22, 0x9c, 0x03, 0x0a, 0x1a, 0x44, 0x65, 0x6c, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x44, 0x4e, 0x53, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x52, 0x65, 0x71, 0x12, 0x23, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x07, 0x6f, 0x72, 0x67, 0x55,
	0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02,
	0x10, 0x01, 0x52, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x0b, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x55, 0x75, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x72, 0x02, 0x10, 0x01, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x75, 0x69,
	0x64, 0x12, 0x2f, 0x0a, 0x0e, 0x73, 0x75, 0x62, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55,
	0x75, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02,
	0x10, 0x01, 0x52, 0x0e, 0x73, 0x75, 0x62, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x75,
	0x69, 0x64, 0x12, 0x41, 0x0a, 0x17, 0x73, 0x75, 0x62, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x55, 0x75, 0x69, 0x64, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x17, 0x73, 0x75,
	0x62, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65,
	0x79, 0x55, 0x75, 0x69, 0x64, 0x12, 0x27, 0x0a, 0x0a, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02,
	0x10, 0x01, 0x52, 0x0a, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23,
	0x0a, 0x08, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x08, 0x72, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x49, 0x64, 0x22, 0x36, 0x0a, 0x1c, 0x44, 0x65, 0x6c, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x44,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x44, 0x4e, 0x53, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x9a, 0x04, 0x0a, 0x1d,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x44, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x44, 0x4e, 0x53, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x12, 0x23, 0x0a,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x55, 0x75,
	0x69, 0x64, 0x12, 0x21, 0x0a, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x07, 0x6f, 0x72,
	0x67, 0x55, 0x75, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x55, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72,
	0x02, 0x10, 0x01, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x75, 0x69, 0x64,
	0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64,
	0x12, 0x29, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0b,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x2f, 0x0a, 0x0e, 0x73,
	0x75, 0x62, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0e, 0x73, 0x75,
	0x62, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x41, 0x0a, 0x17,
	0x73, 0x75, 0x62, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x4b, 0x65, 0x79, 0x55, 0x75, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x17, 0x73, 0x75, 0x62, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x55, 0x75, 0x69, 0x64, 0x12,
	0x27, 0x0a, 0x0a, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0a, 0x64, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x08, 0x72, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72,
	0x02, 0x10, 0x01, 0x52, 0x08, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x64, 0x12, 0x17, 0x0a,
	0x02, 0x72, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02,
	0x10, 0x01, 0x52, 0x02, 0x72, 0x72, 0x12, 0x1b, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x74, 0x6c, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x03, 0x74, 0x74, 0x6c, 0x22, 0x39, 0x0a, 0x1f, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x44, 0x4e, 0x53,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x22, 0xc4, 0x05, 0x0a, 0x1b, 0x53, 0x79, 0x6e, 0x63, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x44, 0x6e, 0x73, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x52, 0x65, 0x71, 0x12, 0x23, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x07, 0x6f, 0x72, 0x67, 0x55,
	0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02,
	0x10, 0x01, 0x52, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x0b, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x10, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x49, 0x64, 0x12, 0x35, 0x0a, 0x11, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x11, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x3b, 0x0a, 0x14, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x53, 0x75, 0x62, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x75, 0x69,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01,
	0x52, 0x14, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x75, 0x62, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x4d, 0x0a, 0x1d, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x53, 0x75, 0x62, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x4b, 0x65, 0x79, 0x55, 0x75, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x1d, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x75,
	0x62, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65,
	0x79, 0x55, 0x75, 0x69, 0x64, 0x12, 0x33, 0x0a, 0x10, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x44,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x10, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x64, 0x65,
	0x73, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0e, 0x64, 0x65, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x49, 0x64, 0x12, 0x31, 0x0a, 0x0f, 0x64, 0x65, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x55, 0x75, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x72, 0x02, 0x10, 0x01, 0x52, 0x0f, 0x64, 0x65, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x37, 0x0a, 0x12, 0x64, 0x65, 0x73, 0x74, 0x53, 0x75, 0x62,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x12, 0x64, 0x65, 0x73, 0x74,
	0x53, 0x75, 0x62, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x49,
	0x0a, 0x1b, 0x64, 0x65, 0x73, 0x74, 0x53, 0x75, 0x62, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x55, 0x75, 0x69, 0x64, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x1b, 0x64, 0x65,
	0x73, 0x74, 0x53, 0x75, 0x62, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x4b, 0x65, 0x79, 0x55, 0x75, 0x69, 0x64, 0x12, 0x2f, 0x0a, 0x0e, 0x64, 0x65, 0x73,
	0x74, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0e, 0x64, 0x65, 0x73, 0x74,
	0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x37, 0x0a, 0x1d, 0x53, 0x79,
	0x6e, 0x63, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x44, 0x6e, 0x73,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x74,
	0x61, 0x73, 0x6b, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x73,
	0x6b, 0x49, 0x64, 0x22, 0xb4, 0x01, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x43,
	0x6c, 0x6f, 0x75, 0x64, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x44, 0x6e, 0x73, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x12, 0x23, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x55, 0x75,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10,
	0x01, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x07, 0x6f,
	0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x12, 0x29,
	0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0b, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x06, 0x74, 0x61, 0x73,
	0x6b, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02,
	0x10, 0x01, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x22, 0xd6, 0x03, 0x0a, 0x20, 0x47,
	0x65, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x44, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x44, 0x6e, 0x73, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x20, 0x0a, 0x0b, 0x73, 0x72, 0x63, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x72, 0x63, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x12, 0x26, 0x0a, 0x0e, 0x73, 0x72, 0x63, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55,
	0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x72, 0x63, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x2c, 0x0a, 0x11, 0x73, 0x72, 0x63,
	0x53, 0x75, 0x62, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x73, 0x72, 0x63, 0x53, 0x75, 0x62, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x72, 0x63, 0x44, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x73, 0x72, 0x63, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a,
	0x0c, 0x64, 0x65, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x12, 0x28, 0x0a, 0x0f, 0x64, 0x65, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x55, 0x75, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x64, 0x65, 0x73, 0x74,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x2e, 0x0a, 0x12, 0x64,
	0x65, 0x73, 0x74, 0x53, 0x75, 0x62, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x75, 0x69,
	0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x64, 0x65, 0x73, 0x74, 0x53, 0x75, 0x62,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x64,
	0x65, 0x73, 0x74, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x65, 0x73, 0x74, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x76, 0x65, 0x72, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6f, 0x76, 0x65, 0x72, 0x54,
	0x69, 0x6d, 0x65, 0x22, 0xbd, 0x01, 0x0a, 0x27, 0x47, 0x65, 0x74, 0x55, 0x6e, 0x53, 0x75, 0x70,
	0x70, 0x6f, 0x72, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x44, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x44, 0x6e, 0x73, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x12,
	0x23, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x55, 0x75, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x07,
	0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x55, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x75,
	0x69, 0x64, 0x12, 0x1f, 0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x06, 0x74, 0x61, 0x73,
	0x6b, 0x49, 0x64, 0x22, 0x94, 0x03, 0x0a, 0x29, 0x47, 0x65, 0x74, 0x55, 0x6e, 0x53, 0x75, 0x70,
	0x70, 0x6f, 0x72, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x44, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x44, 0x6e, 0x73, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0xa8, 0x01, 0x0a, 0x22, 0x75, 0x6e, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x53,
	0x79, 0x6e, 0x63, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x44, 0x6e,
	0x73, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x58,
	0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x55, 0x6e, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x44, 0x6e, 0x73, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x55, 0x6e, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74,
	0x53, 0x79, 0x6e, 0x63, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x44,
	0x6e, 0x73, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x22, 0x75, 0x6e, 0x53, 0x75, 0x70, 0x70,
	0x6f, 0x72, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x44, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x44, 0x6e, 0x73, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x1a, 0xbb, 0x01, 0x0a,
	0x21, 0x55, 0x6e, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x43, 0x6c,
	0x6f, 0x75, 0x64, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x44, 0x6e, 0x73, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x72, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x72, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x74, 0x74, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x74, 0x74, 0x6c, 0x12, 0x1a,
	0x0a, 0x08, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x22, 0xd5, 0x01, 0x0a, 0x11, 0x42,
	0x75, 0x79, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x12, 0x23, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x55, 0x75, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52,
	0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x55, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55,
	0x75, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x0d, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79,
	0x55, 0x75, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72,
	0x02, 0x10, 0x01, 0x52, 0x0d, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x55, 0x75,
	0x69, 0x64, 0x22, 0x15, 0x0a, 0x13, 0x42, 0x75, 0x79, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x40, 0x0a, 0x13, 0x50, 0x61, 0x72,
	0x73, 0x65, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x12, 0x29, 0x0a, 0x0b, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0b,
	0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x22, 0xdd, 0x01, 0x0a, 0x15,
	0x50, 0x61, 0x72, 0x73, 0x65, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x22, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x64, 0x6e, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x08, 0x64, 0x6e, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x73,
	0x75, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x73, 0x73, 0x75, 0x65,
	0x72, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x6f, 0x74, 0x41, 0x66, 0x74, 0x65, 0x72, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x6e, 0x6f, 0x74, 0x41, 0x66, 0x74, 0x65, 0x72, 0x12, 0x1c, 0x0a,
	0x09, 0x6e, 0x6f, 0x74, 0x42, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x6e, 0x6f, 0x74, 0x42, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x22, 0xcf, 0x01, 0x0a, 0x14,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x12, 0x23, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x07, 0x6f, 0x72, 0x67,
	0x55, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72,
	0x02, 0x10, 0x01, 0x52, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x0b,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x29, 0x0a, 0x0b, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01,
	0x52, 0x0b, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x22, 0x30, 0x0a,
	0x16, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22,
	0xc5, 0x01, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x23, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x55, 0x75,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10,
	0x01, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x07, 0x6f,
	0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x12, 0x29,
	0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0b, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x6f, 0x74,
	0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x6e, 0x6f,
	0x74, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x22, 0xad, 0x03, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74,
	0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x4f, 0x0a, 0x0b, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x65, 0x52, 0x0b, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x65, 0x1a, 0xc3, 0x02, 0x0a, 0x0b, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x65, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x70, 0x65, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a,
	0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65,
	0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e,
	0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12,
	0x22, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x64,
	0x6e, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64,
	0x6e, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xe6, 0x01, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x43,
	0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x23, 0x0a,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x55, 0x75,
	0x69, 0x64, 0x12, 0x21, 0x0a, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x07, 0x6f, 0x72,
	0x67, 0x55, 0x75, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x55, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72,
	0x02, 0x10, 0x01, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x75, 0x69, 0x64,
	0x12, 0x31, 0x0a, 0x0f, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x55,
	0x75, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02,
	0x10, 0x01, 0x52, 0x0f, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x55,
	0x75, 0x69, 0x64, 0x12, 0x2b, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02,
	0x10, 0x01, 0x52, 0x0c, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x22, 0x2d, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22,
	0x84, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x65, 0x42, 0x79, 0x55, 0x75, 0x69, 0x64, 0x52, 0x65, 0x71, 0x12, 0x21, 0x0a, 0x07, 0x6f,
	0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x12, 0x29,
	0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0b, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x04, 0x75, 0x75, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01,
	0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x22, 0xf3, 0x02, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x43, 0x65,
	0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x42, 0x79, 0x55, 0x75, 0x69, 0x64, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72, 0x67, 0x55,
	0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75,
	0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x75, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x55, 0x75, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x65, 0x6d, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x70, 0x65, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x65, 0x72, 0x69,
	0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x73, 0x75,
	0x65, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72,
	0x12, 0x1a, 0x0a, 0x08, 0x64, 0x6e, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x64, 0x6e, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xc4, 0x02, 0x0a,
	0x10, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x53, 0x53, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65,
	0x71, 0x12, 0x23, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01,
	0x52, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x0b, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x55, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x55, 0x75, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55,
	0x75, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02,
	0x10, 0x01, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12,
	0x2f, 0x0a, 0x0e, 0x73, 0x75, 0x62, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x75, 0x69,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01,
	0x52, 0x0e, 0x73, 0x75, 0x62, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x75, 0x69, 0x64,
	0x12, 0x41, 0x0a, 0x17, 0x73, 0x75, 0x62, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x55, 0x75, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x17, 0x73, 0x75, 0x62, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x55,
	0x75, 0x69, 0x64, 0x22, 0xd2, 0x01, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x53, 0x53, 0x42,
	0x75, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x3e, 0x0a, 0x06, 0x62, 0x75,
	0x63, 0x6b, 0x65, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6f, 0x6e, 0x65,
	0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x53, 0x53,
	0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x42, 0x75, 0x63, 0x6b,
	0x65, 0x74, 0x52, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x1a, 0x7c, 0x0a, 0x06, 0x42, 0x75,
	0x63, 0x6b, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x22, 0x83, 0x03, 0x0a, 0x12, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4f, 0x53, 0x53, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x12,
	0x23, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x55, 0x75, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x07,
	0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x55, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x75,
	0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x49, 0x64, 0x12, 0x29, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x75, 0x69,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01,
	0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x2f, 0x0a,
	0x0e, 0x73, 0x75, 0x62, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0e,
	0x73, 0x75, 0x62, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x41,
	0x0a, 0x17, 0x73, 0x75, 0x62, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x4b, 0x65, 0x79, 0x55, 0x75, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x17, 0x73, 0x75, 0x62, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x55, 0x75, 0x69,
	0x64, 0x12, 0x1b, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x2e,
	0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x53, 0x53, 0x42, 0x75, 0x63, 0x6b, 0x65,
	0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xc3,
	0x02, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4f, 0x53, 0x53, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x52,
	0x65, 0x71, 0x12, 0x23, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10,
	0x01, 0x52, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x0b, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x55, 0x75, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72,
	0x02, 0x10, 0x01, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x75, 0x69, 0x64,
	0x12, 0x2f, 0x0a, 0x0e, 0x73, 0x75, 0x62, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x75,
	0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10,
	0x01, 0x52, 0x0e, 0x73, 0x75, 0x62, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x75, 0x69,
	0x64, 0x12, 0x41, 0x0a, 0x17, 0x73, 0x75, 0x62, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x55, 0x75, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x17, 0x73, 0x75, 0x62,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79,
	0x55, 0x75, 0x69, 0x64, 0x22, 0x27, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x4f, 0x53, 0x53, 0x42, 0x75,
	0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xc3, 0x02,
	0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x4f, 0x53, 0x53, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65,
	0x71, 0x12, 0x23, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01,
	0x52, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x0b, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x55, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x55, 0x75, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55,
	0x75, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02,
	0x10, 0x01, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12,
	0x2f, 0x0a, 0x0e, 0x73, 0x75, 0x62, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x75, 0x69,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01,
	0x52, 0x0e, 0x73, 0x75, 0x62, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x75, 0x69, 0x64,
	0x12, 0x41, 0x0a, 0x17, 0x73, 0x75, 0x62, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x55, 0x75, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x17, 0x73, 0x75, 0x62, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x55,
	0x75, 0x69, 0x64, 0x22, 0x2b, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x4f, 0x53, 0x53, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x22, 0xc7, 0x02, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4f, 0x53, 0x53, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x65, 0x71, 0x12, 0x23, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x55, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72,
	0x02, 0x10, 0x01, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x12, 0x21, 0x0a,
	0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64,
	0x12, 0x29, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x75, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0b,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x0b, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x2f, 0x0a, 0x0e, 0x73, 0x75, 0x62, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0e, 0x73, 0x75, 0x62, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x41, 0x0a, 0x17, 0x73, 0x75, 0x62, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x55, 0x75,
	0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10,
	0x01, 0x52, 0x17, 0x73, 0x75, 0x62, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x55, 0x75, 0x69, 0x64, 0x22, 0x17, 0x0a, 0x15, 0x47, 0x65,
	0x74, 0x4f, 0x53, 0x53, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0xc7, 0x02, 0x0a, 0x13, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x4f,
	0x53, 0x53, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x12, 0x23, 0x0a, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64,
	0x12, 0x21, 0x0a, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x07, 0x6f, 0x72, 0x67, 0x55,
	0x75, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x75,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10,
	0x01, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x1e,
	0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x12, 0x29,
	0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0b, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x2f, 0x0a, 0x0e, 0x73, 0x75, 0x62,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0e, 0x73, 0x75, 0x62, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x41, 0x0a, 0x17, 0x73, 0x75,
	0x62, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65,
	0x79, 0x55, 0x75, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x72, 0x02, 0x10, 0x01, 0x52, 0x17, 0x73, 0x75, 0x62, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x55, 0x75, 0x69, 0x64, 0x22, 0x2f, 0x0a,
	0x15, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x4f, 0x53, 0x53, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xcd,
	0x01, 0x0a, 0x19, 0x41, 0x64, 0x64, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x50, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x23, 0x0a, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69,
	0x64, 0x12, 0x21, 0x0a, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x07, 0x6f, 0x72, 0x67,
	0x55, 0x75, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x06, 0x72,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x0a, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02,
	0x10, 0x01, 0x52, 0x0a, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x35,
	0x0a, 0x1b, 0x41, 0x64, 0x64, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x8c, 0x01, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x12, 0x23, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x07, 0x6f, 0x72, 0x67, 0x55,
	0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02,
	0x10, 0x01, 0x52, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x12, 0x27, 0x0a, 0x0a, 0x72,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x55, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0a, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x55, 0x75, 0x69, 0x64, 0x22, 0x35, 0x0a, 0x1b, 0x44, 0x65, 0x6c, 0x43, 0x6c, 0x6f, 0x75, 0x64,
	0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x84, 0x01, 0x0a, 0x1a,
	0x4c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x23, 0x0a, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x12,
	0x21, 0x0a, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75,
	0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x49, 0x64, 0x22, 0xf1, 0x01, 0x0a, 0x1c, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x6f, 0x75, 0x64,
	0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x48, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x50, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x52,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x1a, 0x86, 0x01,
	0x0a, 0x06, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x06,
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x0a,
	0x0a, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0a, 0x72, 0x65, 0x67, 0x69,
	0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xa5, 0x01, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x41, 0x63, 0x6d, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12,
	0x23, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x55, 0x75, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x07,
	0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x55, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x75,
	0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x22, 0x18,
	0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x6d, 0x65, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0xb4, 0x01, 0x0a, 0x14, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x41, 0x63, 0x6d, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x12, 0x23, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01,
	0x52, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x0b, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x55, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x55, 0x75, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55,
	0x75, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02,
	0x10, 0x01, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x22,
	0x18, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x63, 0x6d, 0x65, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0xb1, 0x02, 0x0a, 0x0b, 0x41, 0x63,
	0x6d, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x55, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x55, 0x75, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x55, 0x75, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x12,
	0x32, 0x0a, 0x14, 0x74, 0x65, 0x72, 0x6d, 0x73, 0x4f, 0x66, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x41, 0x67, 0x72, 0x65, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x74,
	0x65, 0x72, 0x6d, 0x73, 0x4f, 0x66, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x67, 0x72,
	0x65, 0x65, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65,
	0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65,
	0x4b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x72, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x1e, 0x0a,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x87, 0x01,
	0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x63, 0x6d, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x12, 0x23, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x07, 0x6f, 0x72, 0x67,
	0x55, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72,
	0x02, 0x10, 0x01, 0x52, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x0b,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x55, 0x75, 0x69, 0x64, 0x22, 0x4c, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x41,
	0x63, 0x6d, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x34, 0x0a, 0x08, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x63, 0x6d, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x08, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x73, 0x22, 0xcc, 0x01, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x41, 0x63, 0x6d, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x23, 0x0a, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69,
	0x64, 0x12, 0x21, 0x0a, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x07, 0x6f, 0x72, 0x67,
	0x55, 0x75, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55,
	0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02,
	0x10, 0x01, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12,
	0x29, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0b, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x73, 0x22, 0x16, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63,
	0x6d, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0xbd, 0x03, 0x0a,
	0x09, 0x41, 0x63, 0x6d, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x20,
	0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x75, 0x69, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x55, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x55, 0x72, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x6f, 0x74, 0x42,
	0x65, 0x66, 0x6f, 0x72, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x6f, 0x74,
	0x42, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x6f, 0x74, 0x41, 0x66, 0x74,
	0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x6f, 0x74, 0x41, 0x66, 0x74,
	0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1a, 0x0a, 0x08,
	0x66, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x66, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x69, 0x76,
	0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72,
	0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x73, 0x72, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x73, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x65,
	0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xa7, 0x01, 0x0a,
	0x10, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x63, 0x6d, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x12, 0x23, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01,
	0x52, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x0b, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x55, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x55, 0x75, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55,
	0x75, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x22, 0x44, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x63,
	0x6d, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2e, 0x0a, 0x06,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6f,
	0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x6d, 0x65, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x52, 0x06, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x22, 0xab, 0x01, 0x0a,
	0x0f, 0x47, 0x65, 0x74, 0x41, 0x63, 0x6d, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x12, 0x23, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x55, 0x75, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52,
	0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x55, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55,
	0x75, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52,
	0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x22, 0x41, 0x0a, 0x11, 0x47, 0x65,
	0x74, 0x41, 0x63, 0x6d, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x2c, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x6d,
	0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x22, 0xf1, 0x01,
	0x0a, 0x16, 0x41, 0x63, 0x6d, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x77, 0x69,
	0x6c, 0x64, 0x63, 0x61, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x77, 0x69,
	0x6c, 0x64, 0x63, 0x61, 0x72, 0x64, 0x12, 0x3f, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65,
	0x6e, 0x67, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6f, 0x6e, 0x65,
	0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x6d, 0x65, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x52, 0x0a, 0x63, 0x68, 0x61,
	0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x73, 0x12, 0x48, 0x0a, 0x0d, 0x64, 0x6e, 0x73, 0x43, 0x68,
	0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22,
	0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x6d,
	0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x6e, 0x73, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e,
	0x67, 0x65, 0x52, 0x0d, 0x64, 0x6e, 0x73, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65,
	0x73, 0x22, 0x86, 0x01, 0x0a, 0x12, 0x41, 0x63, 0x6d, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43,
	0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1c, 0x0a, 0x09,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x64, 0x22, 0xbb, 0x01, 0x0a, 0x15, 0x41,
	0x63, 0x6d, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x6e, 0x73, 0x43, 0x68, 0x61, 0x6c, 0x6c,
	0x65, 0x6e, 0x67, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x71, 0x64, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x66, 0x71, 0x64, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xb9, 0x01, 0x0a, 0x1d, 0x47, 0x65, 0x74,
	0x41, 0x63, 0x6d, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x12, 0x23, 0x0a, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x12,
	0x21, 0x0a, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75,
	0x69, 0x64, 0x12, 0x29, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x75, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01,
	0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x25, 0x0a,
	0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x55, 0x75, 0x69, 0x64, 0x22, 0x6e, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x41, 0x63, 0x6d, 0x65, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x4b, 0x0a, 0x0e, 0x61, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x23, 0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63,
	0x6d, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x22, 0xb5, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x41, 0x63, 0x6d, 0x65,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x12, 0x23, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10,
	0x01, 0x52, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x0b, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x55, 0x75,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10,
	0x01, 0x52, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x22, 0x6a, 0x0a, 0x1b,
	0x47, 0x65, 0x74, 0x41, 0x63, 0x6d, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6c,
	0x6c, 0x65, 0x6e, 0x67, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x4b, 0x0a, 0x0e, 0x61,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x63, 0x6d, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xb0, 0x01, 0x0a, 0x14, 0x46, 0x69, 0x6e,
	0x61, 0x6c, 0x69, 0x7a, 0x65, 0x41, 0x63, 0x6d, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x12, 0x23, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01,
	0x52, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x0b, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x55, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x55, 0x75, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x55, 0x75, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01,
	0x52, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x22, 0x46, 0x0a, 0x16, 0x46,
	0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x41, 0x63, 0x6d, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2c, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x63, 0x6d, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x05, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x22, 0xb6, 0x01, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x41, 0x63, 0x6d, 0x65, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x12, 0x23, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10,
	0x01, 0x52, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x0b, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x55, 0x75,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10,
	0x01, 0x52, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x22, 0x4c, 0x0a, 0x1c,
	0x47, 0x65, 0x74, 0x41, 0x63, 0x6d, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x65, 0x72, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2c, 0x0a, 0x05,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6f, 0x6e,
	0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x6d, 0x65, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x32, 0x83, 0x3d, 0x0a, 0x08, 0x6f,
	0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x12, 0x63, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x53,
	0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x23,
	0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x52, 0x65, 0x71, 0x1a, 0x25, 0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x0c,
	0x4c, 0x69, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x1c, 0x2e, 0x6f,
	0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x6f, 0x6e, 0x65,
	0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x60, 0x0a, 0x12,
	0x41, 0x64, 0x64, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x22, 0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x64, 0x64, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x63,
	0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x23, 0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x25, 0x2e, 0x6f, 0x6e, 0x65,
	0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x00, 0x12, 0x60, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x2e, 0x6f, 0x6e, 0x65, 0x43,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x50, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e,
	0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x50,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x69, 0x0a, 0x15, 0x41, 0x64, 0x64, 0x50, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x53, 0x75, 0x62, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x25,
	0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64,
	0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x53, 0x75, 0x62, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x27, 0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x53,
	0x75, 0x62, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00,
	0x12, 0x6c, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x53, 0x75, 0x62, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x26, 0x2e, 0x6f, 0x6e, 0x65,
	0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x53, 0x75, 0x62, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x1a, 0x28, 0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x53, 0x75, 0x62,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x69,
	0x0a, 0x15, 0x44, 0x65, 0x6c, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x53, 0x75, 0x62,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x25, 0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x53, 0x75, 0x62, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x27,
	0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c,
	0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x53, 0x75, 0x62, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x57, 0x0a, 0x0f, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x12, 0x1f, 0x2e, 0x6f,
	0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x21, 0x2e,
	0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x00, 0x12, 0x4e, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b,
	0x65, 0x79, 0x12, 0x1c, 0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71,
	0x1a, 0x1e, 0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x00, 0x12, 0x4e, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b,
	0x65, 0x79, 0x12, 0x1c, 0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x44, 0x65, 0x6c, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71,
	0x1a, 0x1e, 0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x44,
	0x65, 0x6c, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x00, 0x12, 0x5a, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74,
	0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x20, 0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69,
	0x74, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0xab,
	0x01, 0x0a, 0x2b, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x50, 0x75, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x3b,
	0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x50,
	0x75, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x3d, 0x2e, 0x6f, 0x6e,
	0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x53,
	0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x50, 0x75, 0x74, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x54, 0x0a, 0x0e,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x1e,
	0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x20,
	0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x00, 0x12, 0x54, 0x0a, 0x0e, 0x42, 0x75, 0x79, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x76, 0x31, 0x2e, 0x42, 0x75, 0x79, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x76, 0x31, 0x2e, 0x42, 0x75, 0x79, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x5a, 0x0a, 0x10, 0x50, 0x61, 0x72, 0x73,
	0x65, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x12, 0x20, 0x2e, 0x6f,
	0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x72, 0x73, 0x65,
	0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x22,
	0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x72,
	0x73, 0x65, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x00, 0x12, 0x5d, 0x0a, 0x11, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x43, 0x65,
	0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x12, 0x21, 0x2e, 0x6f, 0x6e, 0x65, 0x43,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x43, 0x65,
	0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x6f,
	0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x00, 0x12, 0x57, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x65, 0x72, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x21, 0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x54, 0x0a, 0x0e,
	0x44, 0x65, 0x6c, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x12, 0x1e,
	0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c,
	0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x20,
	0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c,
	0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x00, 0x12, 0x66, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x65, 0x42, 0x79, 0x55, 0x75, 0x69, 0x64, 0x12, 0x24, 0x2e, 0x6f, 0x6e, 0x65,
	0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x65, 0x72, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x42, 0x79, 0x55, 0x75, 0x69, 0x64, 0x52, 0x65, 0x71,
	0x1a, 0x26, 0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x42, 0x79, 0x55,
	0x75, 0x69, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x51, 0x0a, 0x0d, 0x4c, 0x69,
	0x73, 0x74, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x44, 0x6e, 0x73, 0x12, 0x1d, 0x2e, 0x6f, 0x6e,
	0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x44, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x6f, 0x6e, 0x65,
	0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x44, 0x6e, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x60, 0x0a,
	0x12, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x44, 0x6e, 0x73, 0x12, 0x22, 0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x44, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x44, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x44,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x44, 0x6e, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12,
	0x57, 0x0a, 0x0f, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x44,
	0x6e, 0x73, 0x12, 0x1f, 0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x44, 0x6e, 0x73,
	0x52, 0x65, 0x71, 0x1a, 0x21, 0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x44, 0x6e,
	0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x72, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74,
	0x43, 0x6c, 0x6f, 0x75, 0x64, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x44, 0x6e, 0x73, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x12, 0x28, 0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x44, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x44, 0x6e, 0x73, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x2a,
	0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x44, 0x6e, 0x73, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x72, 0x0a, 0x18,
	0x53, 0x79, 0x6e, 0x63, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x44,
	0x6e, 0x73, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x28, 0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x43, 0x6c, 0x6f, 0x75, 0x64,
	0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x44, 0x6e, 0x73, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52,
	0x65, 0x71, 0x1a, 0x2a, 0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x79, 0x6e, 0x63, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x44, 0x6e, 0x73, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00,
	0x12, 0x7b, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x43, 0x6c, 0x6f, 0x75, 0x64,
	0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x44, 0x6e, 0x73, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12,
	0x2b, 0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x53, 0x79, 0x6e, 0x63, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x44, 0x6e, 0x73, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x2d, 0x2e, 0x6f,
	0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x79,
	0x6e, 0x63, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x44, 0x6e, 0x73,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x96, 0x01,
	0x0a, 0x24, 0x47, 0x65, 0x74, 0x55, 0x6e, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x79,
	0x6e, 0x63, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x44, 0x6e, 0x73,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x34, 0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x6e, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72,
	0x74, 0x53, 0x79, 0x6e, 0x63, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x44, 0x6e, 0x73, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x36, 0x2e, 0x6f,
	0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x6e,
	0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x43, 0x6c, 0x6f, 0x75, 0x64,
	0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x44, 0x6e, 0x73, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x45, 0x43, 0x53,
	0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x12, 0x1c, 0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x43, 0x53, 0x46, 0x61, 0x6d, 0x69, 0x6c,
	0x79, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x43, 0x53, 0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x45, 0x43, 0x53, 0x12, 0x19, 0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x43, 0x53, 0x52, 0x65, 0x71, 0x1a, 0x1b,
	0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x45, 0x43, 0x53, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x47, 0x0a,
	0x09, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x43, 0x53, 0x12, 0x1a, 0x2e, 0x6f, 0x6e, 0x65,
	0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65,
	0x45, 0x43, 0x53, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x45, 0x43, 0x53, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x45, 0x43, 0x53, 0x12, 0x19, 0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x43, 0x53, 0x52, 0x65, 0x71, 0x1a, 0x1b,
	0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x45, 0x43, 0x53, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x4b, 0x0a,
	0x0b, 0x53, 0x68, 0x75, 0x74, 0x64, 0x6f, 0x77, 0x6e, 0x45, 0x43, 0x53, 0x12, 0x1b, 0x2e, 0x6f,
	0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x68, 0x75, 0x74, 0x64,
	0x6f, 0x77, 0x6e, 0x45, 0x43, 0x53, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x6f, 0x6e, 0x65, 0x43,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x68, 0x75, 0x74, 0x64, 0x6f, 0x77, 0x6e,
	0x45, 0x43, 0x53, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x3c, 0x0a, 0x06, 0x47, 0x65,
	0x74, 0x45, 0x43, 0x53, 0x12, 0x16, 0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x43, 0x53, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x6f,
	0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x43,
	0x53, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x45, 0x49, 0x50, 0x12, 0x19, 0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x49, 0x50, 0x52, 0x65, 0x71,
	0x1a, 0x1b, 0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x49, 0x50, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12,
	0x3c, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x45, 0x49, 0x50, 0x12, 0x16, 0x2e, 0x6f, 0x6e, 0x65, 0x43,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x49, 0x50, 0x52, 0x65,
	0x71, 0x1a, 0x18, 0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x45, 0x49, 0x50, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x45, 0x0a,
	0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x49, 0x50, 0x12, 0x19, 0x2e, 0x6f, 0x6e, 0x65,
	0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45,
	0x49, 0x50, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x49, 0x50, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x0a, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x45,
	0x49, 0x50, 0x12, 0x1a, 0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x45, 0x49, 0x50, 0x52, 0x65, 0x71, 0x1a, 0x1c,
	0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6c,
	0x65, 0x61, 0x73, 0x65, 0x45, 0x49, 0x50, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x45,
	0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x44, 0x53, 0x12, 0x19, 0x2e, 0x6f, 0x6e,
	0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x44, 0x53, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x44, 0x53, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x3c, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x52, 0x44, 0x53, 0x12,
	0x16, 0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x52, 0x44, 0x53, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x44, 0x53, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x00, 0x12, 0x3f, 0x0a, 0x07, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x44, 0x53, 0x12, 0x17,
	0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x44, 0x53, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x44, 0x53, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x00, 0x12, 0x57, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x44, 0x53, 0x53,
	0x6c, 0x6f, 0x77, 0x4c, 0x6f, 0x67, 0x73, 0x12, 0x1f, 0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x44, 0x53, 0x53, 0x6c, 0x6f,
	0x77, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x21, 0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x44, 0x53, 0x53, 0x6c,
	0x6f, 0x77, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x54, 0x0a,
	0x0e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x44, 0x53, 0x45, 0x72, 0x72, 0x4c, 0x6f, 0x67, 0x73, 0x12,
	0x1e, 0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x44, 0x53, 0x45, 0x72, 0x72, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x71, 0x1a,
	0x20, 0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x44, 0x53, 0x45, 0x72, 0x72, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x00, 0x12, 0x42, 0x0a, 0x08, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x42, 0x12,
	0x18, 0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4c, 0x42, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x6f, 0x6e, 0x65, 0x43,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x42,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x39, 0x0a, 0x05, 0x47, 0x65, 0x74, 0x4c, 0x42,
	0x12, 0x15, 0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x4c, 0x42, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x42, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x00, 0x12, 0x45, 0x0a, 0x09, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x4c, 0x42, 0x12,
	0x19, 0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65,
	0x6c, 0x65, 0x61, 0x73, 0x65, 0x4c, 0x42, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x6f, 0x6e, 0x65,
	0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65,
	0x4c, 0x42, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x3f, 0x0a, 0x07, 0x4c, 0x69, 0x73,
	0x74, 0x43, 0x44, 0x4e, 0x12, 0x17, 0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x44, 0x4e, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e,
	0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x43, 0x44, 0x4e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x3c, 0x0a, 0x06, 0x41, 0x64,
	0x64, 0x43, 0x44, 0x4e, 0x12, 0x16, 0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x44, 0x4e, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x6f,
	0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x44,
	0x4e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x09, 0x49, 0x6d, 0x70, 0x6f,
	0x72, 0x74, 0x43, 0x44, 0x4e, 0x12, 0x19, 0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x44, 0x4e, 0x52, 0x65, 0x71,
	0x1a, 0x1b, 0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x49,
	0x6d, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x44, 0x4e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12,
	0x3c, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x43, 0x44, 0x4e, 0x12, 0x16, 0x2e, 0x6f, 0x6e, 0x65, 0x43,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x44, 0x4e, 0x52, 0x65,
	0x71, 0x1a, 0x18, 0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x43, 0x44, 0x4e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x48, 0x0a,
	0x0a, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x43, 0x44, 0x4e, 0x12, 0x1a, 0x2e, 0x6f, 0x6e,
	0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73,
	0x65, 0x43, 0x44, 0x4e, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x43, 0x44, 0x4e,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x43, 0x44, 0x4e, 0x12, 0x19, 0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x44, 0x4e, 0x52, 0x65, 0x71, 0x1a,
	0x1b, 0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x43, 0x44, 0x4e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x57,
	0x0a, 0x0f, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x43, 0x44, 0x4e, 0x43, 0x61, 0x63, 0x68,
	0x65, 0x12, 0x1f, 0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x43, 0x44, 0x4e, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52,
	0x65, 0x71, 0x1a, 0x21, 0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x43, 0x44, 0x4e, 0x43, 0x61, 0x63, 0x68, 0x65,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x43, 0x44,
	0x4e, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x12, 0x1b, 0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x44, 0x4e, 0x51, 0x75, 0x6f, 0x74, 0x61,
	0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x44, 0x4e, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x00, 0x12, 0x3f, 0x0a, 0x07, 0x49, 0x73, 0x43, 0x64, 0x6e, 0x49, 0x70, 0x12,
	0x17, 0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x73,
	0x43, 0x64, 0x6e, 0x49, 0x70, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x73, 0x43, 0x64, 0x6e, 0x49, 0x70, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x54, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x43, 0x64, 0x6e, 0x49,
	0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x64, 0x6e, 0x49, 0x70, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x64, 0x6e, 0x49, 0x70, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x63, 0x0a, 0x13, 0x47,
	0x65, 0x74, 0x43, 0x64, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x23, 0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x43, 0x64, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x25, 0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x64, 0x6e, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00,
	0x12, 0x51, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x53, 0x53, 0x42, 0x75, 0x63, 0x6b, 0x65,
	0x74, 0x12, 0x1d, 0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x4f, 0x53, 0x53, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71,
	0x1a, 0x1f, 0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x4f, 0x53, 0x53, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x00, 0x12, 0x57, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x53, 0x53,
	0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x1f, 0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x53, 0x53, 0x42, 0x75,
	0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x21, 0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x53, 0x53, 0x42,
	0x75, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x0c,
	0x47, 0x65, 0x74, 0x4f, 0x53, 0x53, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x1c, 0x2e, 0x6f,
	0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x53,
	0x53, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x6f, 0x6e, 0x65,
	0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x53, 0x53, 0x42,
	0x75, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x0c,
	0x44, 0x65, 0x6c, 0x4f, 0x53, 0x53, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x1c, 0x2e, 0x6f,
	0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x4f, 0x53,
	0x53, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x6f, 0x6e, 0x65,
	0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x4f, 0x53, 0x53, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x5a, 0x0a, 0x10,
	0x47, 0x65, 0x74, 0x4f, 0x53, 0x53, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x74, 0x61,
	0x12, 0x20, 0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x4f, 0x53, 0x53, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x52,
	0x65, 0x71, 0x1a, 0x22, 0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x4f, 0x53, 0x53, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x74,
	0x61, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x5a, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x4f, 0x53, 0x53, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x20, 0x2e, 0x6f,
	0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x4f, 0x53, 0x53, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x22,
	0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x4f, 0x53, 0x53, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x00, 0x12, 0xa5, 0x01, 0x0a, 0x29, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x53, 0x65, 0x63, 0x75,
	0x72, 0x69, 0x74, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x6f, 0x72, 0x12, 0x39, 0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x3b, 0x2e,
	0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x53,
	0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x47, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0xa2, 0x01, 0x0a,
	0x28, 0x45, 0x78, 0x69, 0x73, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x38, 0x2e, 0x6f, 0x6e, 0x65, 0x43,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69,
	0x74, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x52, 0x65, 0x71, 0x1a, 0x3a, 0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x00, 0x12, 0x9c, 0x01, 0x0a, 0x26, 0x47, 0x65, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x36, 0x2e, 0x6f,
	0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x53, 0x65, 0x63, 0x75, 0x72,
	0x69, 0x74, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x52, 0x65, 0x71, 0x1a, 0x38, 0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00,
	0x12, 0x9c, 0x01, 0x0a, 0x26, 0x44, 0x65, 0x6c, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x36, 0x2e, 0x6f, 0x6e,
	0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69,
	0x74, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x52, 0x65, 0x71, 0x1a, 0x38, 0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x44, 0x65, 0x6c, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x47,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12,
	0x9f, 0x01, 0x0a, 0x27, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x37, 0x2e, 0x6f, 0x6e,
	0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x53, 0x65, 0x63, 0x75, 0x72,
	0x69, 0x74, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x52, 0x65, 0x71, 0x1a, 0x39, 0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x00, 0x12, 0x96, 0x01, 0x0a, 0x24, 0x47, 0x65, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x42, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x34, 0x2e, 0x6f, 0x6e, 0x65,
	0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74,
	0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71,
	0x1a, 0x36, 0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x53,
	0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x79, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0xa2, 0x01, 0x0a, 0x28, 0x47,
	0x65, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x53,
	0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x79, 0x47, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x38, 0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x42, 0x79, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65,
	0x71, 0x1a, 0x3a, 0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x79, 0x47,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12,
	0x6f, 0x0a, 0x19, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x67, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x50, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x2e, 0x6f,
	0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x6c,
	0x6f, 0x75, 0x64, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x1a, 0x28, 0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x50, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00,
	0x12, 0x6f, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x4f, 0x72, 0x67, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x50,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x2e,
	0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x43,
	0x6c, 0x6f, 0x75, 0x64, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x65, 0x67, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x28, 0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x50, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x00, 0x12, 0x72, 0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12,
	0x27, 0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x52,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x29, 0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x6f, 0x75, 0x64,
	0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x5d, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41,
	0x63, 0x6d, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x2e, 0x6f, 0x6e, 0x65,
	0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41,
	0x63, 0x6d, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e,
	0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x41, 0x63, 0x6d, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x00, 0x12, 0x5d, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x63,
	0x6d, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x2e, 0x6f, 0x6e, 0x65, 0x43,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x63,
	0x6d, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x6f,
	0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x41, 0x63, 0x6d, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x00, 0x12, 0x57, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x63, 0x6d, 0x65, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x63, 0x6d, 0x65, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x21, 0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x63, 0x6d, 0x65, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x57, 0x0a, 0x0f,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x6d, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12,
	0x1f, 0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x6d, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x1a, 0x21, 0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x6d, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x51, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x63, 0x6d,
	0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1d, 0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x63, 0x6d, 0x65, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x63, 0x6d, 0x65, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x41,
	0x63, 0x6d, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1c, 0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x6d, 0x65, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x6d, 0x65, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x78, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x41,
	0x63, 0x6d, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2a, 0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x6d, 0x65, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x71, 0x1a, 0x2c, 0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x6d, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x00, 0x12, 0x6c, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x41, 0x63, 0x6d, 0x65, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x73, 0x12, 0x26, 0x2e, 0x6f,
	0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63,
	0x6d, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x1a, 0x28, 0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x6d, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43,
	0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00,
	0x12, 0x5d, 0x0a, 0x11, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x41, 0x63, 0x6d, 0x65,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x21, 0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x41, 0x63, 0x6d, 0x65,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x41,
	0x63, 0x6d, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12,
	0x6f, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x41, 0x63, 0x6d, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43,
	0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x12, 0x27, 0x2e, 0x6f, 0x6e, 0x65,
	0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x6d, 0x65,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x1a, 0x29, 0x2e, 0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x6d, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x65,
	0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00,
	0x42, 0x1d, 0x5a, 0x1b, 0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x6f, 0x6e, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_oneCloud_v1_oneCloud_proto_rawDescOnce sync.Once
	file_oneCloud_v1_oneCloud_proto_rawDescData = file_oneCloud_v1_oneCloud_proto_rawDesc
)

func file_oneCloud_v1_oneCloud_proto_rawDescGZIP() []byte {
	file_oneCloud_v1_oneCloud_proto_rawDescOnce.Do(func() {
		file_oneCloud_v1_oneCloud_proto_rawDescData = protoimpl.X.CompressGZIP(file_oneCloud_v1_oneCloud_proto_rawDescData)
	})
	return file_oneCloud_v1_oneCloud_proto_rawDescData
}

var file_oneCloud_v1_oneCloud_proto_msgTypes = make([]protoimpl.MessageInfo, 195)
var file_oneCloud_v1_oneCloud_proto_goTypes = []interface{}{
	(*ListSupportPlatformReq)(nil),                                 // 0: oneCloud.v1.ListSupportPlatformReq
	(*ListSupportPlatformReply)(nil),                               // 1: oneCloud.v1.ListSupportPlatformReply
	(*ListPlatformReq)(nil),                                        // 2: oneCloud.v1.ListPlatformReq
	(*ListPlatformReply)(nil),                                      // 3: oneCloud.v1.ListPlatformReply
	(*AddPlatformAccountReq)(nil),                                  // 4: oneCloud.v1.AddPlatformAccountReq
	(*AddPlatformAccountReply)(nil),                                // 5: oneCloud.v1.AddPlatformAccountReply
	(*ListPlatformAccountReq)(nil),                                 // 6: oneCloud.v1.ListPlatformAccountReq
	(*ListPlatformAccountReply)(nil),                               // 7: oneCloud.v1.ListPlatformAccountReply
	(*DelPlatformAccountReq)(nil),                                  // 8: oneCloud.v1.DelPlatformAccountReq
	(*DelPlatformAccountReply)(nil),                                // 9: oneCloud.v1.DelPlatformAccountReply
	(*AddPlatformSubAccountReq)(nil),                               // 10: oneCloud.v1.AddPlatformSubAccountReq
	(*AddPlatformSubAccountReply)(nil),                             // 11: oneCloud.v1.AddPlatformSubAccountReply
	(*ListPlatformSubAccountReq)(nil),                              // 12: oneCloud.v1.ListPlatformSubAccountReq
	(*ListPlatformSubAccountReply)(nil),                            // 13: oneCloud.v1.ListPlatformSubAccountReply
	(*DelPlatformSubAccountReq)(nil),                               // 14: oneCloud.v1.DelPlatformSubAccountReq
	(*DelPlatformSubAccountReply)(nil),                             // 15: oneCloud.v1.DelPlatformSubAccountReply
	(*CreateAccessKeyReq)(nil),                                     // 16: oneCloud.v1.CreateAccessKeyReq
	(*CreateAccessKeyReply)(nil),                                   // 17: oneCloud.v1.CreateAccessKeyReply
	(*GetAccessKeyReq)(nil),                                        // 18: oneCloud.v1.GetAccessKeyReq
	(*GetAccessKeyReply)(nil),                                      // 19: oneCloud.v1.GetAccessKeyReply
	(*DelAccessKeyReq)(nil),                                        // 20: oneCloud.v1.DelAccessKeyReq
	(*DelAccessKeyReply)(nil),                                      // 21: oneCloud.v1.DelAccessKeyReply
	(*GetSecurityTokenReq)(nil),                                    // 22: oneCloud.v1.GetSecurityTokenReq
	(*GetSecurityTokenReply)(nil),                                  // 23: oneCloud.v1.GetSecurityTokenReply
	(*CreateObjectStorageSecurityTokenGeneratorReq)(nil),           // 24: oneCloud.v1.CreateObjectStorageSecurityTokenGeneratorReq
	(*CreateObjectStorageSecurityTokenGeneratorReply)(nil),         // 25: oneCloud.v1.CreateObjectStorageSecurityTokenGeneratorReply
	(*ExistObjectStorageSecurityTokenGeneratorReq)(nil),            // 26: oneCloud.v1.ExistObjectStorageSecurityTokenGeneratorReq
	(*ExistObjectStorageSecurityTokenGeneratorReply)(nil),          // 27: oneCloud.v1.ExistObjectStorageSecurityTokenGeneratorReply
	(*GetObjectStorageSecurityTokenGeneratorReq)(nil),              // 28: oneCloud.v1.GetObjectStorageSecurityTokenGeneratorReq
	(*GetObjectStorageSecurityTokenGeneratorReply)(nil),            // 29: oneCloud.v1.GetObjectStorageSecurityTokenGeneratorReply
	(*DelObjectStorageSecurityTokenGeneratorReq)(nil),              // 30: oneCloud.v1.DelObjectStorageSecurityTokenGeneratorReq
	(*DelObjectStorageSecurityTokenGeneratorReply)(nil),            // 31: oneCloud.v1.DelObjectStorageSecurityTokenGeneratorReply
	(*ListObjectStorageSecurityTokenGeneratorReq)(nil),             // 32: oneCloud.v1.ListObjectStorageSecurityTokenGeneratorReq
	(*ListObjectStorageSecurityTokenGeneratorReply)(nil),           // 33: oneCloud.v1.ListObjectStorageSecurityTokenGeneratorReply
	(*GetObjectStorageSecurityTokenByGeneratorReq)(nil),            // 34: oneCloud.v1.GetObjectStorageSecurityTokenByGeneratorReq
	(*GetObjectStorageSecurityTokenByGeneratorReply)(nil),          // 35: oneCloud.v1.GetObjectStorageSecurityTokenByGeneratorReply
	(*GetObjectStorageSecurityTokenByTokenReq)(nil),                // 36: oneCloud.v1.GetObjectStorageSecurityTokenByTokenReq
	(*GetObjectStorageSecurityTokenByTokenReply)(nil),              // 37: oneCloud.v1.GetObjectStorageSecurityTokenByTokenReply
	(*GenerateObjectStorageSecurityTokenPutPolicyReq)(nil),         // 38: oneCloud.v1.GenerateObjectStorageSecurityTokenPutPolicyReq
	(*GenerateObjectStorageSecurityTokenPutPolicyReply)(nil),       // 39: oneCloud.v1.GenerateObjectStorageSecurityTokenPutPolicyReply
	(*AccountBalanceReq)(nil),                                      // 40: oneCloud.v1.AccountBalanceReq
	(*AccountBalanceReply)(nil),                                    // 41: oneCloud.v1.AccountBalanceReply
	(*GetECSFamilyReq)(nil),                                        // 42: oneCloud.v1.GetECSFamilyReq
	(*GetECSFamilyReply)(nil),                                      // 43: oneCloud.v1.GetECSFamilyReply
	(*GetECSReq)(nil),                                              // 44: oneCloud.v1.GetECSReq
	(*GetECSReply)(nil),                                            // 45: oneCloud.v1.GetECSReply
	(*CreateECSReq)(nil),                                           // 46: oneCloud.v1.CreateECSReq
	(*CreateECSReply)(nil),                                         // 47: oneCloud.v1.CreateECSReply
	(*ReleaseECSReq)(nil),                                          // 48: oneCloud.v1.ReleaseECSReq
	(*ReleaseECSReply)(nil),                                        // 49: oneCloud.v1.ReleaseECSReply
	(*UpdateECSReq)(nil),                                           // 50: oneCloud.v1.UpdateECSReq
	(*UpdateECSReply)(nil),                                         // 51: oneCloud.v1.UpdateECSReply
	(*ShutdownECSReq)(nil),                                         // 52: oneCloud.v1.ShutdownECSReq
	(*ShutdownECSReply)(nil),                                       // 53: oneCloud.v1.ShutdownECSReply
	(*CreateEIPReq)(nil),                                           // 54: oneCloud.v1.CreateEIPReq
	(*CreateEIPReply)(nil),                                         // 55: oneCloud.v1.CreateEIPReply
	(*GetEIPReq)(nil),                                              // 56: oneCloud.v1.GetEIPReq
	(*GetEIPReply)(nil),                                            // 57: oneCloud.v1.GetEIPReply
	(*UpdateEIPReq)(nil),                                           // 58: oneCloud.v1.UpdateEIPReq
	(*UpdateEIPReply)(nil),                                         // 59: oneCloud.v1.UpdateEIPReply
	(*ReleaseEIPReq)(nil),                                          // 60: oneCloud.v1.ReleaseEIPReq
	(*ReleaseEIPReply)(nil),                                        // 61: oneCloud.v1.ReleaseEIPReply
	(*CreateRDSReq)(nil),                                           // 62: oneCloud.v1.CreateRDSReq
	(*CreateRDSReply)(nil),                                         // 63: oneCloud.v1.CreateRDSReply
	(*GetRDSReq)(nil),                                              // 64: oneCloud.v1.GetRDSReq
	(*GetRDSReply)(nil),                                            // 65: oneCloud.v1.GetRDSReply
	(*ListRDSReq)(nil),                                             // 66: oneCloud.v1.ListRDSReq
	(*ListRDSReply)(nil),                                           // 67: oneCloud.v1.ListRDSReply
	(*ListRDSSlowLogsReq)(nil),                                     // 68: oneCloud.v1.ListRDSSlowLogsReq
	(*ListRDSSlowLogsReply)(nil),                                   // 69: oneCloud.v1.ListRDSSlowLogsReply
	(*ListRDSErrLogsReq)(nil),                                      // 70: oneCloud.v1.ListRDSErrLogsReq
	(*ListRDSErrLogsReply)(nil),                                    // 71: oneCloud.v1.ListRDSErrLogsReply
	(*CreateLBReq)(nil),                                            // 72: oneCloud.v1.CreateLBReq
	(*CreateLBReply)(nil),                                          // 73: oneCloud.v1.CreateLBReply
	(*GetLBReq)(nil),                                               // 74: oneCloud.v1.GetLBReq
	(*GetLBReply)(nil),                                             // 75: oneCloud.v1.GetLBReply
	(*ReleaseLBReq)(nil),                                           // 76: oneCloud.v1.ReleaseLBReq
	(*ReleaseLBReply)(nil),                                         // 77: oneCloud.v1.ReleaseLBReply
	(*ListCDNReq)(nil),                                             // 78: oneCloud.v1.ListCDNReq
	(*ListCDNReply)(nil),                                           // 79: oneCloud.v1.ListCDNReply
	(*GetCDNReq)(nil),                                              // 80: oneCloud.v1.GetCDNReq
	(*GetCDNReply)(nil),                                            // 81: oneCloud.v1.GetCDNReply
	(*AddCDNReq)(nil),                                              // 82: oneCloud.v1.AddCDNReq
	(*AddCDNReply)(nil),                                            // 83: oneCloud.v1.AddCDNReply
	(*ImportCDNReq)(nil),                                           // 84: oneCloud.v1.ImportCDNReq
	(*ImportCDNReply)(nil),                                         // 85: oneCloud.v1.ImportCDNReply
	(*ReleaseCDNReq)(nil),                                          // 86: oneCloud.v1.ReleaseCDNReq
	(*ReleaseCDNReply)(nil),                                        // 87: oneCloud.v1.ReleaseCDNReply
	(*UpdateCDNReq)(nil),                                           // 88: oneCloud.v1.UpdateCDNReq
	(*UpdateCDNReply)(nil),                                         // 89: oneCloud.v1.UpdateCDNReply
	(*RefreshCDNCacheReq)(nil),                                     // 90: oneCloud.v1.RefreshCDNCacheReq
	(*RefreshCDNCacheReply)(nil),                                   // 91: oneCloud.v1.RefreshCDNCacheReply
	(*GetCDNQuotaReq)(nil),                                         // 92: oneCloud.v1.GetCDNQuotaReq
	(*GetCDNQuotaReply)(nil),                                       // 93: oneCloud.v1.GetCDNQuotaReply
	(*IsCdnIpReq)(nil),                                             // 94: oneCloud.v1.IsCdnIpReq
	(*IsCdnIpReply)(nil),                                           // 95: oneCloud.v1.IsCdnIpReply
	(*GetCdnIpStatusReq)(nil),                                      // 96: oneCloud.v1.GetCdnIpStatusReq
	(*GetCdnIpStatusReply)(nil),                                    // 97: oneCloud.v1.GetCdnIpStatusReply
	(*GetCdnServiceStatusReq)(nil),                                 // 98: oneCloud.v1.GetCdnServiceStatusReq
	(*GetCdnServiceStatusReply)(nil),                               // 99: oneCloud.v1.GetCdnServiceStatusReply
	(*ListDomainDnsReq)(nil),                                       // 100: oneCloud.v1.ListDomainDnsReq
	(*ListDomainDnsReply)(nil),                                     // 101: oneCloud.v1.ListDomainDnsReply
	(*ListCloudDomainDnsReq)(nil),                                  // 102: oneCloud.v1.ListCloudDomainDnsReq
	(*ListCloudDomainDnsReply)(nil),                                // 103: oneCloud.v1.ListCloudDomainDnsReply
	(*ImportDomainDnsReq)(nil),                                     // 104: oneCloud.v1.ImportDomainDnsReq
	(*ImportDomainDnsReply)(nil),                                   // 105: oneCloud.v1.ImportDomainDnsReply
	(*ListCloudDomainDnsRecordReq)(nil),                            // 106: oneCloud.v1.ListCloudDomainDnsRecordReq
	(*ListCloudDomainDnsRecordReply)(nil),                          // 107: oneCloud.v1.ListCloudDomainDnsRecordReply
	(*AddCloudDomainDNSRecordReq)(nil),                             // 108: oneCloud.v1.AddCloudDomainDNSRecordReq
	(*AddCloudDomainDNSRecordReply)(nil),                           // 109: oneCloud.v1.AddCloudDomainDNSRecordReply
	(*DelCloudDomainDNSRecordReq)(nil),                             // 110: oneCloud.v1.DelCloudDomainDNSRecordReq
	(*DelCloudDomainDNSRecordReply)(nil),                           // 111: oneCloud.v1.DelCloudDomainDNSRecordReply
	(*UpdateCloudDomainDNSRecordReq)(nil),                          // 112: oneCloud.v1.UpdateCloudDomainDNSRecordReq
	(*UpdateCloudDomainDNSRecordReply)(nil),                        // 113: oneCloud.v1.UpdateCloudDomainDNSRecordReply
	(*SyncCloudDomainDnsRecordReq)(nil),                            // 114: oneCloud.v1.SyncCloudDomainDnsRecordReq
	(*SyncCloudDomainDnsRecordReply)(nil),                          // 115: oneCloud.v1.SyncCloudDomainDnsRecordReply
	(*GetSyncCloudDomainDnsRecordReq)(nil),                         // 116: oneCloud.v1.GetSyncCloudDomainDnsRecordReq
	(*GetSyncCloudDomainDnsRecordReply)(nil),                       // 117: oneCloud.v1.GetSyncCloudDomainDnsRecordReply
	(*GetUnSupportSyncCloudDomainDnsRecordReq)(nil),                // 118: oneCloud.v1.GetUnSupportSyncCloudDomainDnsRecordReq
	(*GetUnSupportSyncCloudDomainDnsRecordReply)(nil),              // 119: oneCloud.v1.GetUnSupportSyncCloudDomainDnsRecordReply
	(*BuyCertificateReq)(nil),                                      // 120: oneCloud.v1.BuyCertificateReq
	(*BuyCertificateReply)(nil),                                    // 121: oneCloud.v1.BuyCertificateReply
	(*ParseCertificateReq)(nil),                                    // 122: oneCloud.v1.ParseCertificateReq
	(*ParseCertificateReply)(nil),                                  // 123: oneCloud.v1.ParseCertificateReply
	(*RecordCertificateReq)(nil),                                   // 124: oneCloud.v1.RecordCertificateReq
	(*RecordCertificateReply)(nil),                                 // 125: oneCloud.v1.RecordCertificateReply
	(*ListCertificateReq)(nil),                                     // 126: oneCloud.v1.ListCertificateReq
	(*ListCertificateReply)(nil),                                   // 127: oneCloud.v1.ListCertificateReply
	(*DelCertificateReq)(nil),                                      // 128: oneCloud.v1.DelCertificateReq
	(*DelCertificateReply)(nil),                                    // 129: oneCloud.v1.DelCertificateReply
	(*GetCertificateByUuidReq)(nil),                                // 130: oneCloud.v1.GetCertificateByUuidReq
	(*GetCertificateByUuidReply)(nil),                              // 131: oneCloud.v1.GetCertificateByUuidReply
	(*ListOSSBucketReq)(nil),                                       // 132: oneCloud.v1.ListOSSBucketReq
	(*ListOSSBucketReply)(nil),                                     // 133: oneCloud.v1.ListOSSBucketReply
	(*CreateOSSBucketReq)(nil),                                     // 134: oneCloud.v1.CreateOSSBucketReq
	(*CreateOSSBucketReply)(nil),                                   // 135: oneCloud.v1.CreateOSSBucketReply
	(*GetOSSBucketReq)(nil),                                        // 136: oneCloud.v1.GetOSSBucketReq
	(*GetOSSBucketReply)(nil),                                      // 137: oneCloud.v1.GetOSSBucketReply
	(*DelOSSObjectReq)(nil),                                        // 138: oneCloud.v1.DelOSSObjectReq
	(*DelOSSObjectReply)(nil),                                      // 139: oneCloud.v1.DelOSSObjectReply
	(*GetOSSObjectMetaReq)(nil),                                    // 140: oneCloud.v1.GetOSSObjectMetaReq
	(*GetOSSObjectMetaReply)(nil),                                  // 141: oneCloud.v1.GetOSSObjectMetaReply
	(*RestoreOSSObjectReq)(nil),                                    // 142: oneCloud.v1.RestoreOSSObjectReq
	(*RestoreOSSObjectReply)(nil),                                  // 143: oneCloud.v1.RestoreOSSObjectReply
	(*AddCloudPlatformRegionReq)(nil),                              // 144: oneCloud.v1.AddCloudPlatformRegionReq
	(*AddCloudPlatformRegionReply)(nil),                            // 145: oneCloud.v1.AddCloudPlatformRegionReply
	(*DelCloudPlatformRegionReq)(nil),                              // 146: oneCloud.v1.DelCloudPlatformRegionReq
	(*DelCloudPlatformRegionReply)(nil),                            // 147: oneCloud.v1.DelCloudPlatformRegionReply
	(*ListCloudPlatformRegionReq)(nil),                             // 148: oneCloud.v1.ListCloudPlatformRegionReq
	(*ListCloudPlatformRegionReply)(nil),                           // 149: oneCloud.v1.ListCloudPlatformRegionReply
	(*CreateAcmeAccountReq)(nil),                                   // 150: oneCloud.v1.CreateAcmeAccountReq
	(*CreateAcmeAccountReply)(nil),                                 // 151: oneCloud.v1.CreateAcmeAccountReply
	(*DeleteAcmeAccountReq)(nil),                                   // 152: oneCloud.v1.DeleteAcmeAccountReq
	(*DeleteAcmeAccountReply)(nil),                                 // 153: oneCloud.v1.DeleteAcmeAccountReply
	(*AcmeAccount)(nil),                                            // 154: oneCloud.v1.AcmeAccount
	(*ListAcmeAccountReq)(nil),                                     // 155: oneCloud.v1.ListAcmeAccountReq
	(*ListAcmeAccountReply)(nil),                                   // 156: oneCloud.v1.ListAcmeAccountReply
	(*CreateAcmeOrderReq)(nil),                                     // 157: oneCloud.v1.CreateAcmeOrderReq
	(*CreateAcmeOrderReply)(nil),                                   // 158: oneCloud.v1.CreateAcmeOrderReply
	(*AcmeOrder)(nil),                                              // 159: oneCloud.v1.AcmeOrder
	(*ListAcmeOrderReq)(nil),                                       // 160: oneCloud.v1.ListAcmeOrderReq
	(*ListAcmeOrderReply)(nil),                                     // 161: oneCloud.v1.ListAcmeOrderReply
	(*GetAcmeOrderReq)(nil),                                        // 162: oneCloud.v1.GetAcmeOrderReq
	(*GetAcmeOrderReply)(nil),                                      // 163: oneCloud.v1.GetAcmeOrderReply
	(*AcmeOrderAuthorization)(nil),                                 // 164: oneCloud.v1.AcmeOrderAuthorization
	(*AcmeOrderChallenge)(nil),                                     // 165: oneCloud.v1.AcmeOrderChallenge
	(*AcmeOrderDnsChallenge)(nil),                                  // 166: oneCloud.v1.AcmeOrderDnsChallenge
	(*GetAcmeOrderAuthorizationsReq)(nil),                          // 167: oneCloud.v1.GetAcmeOrderAuthorizationsReq
	(*GetAcmeOrderAuthorizationsReply)(nil),                        // 168: oneCloud.v1.GetAcmeOrderAuthorizationsReply
	(*GetAcmeOrderChallengesReq)(nil),                              // 169: oneCloud.v1.GetAcmeOrderChallengesReq
	(*GetAcmeOrderChallengesReply)(nil),                            // 170: oneCloud.v1.GetAcmeOrderChallengesReply
	(*FinalizeAcmeOrderReq)(nil),                                   // 171: oneCloud.v1.FinalizeAcmeOrderReq
	(*FinalizeAcmeOrderReply)(nil),                                 // 172: oneCloud.v1.FinalizeAcmeOrderReply
	(*GetAcmeOrderCertificateReq)(nil),                             // 173: oneCloud.v1.GetAcmeOrderCertificateReq
	(*GetAcmeOrderCertificateReply)(nil),                           // 174: oneCloud.v1.GetAcmeOrderCertificateReply
	(*ListSupportPlatformReply_Platform)(nil),                      // 175: oneCloud.v1.ListSupportPlatformReply.Platform
	(*ListPlatformReply_Platform)(nil),                             // 176: oneCloud.v1.ListPlatformReply.Platform
	(*ListPlatformAccountReply_PlatformAccount)(nil),               // 177: oneCloud.v1.ListPlatformAccountReply.PlatformAccount
	(*ListPlatformSubAccountReply_PlatformSubAccount)(nil),         // 178: oneCloud.v1.ListPlatformSubAccountReply.PlatformSubAccount
	(*GetAccessKeyReply_AccessKey)(nil),                            // 179: oneCloud.v1.GetAccessKeyReply.AccessKey
	(*ListObjectStorageSecurityTokenGeneratorReply_Generator)(nil), // 180: oneCloud.v1.ListObjectStorageSecurityTokenGeneratorReply.Generator
	(*ListRDSReply_Instance)(nil),                                  // 181: oneCloud.v1.ListRDSReply.Instance
	(*ListRDSSlowLogsReply_SlowLog)(nil),                           // 182: oneCloud.v1.ListRDSSlowLogsReply.SlowLog
	(*ListRDSErrLogsReply_ErrLog)(nil),                             // 183: oneCloud.v1.ListRDSErrLogsReply.ErrLog
	(*ListCDNReply_Cdn)(nil),                                       // 184: oneCloud.v1.ListCDNReply.Cdn
	(*ListCDNReply_Origin)(nil),                                    // 185: oneCloud.v1.ListCDNReply.Origin
	(*GetCDNReply_Origin)(nil),                                     // 186: oneCloud.v1.GetCDNReply.Origin
	(*GetCdnIpStatusReply_CdnIpStatus)(nil),                        // 187: oneCloud.v1.GetCdnIpStatusReply.CdnIpStatus
	(*ListDomainDnsReply_Domain)(nil),                              // 188: oneCloud.v1.ListDomainDnsReply.Domain
	(*ListCloudDomainDnsReply_Domain)(nil),                         // 189: oneCloud.v1.ListCloudDomainDnsReply.Domain
	(*ListCloudDomainDnsRecordReply_Record)(nil),                   // 190: oneCloud.v1.ListCloudDomainDnsRecordReply.Record
	(*GetUnSupportSyncCloudDomainDnsRecordReply_UnSupportSyncCloudDomainDnsRecord)(nil), // 191: oneCloud.v1.GetUnSupportSyncCloudDomainDnsRecordReply.UnSupportSyncCloudDomainDnsRecord
	(*ListCertificateReply_Certificate)(nil),                                            // 192: oneCloud.v1.ListCertificateReply.Certificate
	(*ListOSSBucketReply_Bucket)(nil),                                                   // 193: oneCloud.v1.ListOSSBucketReply.Bucket
	(*ListCloudPlatformRegionReply_Region)(nil),                                         // 194: oneCloud.v1.ListCloudPlatformRegionReply.Region
}
var file_oneCloud_v1_oneCloud_proto_depIdxs = []int32{
	175, // 0: oneCloud.v1.ListSupportPlatformReply.platform:type_name -> oneCloud.v1.ListSupportPlatformReply.Platform
	176, // 1: oneCloud.v1.ListPlatformReply.platform:type_name -> oneCloud.v1.ListPlatformReply.Platform
	177, // 2: oneCloud.v1.ListPlatformAccountReply.platformAccount:type_name -> oneCloud.v1.ListPlatformAccountReply.PlatformAccount
	178, // 3: oneCloud.v1.ListPlatformSubAccountReply.platformSubAccounts:type_name -> oneCloud.v1.ListPlatformSubAccountReply.PlatformSubAccount
	179, // 4: oneCloud.v1.GetAccessKeyReply.accessKeys:type_name -> oneCloud.v1.GetAccessKeyReply.AccessKey
	180, // 5: oneCloud.v1.ListObjectStorageSecurityTokenGeneratorReply.generator:type_name -> oneCloud.v1.ListObjectStorageSecurityTokenGeneratorReply.Generator
	181, // 6: oneCloud.v1.ListRDSReply.instances:type_name -> oneCloud.v1.ListRDSReply.Instance
	182, // 7: oneCloud.v1.ListRDSSlowLogsReply.SlowLogs:type_name -> oneCloud.v1.ListRDSSlowLogsReply.SlowLog
	183, // 8: oneCloud.v1.ListRDSErrLogsReply.errLogs:type_name -> oneCloud.v1.ListRDSErrLogsReply.ErrLog
	184, // 9: oneCloud.v1.ListCDNReply.cdn:type_name -> oneCloud.v1.ListCDNReply.Cdn
	186, // 10: oneCloud.v1.GetCDNReply.origin:type_name -> oneCloud.v1.GetCDNReply.Origin
	186, // 11: oneCloud.v1.GetCDNReply.backupOrigin:type_name -> oneCloud.v1.GetCDNReply.Origin
	187, // 12: oneCloud.v1.GetCdnIpStatusReply.ipStatus:type_name -> oneCloud.v1.GetCdnIpStatusReply.CdnIpStatus
	188, // 13: oneCloud.v1.ListDomainDnsReply.domain:type_name -> oneCloud.v1.ListDomainDnsReply.Domain
	189, // 14: oneCloud.v1.ListCloudDomainDnsReply.domain:type_name -> oneCloud.v1.ListCloudDomainDnsReply.Domain
	190, // 15: oneCloud.v1.ListCloudDomainDnsRecordReply.records:type_name -> oneCloud.v1.ListCloudDomainDnsRecordReply.Record
	191, // 16: oneCloud.v1.GetUnSupportSyncCloudDomainDnsRecordReply.unSupportSyncCloudDomainDnsRecords:type_name -> oneCloud.v1.GetUnSupportSyncCloudDomainDnsRecordReply.UnSupportSyncCloudDomainDnsRecord
	192, // 17: oneCloud.v1.ListCertificateReply.certificate:type_name -> oneCloud.v1.ListCertificateReply.Certificate
	193, // 18: oneCloud.v1.ListOSSBucketReply.bucket:type_name -> oneCloud.v1.ListOSSBucketReply.Bucket
	194, // 19: oneCloud.v1.ListCloudPlatformRegionReply.region:type_name -> oneCloud.v1.ListCloudPlatformRegionReply.Region
	154, // 20: oneCloud.v1.ListAcmeAccountReply.accounts:type_name -> oneCloud.v1.AcmeAccount
	159, // 21: oneCloud.v1.ListAcmeOrderReply.orders:type_name -> oneCloud.v1.AcmeOrder
	159, // 22: oneCloud.v1.GetAcmeOrderReply.order:type_name -> oneCloud.v1.AcmeOrder
	165, // 23: oneCloud.v1.AcmeOrderAuthorization.challenges:type_name -> oneCloud.v1.AcmeOrderChallenge
	166, // 24: oneCloud.v1.AcmeOrderAuthorization.dnsChallenges:type_name -> oneCloud.v1.AcmeOrderDnsChallenge
	164, // 25: oneCloud.v1.GetAcmeOrderAuthorizationsReply.authorizations:type_name -> oneCloud.v1.AcmeOrderAuthorization
	164, // 26: oneCloud.v1.GetAcmeOrderChallengesReply.authorizations:type_name -> oneCloud.v1.AcmeOrderAuthorization
	159, // 27: oneCloud.v1.FinalizeAcmeOrderReply.order:type_name -> oneCloud.v1.AcmeOrder
	159, // 28: oneCloud.v1.GetAcmeOrderCertificateReply.order:type_name -> oneCloud.v1.AcmeOrder
	185, // 29: oneCloud.v1.ListCDNReply.Cdn.origin:type_name -> oneCloud.v1.ListCDNReply.Origin
	185, // 30: oneCloud.v1.ListCDNReply.Cdn.backupOrigin:type_name -> oneCloud.v1.ListCDNReply.Origin
	0,   // 31: oneCloud.v1.oneCloud.ListSupportPlatform:input_type -> oneCloud.v1.ListSupportPlatformReq
	2,   // 32: oneCloud.v1.oneCloud.ListPlatform:input_type -> oneCloud.v1.ListPlatformReq
	4,   // 33: oneCloud.v1.oneCloud.AddPlatformAccount:input_type -> oneCloud.v1.AddPlatformAccountReq
	6,   // 34: oneCloud.v1.oneCloud.ListPlatformAccount:input_type -> oneCloud.v1.ListPlatformAccountReq
	8,   // 35: oneCloud.v1.oneCloud.DelPlatformAccount:input_type -> oneCloud.v1.DelPlatformAccountReq
	10,  // 36: oneCloud.v1.oneCloud.AddPlatformSubAccount:input_type -> oneCloud.v1.AddPlatformSubAccountReq
	12,  // 37: oneCloud.v1.oneCloud.ListPlatformSubAccount:input_type -> oneCloud.v1.ListPlatformSubAccountReq
	14,  // 38: oneCloud.v1.oneCloud.DelPlatformSubAccount:input_type -> oneCloud.v1.DelPlatformSubAccountReq
	16,  // 39: oneCloud.v1.oneCloud.CreateAccessKey:input_type -> oneCloud.v1.CreateAccessKeyReq
	18,  // 40: oneCloud.v1.oneCloud.GetAccessKey:input_type -> oneCloud.v1.GetAccessKeyReq
	20,  // 41: oneCloud.v1.oneCloud.DelAccessKey:input_type -> oneCloud.v1.DelAccessKeyReq
	22,  // 42: oneCloud.v1.oneCloud.GetSecurityToken:input_type -> oneCloud.v1.GetSecurityTokenReq
	38,  // 43: oneCloud.v1.oneCloud.GenerateObjectStorageSecurityTokenPutPolicy:input_type -> oneCloud.v1.GenerateObjectStorageSecurityTokenPutPolicyReq
	40,  // 44: oneCloud.v1.oneCloud.AccountBalance:input_type -> oneCloud.v1.AccountBalanceReq
	120, // 45: oneCloud.v1.oneCloud.BuyCertificate:input_type -> oneCloud.v1.BuyCertificateReq
	122, // 46: oneCloud.v1.oneCloud.ParseCertificate:input_type -> oneCloud.v1.ParseCertificateReq
	124, // 47: oneCloud.v1.oneCloud.RecordCertificate:input_type -> oneCloud.v1.RecordCertificateReq
	126, // 48: oneCloud.v1.oneCloud.ListCertificate:input_type -> oneCloud.v1.ListCertificateReq
	128, // 49: oneCloud.v1.oneCloud.DelCertificate:input_type -> oneCloud.v1.DelCertificateReq
	130, // 50: oneCloud.v1.oneCloud.GetCertificateByUuid:input_type -> oneCloud.v1.GetCertificateByUuidReq
	100, // 51: oneCloud.v1.oneCloud.ListDomainDns:input_type -> oneCloud.v1.ListDomainDnsReq
	102, // 52: oneCloud.v1.oneCloud.ListCloudDomainDns:input_type -> oneCloud.v1.ListCloudDomainDnsReq
	104, // 53: oneCloud.v1.oneCloud.ImportDomainDns:input_type -> oneCloud.v1.ImportDomainDnsReq
	106, // 54: oneCloud.v1.oneCloud.ListCloudDomainDnsRecord:input_type -> oneCloud.v1.ListCloudDomainDnsRecordReq
	114, // 55: oneCloud.v1.oneCloud.SyncCloudDomainDnsRecord:input_type -> oneCloud.v1.SyncCloudDomainDnsRecordReq
	116, // 56: oneCloud.v1.oneCloud.GetSyncCloudDomainDnsRecord:input_type -> oneCloud.v1.GetSyncCloudDomainDnsRecordReq
	118, // 57: oneCloud.v1.oneCloud.GetUnSupportSyncCloudDomainDnsRecord:input_type -> oneCloud.v1.GetUnSupportSyncCloudDomainDnsRecordReq
	42,  // 58: oneCloud.v1.oneCloud.GetECSFamily:input_type -> oneCloud.v1.GetECSFamilyReq
	46,  // 59: oneCloud.v1.oneCloud.CreateECS:input_type -> oneCloud.v1.CreateECSReq
	48,  // 60: oneCloud.v1.oneCloud.DeleteECS:input_type -> oneCloud.v1.ReleaseECSReq
	50,  // 61: oneCloud.v1.oneCloud.UpdateECS:input_type -> oneCloud.v1.UpdateECSReq
	52,  // 62: oneCloud.v1.oneCloud.ShutdownECS:input_type -> oneCloud.v1.ShutdownECSReq
	44,  // 63: oneCloud.v1.oneCloud.GetECS:input_type -> oneCloud.v1.GetECSReq
	54,  // 64: oneCloud.v1.oneCloud.CreateEIP:input_type -> oneCloud.v1.CreateEIPReq
	56,  // 65: oneCloud.v1.oneCloud.GetEIP:input_type -> oneCloud.v1.GetEIPReq
	58,  // 66: oneCloud.v1.oneCloud.UpdateEIP:input_type -> oneCloud.v1.UpdateEIPReq
	60,  // 67: oneCloud.v1.oneCloud.ReleaseEIP:input_type -> oneCloud.v1.ReleaseEIPReq
	62,  // 68: oneCloud.v1.oneCloud.CreateRDS:input_type -> oneCloud.v1.CreateRDSReq
	64,  // 69: oneCloud.v1.oneCloud.GetRDS:input_type -> oneCloud.v1.GetRDSReq
	66,  // 70: oneCloud.v1.oneCloud.ListRDS:input_type -> oneCloud.v1.ListRDSReq
	68,  // 71: oneCloud.v1.oneCloud.ListRDSSlowLogs:input_type -> oneCloud.v1.ListRDSSlowLogsReq
	70,  // 72: oneCloud.v1.oneCloud.ListRDSErrLogs:input_type -> oneCloud.v1.ListRDSErrLogsReq
	72,  // 73: oneCloud.v1.oneCloud.CreateLB:input_type -> oneCloud.v1.CreateLBReq
	74,  // 74: oneCloud.v1.oneCloud.GetLB:input_type -> oneCloud.v1.GetLBReq
	76,  // 75: oneCloud.v1.oneCloud.ReleaseLB:input_type -> oneCloud.v1.ReleaseLBReq
	78,  // 76: oneCloud.v1.oneCloud.ListCDN:input_type -> oneCloud.v1.ListCDNReq
	82,  // 77: oneCloud.v1.oneCloud.AddCDN:input_type -> oneCloud.v1.AddCDNReq
	84,  // 78: oneCloud.v1.oneCloud.ImportCDN:input_type -> oneCloud.v1.ImportCDNReq
	80,  // 79: oneCloud.v1.oneCloud.GetCDN:input_type -> oneCloud.v1.GetCDNReq
	86,  // 80: oneCloud.v1.oneCloud.ReleaseCDN:input_type -> oneCloud.v1.ReleaseCDNReq
	88,  // 81: oneCloud.v1.oneCloud.UpdateCDN:input_type -> oneCloud.v1.UpdateCDNReq
	90,  // 82: oneCloud.v1.oneCloud.RefreshCDNCache:input_type -> oneCloud.v1.RefreshCDNCacheReq
	92,  // 83: oneCloud.v1.oneCloud.GetCDNQuota:input_type -> oneCloud.v1.GetCDNQuotaReq
	94,  // 84: oneCloud.v1.oneCloud.IsCdnIp:input_type -> oneCloud.v1.IsCdnIpReq
	96,  // 85: oneCloud.v1.oneCloud.GetCdnIpStatus:input_type -> oneCloud.v1.GetCdnIpStatusReq
	98,  // 86: oneCloud.v1.oneCloud.GetCdnServiceStatus:input_type -> oneCloud.v1.GetCdnServiceStatusReq
	132, // 87: oneCloud.v1.oneCloud.ListOSSBucket:input_type -> oneCloud.v1.ListOSSBucketReq
	134, // 88: oneCloud.v1.oneCloud.CreateOSSBucket:input_type -> oneCloud.v1.CreateOSSBucketReq
	136, // 89: oneCloud.v1.oneCloud.GetOSSBucket:input_type -> oneCloud.v1.GetOSSBucketReq
	138, // 90: oneCloud.v1.oneCloud.DelOSSObject:input_type -> oneCloud.v1.DelOSSObjectReq
	140, // 91: oneCloud.v1.oneCloud.GetOSSObjectMeta:input_type -> oneCloud.v1.GetOSSObjectMetaReq
	142, // 92: oneCloud.v1.oneCloud.RestoreOSSObject:input_type -> oneCloud.v1.RestoreOSSObjectReq
	24,  // 93: oneCloud.v1.oneCloud.CreateObjectStorageSecurityTokenGenerator:input_type -> oneCloud.v1.CreateObjectStorageSecurityTokenGeneratorReq
	26,  // 94: oneCloud.v1.oneCloud.ExistObjectStorageSecurityTokenGenerator:input_type -> oneCloud.v1.ExistObjectStorageSecurityTokenGeneratorReq
	28,  // 95: oneCloud.v1.oneCloud.GetObjectStorageSecurityTokenGenerator:input_type -> oneCloud.v1.GetObjectStorageSecurityTokenGeneratorReq
	30,  // 96: oneCloud.v1.oneCloud.DelObjectStorageSecurityTokenGenerator:input_type -> oneCloud.v1.DelObjectStorageSecurityTokenGeneratorReq
	32,  // 97: oneCloud.v1.oneCloud.ListObjectStorageSecurityTokenGenerator:input_type -> oneCloud.v1.ListObjectStorageSecurityTokenGeneratorReq
	36,  // 98: oneCloud.v1.oneCloud.GetObjectStorageSecurityTokenByToken:input_type -> oneCloud.v1.GetObjectStorageSecurityTokenByTokenReq
	34,  // 99: oneCloud.v1.oneCloud.GetObjectStorageSecurityTokenByGenerator:input_type -> oneCloud.v1.GetObjectStorageSecurityTokenByGeneratorReq
	144, // 100: oneCloud.v1.oneCloud.AddOrgCloudPlatformRegion:input_type -> oneCloud.v1.AddCloudPlatformRegionReq
	146, // 101: oneCloud.v1.oneCloud.DelOrgCloudPlatformRegion:input_type -> oneCloud.v1.DelCloudPlatformRegionReq
	148, // 102: oneCloud.v1.oneCloud.ListOrgCloudPlatformRegion:input_type -> oneCloud.v1.ListCloudPlatformRegionReq
	150, // 103: oneCloud.v1.oneCloud.CreateAcmeAccount:input_type -> oneCloud.v1.CreateAcmeAccountReq
	152, // 104: oneCloud.v1.oneCloud.DeleteAcmeAccount:input_type -> oneCloud.v1.DeleteAcmeAccountReq
	155, // 105: oneCloud.v1.oneCloud.ListAcmeAccount:input_type -> oneCloud.v1.ListAcmeAccountReq
	157, // 106: oneCloud.v1.oneCloud.CreateAcmeOrder:input_type -> oneCloud.v1.CreateAcmeOrderReq
	160, // 107: oneCloud.v1.oneCloud.ListAcmeOrder:input_type -> oneCloud.v1.ListAcmeOrderReq
	162, // 108: oneCloud.v1.oneCloud.GetAcmeOrder:input_type -> oneCloud.v1.GetAcmeOrderReq
	167, // 109: oneCloud.v1.oneCloud.GetAcmeOrderAuthorizations:input_type -> oneCloud.v1.GetAcmeOrderAuthorizationsReq
	169, // 110: oneCloud.v1.oneCloud.GetAcmeOrderChallenges:input_type -> oneCloud.v1.GetAcmeOrderChallengesReq
	171, // 111: oneCloud.v1.oneCloud.FinalizeAcmeOrder:input_type -> oneCloud.v1.FinalizeAcmeOrderReq
	173, // 112: oneCloud.v1.oneCloud.GetAcmeOrderCertificate:input_type -> oneCloud.v1.GetAcmeOrderCertificateReq
	1,   // 113: oneCloud.v1.oneCloud.ListSupportPlatform:output_type -> oneCloud.v1.ListSupportPlatformReply
	3,   // 114: oneCloud.v1.oneCloud.ListPlatform:output_type -> oneCloud.v1.ListPlatformReply
	5,   // 115: oneCloud.v1.oneCloud.AddPlatformAccount:output_type -> oneCloud.v1.AddPlatformAccountReply
	7,   // 116: oneCloud.v1.oneCloud.ListPlatformAccount:output_type -> oneCloud.v1.ListPlatformAccountReply
	9,   // 117: oneCloud.v1.oneCloud.DelPlatformAccount:output_type -> oneCloud.v1.DelPlatformAccountReply
	11,  // 118: oneCloud.v1.oneCloud.AddPlatformSubAccount:output_type -> oneCloud.v1.AddPlatformSubAccountReply
	13,  // 119: oneCloud.v1.oneCloud.ListPlatformSubAccount:output_type -> oneCloud.v1.ListPlatformSubAccountReply
	15,  // 120: oneCloud.v1.oneCloud.DelPlatformSubAccount:output_type -> oneCloud.v1.DelPlatformSubAccountReply
	17,  // 121: oneCloud.v1.oneCloud.CreateAccessKey:output_type -> oneCloud.v1.CreateAccessKeyReply
	19,  // 122: oneCloud.v1.oneCloud.GetAccessKey:output_type -> oneCloud.v1.GetAccessKeyReply
	21,  // 123: oneCloud.v1.oneCloud.DelAccessKey:output_type -> oneCloud.v1.DelAccessKeyReply
	23,  // 124: oneCloud.v1.oneCloud.GetSecurityToken:output_type -> oneCloud.v1.GetSecurityTokenReply
	39,  // 125: oneCloud.v1.oneCloud.GenerateObjectStorageSecurityTokenPutPolicy:output_type -> oneCloud.v1.GenerateObjectStorageSecurityTokenPutPolicyReply
	41,  // 126: oneCloud.v1.oneCloud.AccountBalance:output_type -> oneCloud.v1.AccountBalanceReply
	121, // 127: oneCloud.v1.oneCloud.BuyCertificate:output_type -> oneCloud.v1.BuyCertificateReply
	123, // 128: oneCloud.v1.oneCloud.ParseCertificate:output_type -> oneCloud.v1.ParseCertificateReply
	125, // 129: oneCloud.v1.oneCloud.RecordCertificate:output_type -> oneCloud.v1.RecordCertificateReply
	127, // 130: oneCloud.v1.oneCloud.ListCertificate:output_type -> oneCloud.v1.ListCertificateReply
	129, // 131: oneCloud.v1.oneCloud.DelCertificate:output_type -> oneCloud.v1.DelCertificateReply
	131, // 132: oneCloud.v1.oneCloud.GetCertificateByUuid:output_type -> oneCloud.v1.GetCertificateByUuidReply
	101, // 133: oneCloud.v1.oneCloud.ListDomainDns:output_type -> oneCloud.v1.ListDomainDnsReply
	103, // 134: oneCloud.v1.oneCloud.ListCloudDomainDns:output_type -> oneCloud.v1.ListCloudDomainDnsReply
	105, // 135: oneCloud.v1.oneCloud.ImportDomainDns:output_type -> oneCloud.v1.ImportDomainDnsReply
	107, // 136: oneCloud.v1.oneCloud.ListCloudDomainDnsRecord:output_type -> oneCloud.v1.ListCloudDomainDnsRecordReply
	115, // 137: oneCloud.v1.oneCloud.SyncCloudDomainDnsRecord:output_type -> oneCloud.v1.SyncCloudDomainDnsRecordReply
	117, // 138: oneCloud.v1.oneCloud.GetSyncCloudDomainDnsRecord:output_type -> oneCloud.v1.GetSyncCloudDomainDnsRecordReply
	119, // 139: oneCloud.v1.oneCloud.GetUnSupportSyncCloudDomainDnsRecord:output_type -> oneCloud.v1.GetUnSupportSyncCloudDomainDnsRecordReply
	43,  // 140: oneCloud.v1.oneCloud.GetECSFamily:output_type -> oneCloud.v1.GetECSFamilyReply
	47,  // 141: oneCloud.v1.oneCloud.CreateECS:output_type -> oneCloud.v1.CreateECSReply
	49,  // 142: oneCloud.v1.oneCloud.DeleteECS:output_type -> oneCloud.v1.ReleaseECSReply
	51,  // 143: oneCloud.v1.oneCloud.UpdateECS:output_type -> oneCloud.v1.UpdateECSReply
	53,  // 144: oneCloud.v1.oneCloud.ShutdownECS:output_type -> oneCloud.v1.ShutdownECSReply
	45,  // 145: oneCloud.v1.oneCloud.GetECS:output_type -> oneCloud.v1.GetECSReply
	55,  // 146: oneCloud.v1.oneCloud.CreateEIP:output_type -> oneCloud.v1.CreateEIPReply
	57,  // 147: oneCloud.v1.oneCloud.GetEIP:output_type -> oneCloud.v1.GetEIPReply
	59,  // 148: oneCloud.v1.oneCloud.UpdateEIP:output_type -> oneCloud.v1.UpdateEIPReply
	61,  // 149: oneCloud.v1.oneCloud.ReleaseEIP:output_type -> oneCloud.v1.ReleaseEIPReply
	63,  // 150: oneCloud.v1.oneCloud.CreateRDS:output_type -> oneCloud.v1.CreateRDSReply
	65,  // 151: oneCloud.v1.oneCloud.GetRDS:output_type -> oneCloud.v1.GetRDSReply
	67,  // 152: oneCloud.v1.oneCloud.ListRDS:output_type -> oneCloud.v1.ListRDSReply
	69,  // 153: oneCloud.v1.oneCloud.ListRDSSlowLogs:output_type -> oneCloud.v1.ListRDSSlowLogsReply
	71,  // 154: oneCloud.v1.oneCloud.ListRDSErrLogs:output_type -> oneCloud.v1.ListRDSErrLogsReply
	73,  // 155: oneCloud.v1.oneCloud.CreateLB:output_type -> oneCloud.v1.CreateLBReply
	75,  // 156: oneCloud.v1.oneCloud.GetLB:output_type -> oneCloud.v1.GetLBReply
	77,  // 157: oneCloud.v1.oneCloud.ReleaseLB:output_type -> oneCloud.v1.ReleaseLBReply
	79,  // 158: oneCloud.v1.oneCloud.ListCDN:output_type -> oneCloud.v1.ListCDNReply
	83,  // 159: oneCloud.v1.oneCloud.AddCDN:output_type -> oneCloud.v1.AddCDNReply
	85,  // 160: oneCloud.v1.oneCloud.ImportCDN:output_type -> oneCloud.v1.ImportCDNReply
	81,  // 161: oneCloud.v1.oneCloud.GetCDN:output_type -> oneCloud.v1.GetCDNReply
	87,  // 162: oneCloud.v1.oneCloud.ReleaseCDN:output_type -> oneCloud.v1.ReleaseCDNReply
	89,  // 163: oneCloud.v1.oneCloud.UpdateCDN:output_type -> oneCloud.v1.UpdateCDNReply
	91,  // 164: oneCloud.v1.oneCloud.RefreshCDNCache:output_type -> oneCloud.v1.RefreshCDNCacheReply
	93,  // 165: oneCloud.v1.oneCloud.GetCDNQuota:output_type -> oneCloud.v1.GetCDNQuotaReply
	95,  // 166: oneCloud.v1.oneCloud.IsCdnIp:output_type -> oneCloud.v1.IsCdnIpReply
	97,  // 167: oneCloud.v1.oneCloud.GetCdnIpStatus:output_type -> oneCloud.v1.GetCdnIpStatusReply
	99,  // 168: oneCloud.v1.oneCloud.GetCdnServiceStatus:output_type -> oneCloud.v1.GetCdnServiceStatusReply
	133, // 169: oneCloud.v1.oneCloud.ListOSSBucket:output_type -> oneCloud.v1.ListOSSBucketReply
	135, // 170: oneCloud.v1.oneCloud.CreateOSSBucket:output_type -> oneCloud.v1.CreateOSSBucketReply
	137, // 171: oneCloud.v1.oneCloud.GetOSSBucket:output_type -> oneCloud.v1.GetOSSBucketReply
	139, // 172: oneCloud.v1.oneCloud.DelOSSObject:output_type -> oneCloud.v1.DelOSSObjectReply
	141, // 173: oneCloud.v1.oneCloud.GetOSSObjectMeta:output_type -> oneCloud.v1.GetOSSObjectMetaReply
	143, // 174: oneCloud.v1.oneCloud.RestoreOSSObject:output_type -> oneCloud.v1.RestoreOSSObjectReply
	25,  // 175: oneCloud.v1.oneCloud.CreateObjectStorageSecurityTokenGenerator:output_type -> oneCloud.v1.CreateObjectStorageSecurityTokenGeneratorReply
	27,  // 176: oneCloud.v1.oneCloud.ExistObjectStorageSecurityTokenGenerator:output_type -> oneCloud.v1.ExistObjectStorageSecurityTokenGeneratorReply
	29,  // 177: oneCloud.v1.oneCloud.GetObjectStorageSecurityTokenGenerator:output_type -> oneCloud.v1.GetObjectStorageSecurityTokenGeneratorReply
	31,  // 178: oneCloud.v1.oneCloud.DelObjectStorageSecurityTokenGenerator:output_type -> oneCloud.v1.DelObjectStorageSecurityTokenGeneratorReply
	33,  // 179: oneCloud.v1.oneCloud.ListObjectStorageSecurityTokenGenerator:output_type -> oneCloud.v1.ListObjectStorageSecurityTokenGeneratorReply
	37,  // 180: oneCloud.v1.oneCloud.GetObjectStorageSecurityTokenByToken:output_type -> oneCloud.v1.GetObjectStorageSecurityTokenByTokenReply
	35,  // 181: oneCloud.v1.oneCloud.GetObjectStorageSecurityTokenByGenerator:output_type -> oneCloud.v1.GetObjectStorageSecurityTokenByGeneratorReply
	145, // 182: oneCloud.v1.oneCloud.AddOrgCloudPlatformRegion:output_type -> oneCloud.v1.AddCloudPlatformRegionReply
	147, // 183: oneCloud.v1.oneCloud.DelOrgCloudPlatformRegion:output_type -> oneCloud.v1.DelCloudPlatformRegionReply
	149, // 184: oneCloud.v1.oneCloud.ListOrgCloudPlatformRegion:output_type -> oneCloud.v1.ListCloudPlatformRegionReply
	151, // 185: oneCloud.v1.oneCloud.CreateAcmeAccount:output_type -> oneCloud.v1.CreateAcmeAccountReply
	153, // 186: oneCloud.v1.oneCloud.DeleteAcmeAccount:output_type -> oneCloud.v1.DeleteAcmeAccountReply
	156, // 187: oneCloud.v1.oneCloud.ListAcmeAccount:output_type -> oneCloud.v1.ListAcmeAccountReply
	158, // 188: oneCloud.v1.oneCloud.CreateAcmeOrder:output_type -> oneCloud.v1.CreateAcmeOrderReply
	161, // 189: oneCloud.v1.oneCloud.ListAcmeOrder:output_type -> oneCloud.v1.ListAcmeOrderReply
	163, // 190: oneCloud.v1.oneCloud.GetAcmeOrder:output_type -> oneCloud.v1.GetAcmeOrderReply
	168, // 191: oneCloud.v1.oneCloud.GetAcmeOrderAuthorizations:output_type -> oneCloud.v1.GetAcmeOrderAuthorizationsReply
	170, // 192: oneCloud.v1.oneCloud.GetAcmeOrderChallenges:output_type -> oneCloud.v1.GetAcmeOrderChallengesReply
	172, // 193: oneCloud.v1.oneCloud.FinalizeAcmeOrder:output_type -> oneCloud.v1.FinalizeAcmeOrderReply
	174, // 194: oneCloud.v1.oneCloud.GetAcmeOrderCertificate:output_type -> oneCloud.v1.GetAcmeOrderCertificateReply
	113, // [113:195] is the sub-list for method output_type
	31,  // [31:113] is the sub-list for method input_type
	31,  // [31:31] is the sub-list for extension type_name
	31,  // [31:31] is the sub-list for extension extendee
	0,   // [0:31] is the sub-list for field type_name
}

func init() { file_oneCloud_v1_oneCloud_proto_init() }
func file_oneCloud_v1_oneCloud_proto_init() {
	if File_oneCloud_v1_oneCloud_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_oneCloud_v1_oneCloud_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSupportPlatformReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSupportPlatformReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPlatformReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPlatformReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddPlatformAccountReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddPlatformAccountReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPlatformAccountReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPlatformAccountReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelPlatformAccountReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelPlatformAccountReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddPlatformSubAccountReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddPlatformSubAccountReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPlatformSubAccountReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPlatformSubAccountReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelPlatformSubAccountReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelPlatformSubAccountReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAccessKeyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAccessKeyReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAccessKeyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAccessKeyReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelAccessKeyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelAccessKeyReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSecurityTokenReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSecurityTokenReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateObjectStorageSecurityTokenGeneratorReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateObjectStorageSecurityTokenGeneratorReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistObjectStorageSecurityTokenGeneratorReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExistObjectStorageSecurityTokenGeneratorReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetObjectStorageSecurityTokenGeneratorReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetObjectStorageSecurityTokenGeneratorReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelObjectStorageSecurityTokenGeneratorReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelObjectStorageSecurityTokenGeneratorReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListObjectStorageSecurityTokenGeneratorReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListObjectStorageSecurityTokenGeneratorReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetObjectStorageSecurityTokenByGeneratorReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetObjectStorageSecurityTokenByGeneratorReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetObjectStorageSecurityTokenByTokenReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetObjectStorageSecurityTokenByTokenReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateObjectStorageSecurityTokenPutPolicyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateObjectStorageSecurityTokenPutPolicyReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountBalanceReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountBalanceReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetECSFamilyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetECSFamilyReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetECSReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetECSReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateECSReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateECSReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReleaseECSReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReleaseECSReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateECSReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateECSReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShutdownECSReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShutdownECSReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateEIPReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateEIPReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEIPReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEIPReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateEIPReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateEIPReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReleaseEIPReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReleaseEIPReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRDSReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRDSReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRDSReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRDSReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRDSReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRDSReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRDSSlowLogsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRDSSlowLogsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRDSErrLogsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRDSErrLogsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateLBReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateLBReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLBReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLBReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReleaseLBReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReleaseLBReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCDNReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCDNReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCDNReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCDNReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddCDNReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddCDNReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImportCDNReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImportCDNReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReleaseCDNReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReleaseCDNReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCDNReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCDNReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefreshCDNCacheReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefreshCDNCacheReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCDNQuotaReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCDNQuotaReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsCdnIpReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[95].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsCdnIpReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[96].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCdnIpStatusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[97].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCdnIpStatusReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[98].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCdnServiceStatusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[99].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCdnServiceStatusReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[100].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDomainDnsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[101].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDomainDnsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[102].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCloudDomainDnsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[103].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCloudDomainDnsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[104].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImportDomainDnsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[105].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImportDomainDnsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[106].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCloudDomainDnsRecordReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[107].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCloudDomainDnsRecordReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[108].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddCloudDomainDNSRecordReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[109].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddCloudDomainDNSRecordReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[110].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelCloudDomainDNSRecordReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[111].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelCloudDomainDNSRecordReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[112].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCloudDomainDNSRecordReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[113].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCloudDomainDNSRecordReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[114].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncCloudDomainDnsRecordReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[115].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncCloudDomainDnsRecordReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[116].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSyncCloudDomainDnsRecordReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[117].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSyncCloudDomainDnsRecordReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[118].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUnSupportSyncCloudDomainDnsRecordReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[119].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUnSupportSyncCloudDomainDnsRecordReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[120].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuyCertificateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[121].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuyCertificateReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[122].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParseCertificateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[123].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParseCertificateReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[124].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordCertificateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[125].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordCertificateReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[126].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCertificateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[127].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCertificateReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[128].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelCertificateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[129].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelCertificateReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[130].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCertificateByUuidReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[131].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCertificateByUuidReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[132].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOSSBucketReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[133].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOSSBucketReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[134].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOSSBucketReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[135].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOSSBucketReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[136].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOSSBucketReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[137].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOSSBucketReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[138].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelOSSObjectReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[139].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelOSSObjectReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[140].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOSSObjectMetaReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[141].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOSSObjectMetaReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[142].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RestoreOSSObjectReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[143].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RestoreOSSObjectReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[144].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddCloudPlatformRegionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[145].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddCloudPlatformRegionReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[146].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelCloudPlatformRegionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[147].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelCloudPlatformRegionReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[148].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCloudPlatformRegionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[149].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCloudPlatformRegionReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[150].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAcmeAccountReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[151].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAcmeAccountReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[152].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAcmeAccountReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[153].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAcmeAccountReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[154].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AcmeAccount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[155].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAcmeAccountReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[156].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAcmeAccountReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[157].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAcmeOrderReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[158].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAcmeOrderReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[159].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AcmeOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[160].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAcmeOrderReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[161].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAcmeOrderReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[162].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAcmeOrderReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[163].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAcmeOrderReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[164].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AcmeOrderAuthorization); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[165].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AcmeOrderChallenge); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[166].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AcmeOrderDnsChallenge); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[167].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAcmeOrderAuthorizationsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[168].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAcmeOrderAuthorizationsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[169].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAcmeOrderChallengesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[170].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAcmeOrderChallengesReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[171].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FinalizeAcmeOrderReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[172].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FinalizeAcmeOrderReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[173].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAcmeOrderCertificateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[174].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAcmeOrderCertificateReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[175].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSupportPlatformReply_Platform); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[176].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPlatformReply_Platform); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[177].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPlatformAccountReply_PlatformAccount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[178].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPlatformSubAccountReply_PlatformSubAccount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[179].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAccessKeyReply_AccessKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[180].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListObjectStorageSecurityTokenGeneratorReply_Generator); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[181].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRDSReply_Instance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[182].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRDSSlowLogsReply_SlowLog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[183].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRDSErrLogsReply_ErrLog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[184].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCDNReply_Cdn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[185].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCDNReply_Origin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[186].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCDNReply_Origin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[187].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCdnIpStatusReply_CdnIpStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[188].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDomainDnsReply_Domain); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[189].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCloudDomainDnsReply_Domain); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[190].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCloudDomainDnsRecordReply_Record); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[191].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUnSupportSyncCloudDomainDnsRecordReply_UnSupportSyncCloudDomainDnsRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[192].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCertificateReply_Certificate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[193].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOSSBucketReply_Bucket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneCloud_v1_oneCloud_proto_msgTypes[194].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCloudPlatformRegionReply_Region); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_oneCloud_v1_oneCloud_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   195,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_oneCloud_v1_oneCloud_proto_goTypes,
		DependencyIndexes: file_oneCloud_v1_oneCloud_proto_depIdxs,
		MessageInfos:      file_oneCloud_v1_oneCloud_proto_msgTypes,
	}.Build()
	File_oneCloud_v1_oneCloud_proto = out.File
	file_oneCloud_v1_oneCloud_proto_rawDesc = nil
	file_oneCloud_v1_oneCloud_proto_goTypes = nil
	file_oneCloud_v1_oneCloud_proto_depIdxs = nil
}
