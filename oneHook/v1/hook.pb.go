// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.14.0
// source: oneHook/v1/hook.proto

package v1

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 一定要传入 orgUuid， 不然无法区分产品，无法查询，也无法进行权限验证
// prometheus alert - orgUuid,            receiver: productUuid
type PrometheusAlertReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgUuid        string                                `protobuf:"bytes,1,opt,name=orgUuid,proto3" json:"orgUuid,omitempty"`
	ProductUuid    string                                `protobuf:"bytes,2,opt,name=productUuid,proto3" json:"productUuid,omitempty"`
	ProductEnvUuid string                                `protobuf:"bytes,3,opt,name=productEnvUuid,proto3" json:"productEnvUuid,omitempty"`
	MonitorToken   string                                `protobuf:"bytes,4,opt,name=monitorToken,proto3" json:"monitorToken,omitempty"`
	Receiver       string                                `protobuf:"bytes,5,opt,name=receiver,proto3" json:"receiver,omitempty"`
	Alerts         []*PrometheusAlertReq_PrometheusAlert `protobuf:"bytes,6,rep,name=alerts,proto3" json:"alerts,omitempty"`
}

func (x *PrometheusAlertReq) Reset() {
	*x = PrometheusAlertReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneHook_v1_hook_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrometheusAlertReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrometheusAlertReq) ProtoMessage() {}

func (x *PrometheusAlertReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneHook_v1_hook_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrometheusAlertReq.ProtoReflect.Descriptor instead.
func (*PrometheusAlertReq) Descriptor() ([]byte, []int) {
	return file_oneHook_v1_hook_proto_rawDescGZIP(), []int{0}
}

func (x *PrometheusAlertReq) GetOrgUuid() string {
	if x != nil {
		return x.OrgUuid
	}
	return ""
}

func (x *PrometheusAlertReq) GetProductUuid() string {
	if x != nil {
		return x.ProductUuid
	}
	return ""
}

func (x *PrometheusAlertReq) GetProductEnvUuid() string {
	if x != nil {
		return x.ProductEnvUuid
	}
	return ""
}

func (x *PrometheusAlertReq) GetMonitorToken() string {
	if x != nil {
		return x.MonitorToken
	}
	return ""
}

func (x *PrometheusAlertReq) GetReceiver() string {
	if x != nil {
		return x.Receiver
	}
	return ""
}

func (x *PrometheusAlertReq) GetAlerts() []*PrometheusAlertReq_PrometheusAlert {
	if x != nil {
		return x.Alerts
	}
	return nil
}

type PrometheusAlertReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *PrometheusAlertReply) Reset() {
	*x = PrometheusAlertReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneHook_v1_hook_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrometheusAlertReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrometheusAlertReply) ProtoMessage() {}

func (x *PrometheusAlertReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneHook_v1_hook_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrometheusAlertReply.ProtoReflect.Descriptor instead.
func (*PrometheusAlertReply) Descriptor() ([]byte, []int) {
	return file_oneHook_v1_hook_proto_rawDescGZIP(), []int{1}
}

func (x *PrometheusAlertReply) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

// Prometheus 告警历史
type PrometheusAlertHisReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserUuid        string `protobuf:"bytes,1,opt,name=userUuid,proto3" json:"userUuid,omitempty"`
	OrgUuid         string `protobuf:"bytes,2,opt,name=orgUuid,proto3" json:"orgUuid,omitempty"`
	ProductUuid     string `protobuf:"bytes,3,opt,name=productUuid,proto3" json:"productUuid,omitempty"`
	ProductEnvUuid  string `protobuf:"bytes,4,opt,name=productEnvUuid,proto3" json:"productEnvUuid,omitempty"` // options
	MonitorToken    string `protobuf:"bytes,5,opt,name=monitorToken,proto3" json:"monitorToken,omitempty"`     // options
	Receiver        string `protobuf:"bytes,6,opt,name=receiver,proto3" json:"receiver,omitempty"`             // 查询过程中可能不知道receiver，可以选填
	Status          string `protobuf:"bytes,7,opt,name=status,proto3" json:"status,omitempty"`
	Fingerprint     string `protobuf:"bytes,8,opt,name=fingerprint,proto3" json:"fingerprint,omitempty"`
	StartSearchTime int64  `protobuf:"varint,9,opt,name=startSearchTime,proto3" json:"startSearchTime,omitempty"`
	EndSearchTime   int64  `protobuf:"varint,10,opt,name=endSearchTime,proto3" json:"endSearchTime,omitempty"`
}

func (x *PrometheusAlertHisReq) Reset() {
	*x = PrometheusAlertHisReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneHook_v1_hook_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrometheusAlertHisReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrometheusAlertHisReq) ProtoMessage() {}

func (x *PrometheusAlertHisReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneHook_v1_hook_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrometheusAlertHisReq.ProtoReflect.Descriptor instead.
func (*PrometheusAlertHisReq) Descriptor() ([]byte, []int) {
	return file_oneHook_v1_hook_proto_rawDescGZIP(), []int{2}
}

func (x *PrometheusAlertHisReq) GetUserUuid() string {
	if x != nil {
		return x.UserUuid
	}
	return ""
}

func (x *PrometheusAlertHisReq) GetOrgUuid() string {
	if x != nil {
		return x.OrgUuid
	}
	return ""
}

func (x *PrometheusAlertHisReq) GetProductUuid() string {
	if x != nil {
		return x.ProductUuid
	}
	return ""
}

func (x *PrometheusAlertHisReq) GetProductEnvUuid() string {
	if x != nil {
		return x.ProductEnvUuid
	}
	return ""
}

func (x *PrometheusAlertHisReq) GetMonitorToken() string {
	if x != nil {
		return x.MonitorToken
	}
	return ""
}

func (x *PrometheusAlertHisReq) GetReceiver() string {
	if x != nil {
		return x.Receiver
	}
	return ""
}

func (x *PrometheusAlertHisReq) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *PrometheusAlertHisReq) GetFingerprint() string {
	if x != nil {
		return x.Fingerprint
	}
	return ""
}

func (x *PrometheusAlertHisReq) GetStartSearchTime() int64 {
	if x != nil {
		return x.StartSearchTime
	}
	return 0
}

func (x *PrometheusAlertHisReq) GetEndSearchTime() int64 {
	if x != nil {
		return x.EndSearchTime
	}
	return 0
}

type PrometheusAlertHisReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Alert []*PrometheusAlertHisReply_PrometheusAlertHis `protobuf:"bytes,1,rep,name=alert,proto3" json:"alert,omitempty"`
}

func (x *PrometheusAlertHisReply) Reset() {
	*x = PrometheusAlertHisReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneHook_v1_hook_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrometheusAlertHisReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrometheusAlertHisReply) ProtoMessage() {}

func (x *PrometheusAlertHisReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneHook_v1_hook_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrometheusAlertHisReply.ProtoReflect.Descriptor instead.
func (*PrometheusAlertHisReply) Descriptor() ([]byte, []int) {
	return file_oneHook_v1_hook_proto_rawDescGZIP(), []int{3}
}

func (x *PrometheusAlertHisReply) GetAlert() []*PrometheusAlertHisReply_PrometheusAlertHis {
	if x != nil {
		return x.Alert
	}
	return nil
}

// Prometheus 告警指纹 Fingerprint
type PrometheusAlertFingerprintReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgUuid     string `protobuf:"bytes,1,opt,name=orgUuid,proto3" json:"orgUuid,omitempty"`
	UserUuid    string `protobuf:"bytes,2,opt,name=userUuid,proto3" json:"userUuid,omitempty"`
	ProductUuid string `protobuf:"bytes,3,opt,name=productUuid,proto3" json:"productUuid,omitempty"`
	Fingerprint string `protobuf:"bytes,4,opt,name=fingerprint,proto3" json:"fingerprint,omitempty"`
}

func (x *PrometheusAlertFingerprintReq) Reset() {
	*x = PrometheusAlertFingerprintReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneHook_v1_hook_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrometheusAlertFingerprintReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrometheusAlertFingerprintReq) ProtoMessage() {}

func (x *PrometheusAlertFingerprintReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneHook_v1_hook_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrometheusAlertFingerprintReq.ProtoReflect.Descriptor instead.
func (*PrometheusAlertFingerprintReq) Descriptor() ([]byte, []int) {
	return file_oneHook_v1_hook_proto_rawDescGZIP(), []int{4}
}

func (x *PrometheusAlertFingerprintReq) GetOrgUuid() string {
	if x != nil {
		return x.OrgUuid
	}
	return ""
}

func (x *PrometheusAlertFingerprintReq) GetUserUuid() string {
	if x != nil {
		return x.UserUuid
	}
	return ""
}

func (x *PrometheusAlertFingerprintReq) GetProductUuid() string {
	if x != nil {
		return x.ProductUuid
	}
	return ""
}

func (x *PrometheusAlertFingerprintReq) GetFingerprint() string {
	if x != nil {
		return x.Fingerprint
	}
	return ""
}

type PrometheusAlertFingerprintReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AlertName    string `protobuf:"bytes,1,opt,name=alertName,proto3" json:"alertName,omitempty"`
	Instance     string `protobuf:"bytes,2,opt,name=instance,proto3" json:"instance,omitempty"`
	Job          string `protobuf:"bytes,3,opt,name=job,proto3" json:"job,omitempty"`
	Product      string `protobuf:"bytes,4,opt,name=product,proto3" json:"product,omitempty"`
	Level        int64  `protobuf:"varint,5,opt,name=level,proto3" json:"level,omitempty"`
	Receiver     string `protobuf:"bytes,6,opt,name=receiver,proto3" json:"receiver,omitempty"`
	Status       string `protobuf:"bytes,7,opt,name=status,proto3" json:"status,omitempty"`
	Lables       string `protobuf:"bytes,8,opt,name=lables,proto3" json:"lables,omitempty"`
	Annotations  string `protobuf:"bytes,9,opt,name=annotations,proto3" json:"annotations,omitempty"`
	StartAt      int64  `protobuf:"varint,10,opt,name=startAt,proto3" json:"startAt,omitempty"`
	EndAt        int64  `protobuf:"varint,11,opt,name=endAt,proto3" json:"endAt,omitempty"`
	GeneratorUrl string `protobuf:"bytes,12,opt,name=generatorUrl,proto3" json:"generatorUrl,omitempty"`
	Fingerprint  string `protobuf:"bytes,13,opt,name=fingerprint,proto3" json:"fingerprint,omitempty"`
	Ack          int64  `protobuf:"varint,14,opt,name=ack,proto3" json:"ack,omitempty"`
	AckMessage   string `protobuf:"bytes,15,opt,name=ackMessage,proto3" json:"ackMessage,omitempty"`
	AckUserUuid  string `protobuf:"bytes,16,opt,name=ackUserUuid,proto3" json:"ackUserUuid,omitempty"`
}

func (x *PrometheusAlertFingerprintReply) Reset() {
	*x = PrometheusAlertFingerprintReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneHook_v1_hook_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrometheusAlertFingerprintReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrometheusAlertFingerprintReply) ProtoMessage() {}

func (x *PrometheusAlertFingerprintReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneHook_v1_hook_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrometheusAlertFingerprintReply.ProtoReflect.Descriptor instead.
func (*PrometheusAlertFingerprintReply) Descriptor() ([]byte, []int) {
	return file_oneHook_v1_hook_proto_rawDescGZIP(), []int{5}
}

func (x *PrometheusAlertFingerprintReply) GetAlertName() string {
	if x != nil {
		return x.AlertName
	}
	return ""
}

func (x *PrometheusAlertFingerprintReply) GetInstance() string {
	if x != nil {
		return x.Instance
	}
	return ""
}

func (x *PrometheusAlertFingerprintReply) GetJob() string {
	if x != nil {
		return x.Job
	}
	return ""
}

func (x *PrometheusAlertFingerprintReply) GetProduct() string {
	if x != nil {
		return x.Product
	}
	return ""
}

func (x *PrometheusAlertFingerprintReply) GetLevel() int64 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *PrometheusAlertFingerprintReply) GetReceiver() string {
	if x != nil {
		return x.Receiver
	}
	return ""
}

func (x *PrometheusAlertFingerprintReply) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *PrometheusAlertFingerprintReply) GetLables() string {
	if x != nil {
		return x.Lables
	}
	return ""
}

func (x *PrometheusAlertFingerprintReply) GetAnnotations() string {
	if x != nil {
		return x.Annotations
	}
	return ""
}

func (x *PrometheusAlertFingerprintReply) GetStartAt() int64 {
	if x != nil {
		return x.StartAt
	}
	return 0
}

func (x *PrometheusAlertFingerprintReply) GetEndAt() int64 {
	if x != nil {
		return x.EndAt
	}
	return 0
}

func (x *PrometheusAlertFingerprintReply) GetGeneratorUrl() string {
	if x != nil {
		return x.GeneratorUrl
	}
	return ""
}

func (x *PrometheusAlertFingerprintReply) GetFingerprint() string {
	if x != nil {
		return x.Fingerprint
	}
	return ""
}

func (x *PrometheusAlertFingerprintReply) GetAck() int64 {
	if x != nil {
		return x.Ack
	}
	return 0
}

func (x *PrometheusAlertFingerprintReply) GetAckMessage() string {
	if x != nil {
		return x.AckMessage
	}
	return ""
}

func (x *PrometheusAlertFingerprintReply) GetAckUserUuid() string {
	if x != nil {
		return x.AckUserUuid
	}
	return ""
}

// Prometheus 确认告警 - Ack
type PrometheusAlertAckReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserUuid    string `protobuf:"bytes,1,opt,name=userUuid,proto3" json:"userUuid,omitempty"`
	OrgUuid     string `protobuf:"bytes,2,opt,name=orgUuid,proto3" json:"orgUuid,omitempty"`
	ProductUuid string `protobuf:"bytes,3,opt,name=productUuid,proto3" json:"productUuid,omitempty"`
	Fingerprint string `protobuf:"bytes,4,opt,name=fingerprint,proto3" json:"fingerprint,omitempty"`
	AckMessage  string `protobuf:"bytes,5,opt,name=ackMessage,proto3" json:"ackMessage,omitempty"`
	AckUserUuid string `protobuf:"bytes,6,opt,name=ackUserUuid,proto3" json:"ackUserUuid,omitempty"`
}

func (x *PrometheusAlertAckReq) Reset() {
	*x = PrometheusAlertAckReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneHook_v1_hook_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrometheusAlertAckReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrometheusAlertAckReq) ProtoMessage() {}

func (x *PrometheusAlertAckReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneHook_v1_hook_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrometheusAlertAckReq.ProtoReflect.Descriptor instead.
func (*PrometheusAlertAckReq) Descriptor() ([]byte, []int) {
	return file_oneHook_v1_hook_proto_rawDescGZIP(), []int{6}
}

func (x *PrometheusAlertAckReq) GetUserUuid() string {
	if x != nil {
		return x.UserUuid
	}
	return ""
}

func (x *PrometheusAlertAckReq) GetOrgUuid() string {
	if x != nil {
		return x.OrgUuid
	}
	return ""
}

func (x *PrometheusAlertAckReq) GetProductUuid() string {
	if x != nil {
		return x.ProductUuid
	}
	return ""
}

func (x *PrometheusAlertAckReq) GetFingerprint() string {
	if x != nil {
		return x.Fingerprint
	}
	return ""
}

func (x *PrometheusAlertAckReq) GetAckMessage() string {
	if x != nil {
		return x.AckMessage
	}
	return ""
}

func (x *PrometheusAlertAckReq) GetAckUserUuid() string {
	if x != nil {
		return x.AckUserUuid
	}
	return ""
}

type PrometheusAlertAckReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *PrometheusAlertAckReply) Reset() {
	*x = PrometheusAlertAckReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneHook_v1_hook_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrometheusAlertAckReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrometheusAlertAckReply) ProtoMessage() {}

func (x *PrometheusAlertAckReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneHook_v1_hook_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrometheusAlertAckReply.ProtoReflect.Descriptor instead.
func (*PrometheusAlertAckReply) Descriptor() ([]byte, []int) {
	return file_oneHook_v1_hook_proto_rawDescGZIP(), []int{7}
}

func (x *PrometheusAlertAckReply) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

// kubernetes event
type KubernetesEventReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgUuid                  string            `protobuf:"bytes,1,opt,name=orgUuid,proto3" json:"orgUuid,omitempty"`
	ProductUuid              string            `protobuf:"bytes,2,opt,name=productUuid,proto3" json:"productUuid,omitempty"`
	ProductEnvUuid           string            `protobuf:"bytes,3,opt,name=productEnvUuid,proto3" json:"productEnvUuid,omitempty"`
	K8SClusterUuid           string            `protobuf:"bytes,4,opt,name=k8sClusterUuid,proto3" json:"k8sClusterUuid,omitempty"`
	Token                    string            `protobuf:"bytes,5,opt,name=token,proto3" json:"token,omitempty"`
	ApiVersion               string            `protobuf:"bytes,6,opt,name=apiVersion,proto3" json:"apiVersion,omitempty"`
	Kind                     string            `protobuf:"bytes,7,opt,name=kind,proto3" json:"kind,omitempty"`
	Name                     string            `protobuf:"bytes,8,opt,name=name,proto3" json:"name,omitempty"`
	Namespace                string            `protobuf:"bytes,9,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Type                     string            `protobuf:"bytes,10,opt,name=type,proto3" json:"type,omitempty"`
	Action                   string            `protobuf:"bytes,11,opt,name=action,proto3" json:"action,omitempty"`
	Reason                   string            `protobuf:"bytes,12,opt,name=reason,proto3" json:"reason,omitempty"`
	Note                     string            `protobuf:"bytes,13,opt,name=note,proto3" json:"note,omitempty"`
	EventTime                int64             `protobuf:"varint,14,opt,name=eventTime,proto3" json:"eventTime,omitempty"`
	CreateTime               int64             `protobuf:"varint,15,opt,name=createTime,proto3" json:"createTime,omitempty"`
	Annotations              map[string]string `protobuf:"bytes,16,rep,name=annotations,proto3" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ResourceVersion          string            `protobuf:"bytes,17,opt,name=resourceVersion,proto3" json:"resourceVersion,omitempty"`
	RegardingKind            string            `protobuf:"bytes,18,opt,name=regardingKind,proto3" json:"regardingKind,omitempty"`
	RegardingNamespace       string            `protobuf:"bytes,19,opt,name=regardingNamespace,proto3" json:"regardingNamespace,omitempty"`
	RegardingName            string            `protobuf:"bytes,20,opt,name=regardingName,proto3" json:"regardingName,omitempty"`
	RegardingUid             string            `protobuf:"bytes,21,opt,name=regardingUid,proto3" json:"regardingUid,omitempty"`
	RegardingAPIVersion      string            `protobuf:"bytes,22,opt,name=regardingAPIVersion,proto3" json:"regardingAPIVersion,omitempty"`
	RegardingResourceVersion string            `protobuf:"bytes,23,opt,name=regardingResourceVersion,proto3" json:"regardingResourceVersion,omitempty"`
	RegardingFieldPath       string            `protobuf:"bytes,24,opt,name=regardingFieldPath,proto3" json:"regardingFieldPath,omitempty"`
}

func (x *KubernetesEventReq) Reset() {
	*x = KubernetesEventReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneHook_v1_hook_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KubernetesEventReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KubernetesEventReq) ProtoMessage() {}

func (x *KubernetesEventReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneHook_v1_hook_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KubernetesEventReq.ProtoReflect.Descriptor instead.
func (*KubernetesEventReq) Descriptor() ([]byte, []int) {
	return file_oneHook_v1_hook_proto_rawDescGZIP(), []int{8}
}

func (x *KubernetesEventReq) GetOrgUuid() string {
	if x != nil {
		return x.OrgUuid
	}
	return ""
}

func (x *KubernetesEventReq) GetProductUuid() string {
	if x != nil {
		return x.ProductUuid
	}
	return ""
}

func (x *KubernetesEventReq) GetProductEnvUuid() string {
	if x != nil {
		return x.ProductEnvUuid
	}
	return ""
}

func (x *KubernetesEventReq) GetK8SClusterUuid() string {
	if x != nil {
		return x.K8SClusterUuid
	}
	return ""
}

func (x *KubernetesEventReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *KubernetesEventReq) GetApiVersion() string {
	if x != nil {
		return x.ApiVersion
	}
	return ""
}

func (x *KubernetesEventReq) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *KubernetesEventReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *KubernetesEventReq) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *KubernetesEventReq) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *KubernetesEventReq) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *KubernetesEventReq) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *KubernetesEventReq) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

func (x *KubernetesEventReq) GetEventTime() int64 {
	if x != nil {
		return x.EventTime
	}
	return 0
}

func (x *KubernetesEventReq) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *KubernetesEventReq) GetAnnotations() map[string]string {
	if x != nil {
		return x.Annotations
	}
	return nil
}

func (x *KubernetesEventReq) GetResourceVersion() string {
	if x != nil {
		return x.ResourceVersion
	}
	return ""
}

func (x *KubernetesEventReq) GetRegardingKind() string {
	if x != nil {
		return x.RegardingKind
	}
	return ""
}

func (x *KubernetesEventReq) GetRegardingNamespace() string {
	if x != nil {
		return x.RegardingNamespace
	}
	return ""
}

func (x *KubernetesEventReq) GetRegardingName() string {
	if x != nil {
		return x.RegardingName
	}
	return ""
}

func (x *KubernetesEventReq) GetRegardingUid() string {
	if x != nil {
		return x.RegardingUid
	}
	return ""
}

func (x *KubernetesEventReq) GetRegardingAPIVersion() string {
	if x != nil {
		return x.RegardingAPIVersion
	}
	return ""
}

func (x *KubernetesEventReq) GetRegardingResourceVersion() string {
	if x != nil {
		return x.RegardingResourceVersion
	}
	return ""
}

func (x *KubernetesEventReq) GetRegardingFieldPath() string {
	if x != nil {
		return x.RegardingFieldPath
	}
	return ""
}

type KubernetesEventReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *KubernetesEventReply) Reset() {
	*x = KubernetesEventReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneHook_v1_hook_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KubernetesEventReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KubernetesEventReply) ProtoMessage() {}

func (x *KubernetesEventReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneHook_v1_hook_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KubernetesEventReply.ProtoReflect.Descriptor instead.
func (*KubernetesEventReply) Descriptor() ([]byte, []int) {
	return file_oneHook_v1_hook_proto_rawDescGZIP(), []int{9}
}

func (x *KubernetesEventReply) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

type GetKubernetesEventReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserUuid       string `protobuf:"bytes,1,opt,name=userUuid,proto3" json:"userUuid,omitempty"`
	OrgUuid        string `protobuf:"bytes,2,opt,name=orgUuid,proto3" json:"orgUuid,omitempty"`
	ProductUuid    string `protobuf:"bytes,3,opt,name=productUuid,proto3" json:"productUuid,omitempty"`
	ProductEnvUuid string `protobuf:"bytes,4,opt,name=productEnvUuid,proto3" json:"productEnvUuid,omitempty"`
	K8SClusterUuid string `protobuf:"bytes,5,opt,name=k8sClusterUuid,proto3" json:"k8sClusterUuid,omitempty"`
	Namespace      string `protobuf:"bytes,6,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Type           string `protobuf:"bytes,7,opt,name=type,proto3" json:"type,omitempty"`
	CreateTime     int64  `protobuf:"varint,8,opt,name=createTime,proto3" json:"createTime,omitempty"`
	RegardingKind  string `protobuf:"bytes,9,opt,name=regardingKind,proto3" json:"regardingKind,omitempty"`
	RegardingName  string `protobuf:"bytes,10,opt,name=regardingName,proto3" json:"regardingName,omitempty"`
	RegardingUid   string `protobuf:"bytes,11,opt,name=regardingUid,proto3" json:"regardingUid,omitempty"`
}

func (x *GetKubernetesEventReq) Reset() {
	*x = GetKubernetesEventReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneHook_v1_hook_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetKubernetesEventReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKubernetesEventReq) ProtoMessage() {}

func (x *GetKubernetesEventReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneHook_v1_hook_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKubernetesEventReq.ProtoReflect.Descriptor instead.
func (*GetKubernetesEventReq) Descriptor() ([]byte, []int) {
	return file_oneHook_v1_hook_proto_rawDescGZIP(), []int{10}
}

func (x *GetKubernetesEventReq) GetUserUuid() string {
	if x != nil {
		return x.UserUuid
	}
	return ""
}

func (x *GetKubernetesEventReq) GetOrgUuid() string {
	if x != nil {
		return x.OrgUuid
	}
	return ""
}

func (x *GetKubernetesEventReq) GetProductUuid() string {
	if x != nil {
		return x.ProductUuid
	}
	return ""
}

func (x *GetKubernetesEventReq) GetProductEnvUuid() string {
	if x != nil {
		return x.ProductEnvUuid
	}
	return ""
}

func (x *GetKubernetesEventReq) GetK8SClusterUuid() string {
	if x != nil {
		return x.K8SClusterUuid
	}
	return ""
}

func (x *GetKubernetesEventReq) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *GetKubernetesEventReq) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *GetKubernetesEventReq) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *GetKubernetesEventReq) GetRegardingKind() string {
	if x != nil {
		return x.RegardingKind
	}
	return ""
}

func (x *GetKubernetesEventReq) GetRegardingName() string {
	if x != nil {
		return x.RegardingName
	}
	return ""
}

func (x *GetKubernetesEventReq) GetRegardingUid() string {
	if x != nil {
		return x.RegardingUid
	}
	return ""
}

type GetKubernetesEventReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Events []*GetKubernetesEventReply_KubernetesEvent `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
}

func (x *GetKubernetesEventReply) Reset() {
	*x = GetKubernetesEventReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneHook_v1_hook_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetKubernetesEventReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKubernetesEventReply) ProtoMessage() {}

func (x *GetKubernetesEventReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneHook_v1_hook_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKubernetesEventReply.ProtoReflect.Descriptor instead.
func (*GetKubernetesEventReply) Descriptor() ([]byte, []int) {
	return file_oneHook_v1_hook_proto_rawDescGZIP(), []int{11}
}

func (x *GetKubernetesEventReply) GetEvents() []*GetKubernetesEventReply_KubernetesEvent {
	if x != nil {
		return x.Events
	}
	return nil
}

type CreateMonitorReceiverReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserUuid         string `protobuf:"bytes,1,opt,name=userUuid,proto3" json:"userUuid,omitempty"`
	OrgUuid          string `protobuf:"bytes,2,opt,name=orgUuid,proto3" json:"orgUuid,omitempty"`
	ProductUuid      string `protobuf:"bytes,3,opt,name=productUuid,proto3" json:"productUuid,omitempty"`
	Receiver         string `protobuf:"bytes,4,opt,name=receiver,proto3" json:"receiver,omitempty"`
	MessageGroupUuid string `protobuf:"bytes,5,opt,name=messageGroupUuid,proto3" json:"messageGroupUuid,omitempty"`
}

func (x *CreateMonitorReceiverReq) Reset() {
	*x = CreateMonitorReceiverReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneHook_v1_hook_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMonitorReceiverReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMonitorReceiverReq) ProtoMessage() {}

func (x *CreateMonitorReceiverReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneHook_v1_hook_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMonitorReceiverReq.ProtoReflect.Descriptor instead.
func (*CreateMonitorReceiverReq) Descriptor() ([]byte, []int) {
	return file_oneHook_v1_hook_proto_rawDescGZIP(), []int{12}
}

func (x *CreateMonitorReceiverReq) GetUserUuid() string {
	if x != nil {
		return x.UserUuid
	}
	return ""
}

func (x *CreateMonitorReceiverReq) GetOrgUuid() string {
	if x != nil {
		return x.OrgUuid
	}
	return ""
}

func (x *CreateMonitorReceiverReq) GetProductUuid() string {
	if x != nil {
		return x.ProductUuid
	}
	return ""
}

func (x *CreateMonitorReceiverReq) GetReceiver() string {
	if x != nil {
		return x.Receiver
	}
	return ""
}

func (x *CreateMonitorReceiverReq) GetMessageGroupUuid() string {
	if x != nil {
		return x.MessageGroupUuid
	}
	return ""
}

type CreateMonitorReceiverReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *CreateMonitorReceiverReply) Reset() {
	*x = CreateMonitorReceiverReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneHook_v1_hook_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMonitorReceiverReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMonitorReceiverReply) ProtoMessage() {}

func (x *CreateMonitorReceiverReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneHook_v1_hook_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMonitorReceiverReply.ProtoReflect.Descriptor instead.
func (*CreateMonitorReceiverReply) Descriptor() ([]byte, []int) {
	return file_oneHook_v1_hook_proto_rawDescGZIP(), []int{13}
}

func (x *CreateMonitorReceiverReply) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

type ListMonitorReceiverReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserUuid    string `protobuf:"bytes,1,opt,name=userUuid,proto3" json:"userUuid,omitempty"`
	OrgUuid     string `protobuf:"bytes,2,opt,name=orgUuid,proto3" json:"orgUuid,omitempty"`
	ProductUuid string `protobuf:"bytes,3,opt,name=productUuid,proto3" json:"productUuid,omitempty"`
}

func (x *ListMonitorReceiverReq) Reset() {
	*x = ListMonitorReceiverReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneHook_v1_hook_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMonitorReceiverReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMonitorReceiverReq) ProtoMessage() {}

func (x *ListMonitorReceiverReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneHook_v1_hook_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMonitorReceiverReq.ProtoReflect.Descriptor instead.
func (*ListMonitorReceiverReq) Descriptor() ([]byte, []int) {
	return file_oneHook_v1_hook_proto_rawDescGZIP(), []int{14}
}

func (x *ListMonitorReceiverReq) GetUserUuid() string {
	if x != nil {
		return x.UserUuid
	}
	return ""
}

func (x *ListMonitorReceiverReq) GetOrgUuid() string {
	if x != nil {
		return x.OrgUuid
	}
	return ""
}

func (x *ListMonitorReceiverReq) GetProductUuid() string {
	if x != nil {
		return x.ProductUuid
	}
	return ""
}

type ListMonitorReceiverReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MonitorReceiver []*ListMonitorReceiverReply_MonitorReceiver `protobuf:"bytes,1,rep,name=monitorReceiver,proto3" json:"monitorReceiver,omitempty"`
}

func (x *ListMonitorReceiverReply) Reset() {
	*x = ListMonitorReceiverReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneHook_v1_hook_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMonitorReceiverReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMonitorReceiverReply) ProtoMessage() {}

func (x *ListMonitorReceiverReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneHook_v1_hook_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMonitorReceiverReply.ProtoReflect.Descriptor instead.
func (*ListMonitorReceiverReply) Descriptor() ([]byte, []int) {
	return file_oneHook_v1_hook_proto_rawDescGZIP(), []int{15}
}

func (x *ListMonitorReceiverReply) GetMonitorReceiver() []*ListMonitorReceiverReply_MonitorReceiver {
	if x != nil {
		return x.MonitorReceiver
	}
	return nil
}

type DelMonitorReceiverReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserUuid     string `protobuf:"bytes,1,opt,name=userUuid,proto3" json:"userUuid,omitempty"`
	OrgUuid      string `protobuf:"bytes,2,opt,name=orgUuid,proto3" json:"orgUuid,omitempty"`
	ProductUuid  string `protobuf:"bytes,3,opt,name=productUuid,proto3" json:"productUuid,omitempty"`
	ReceiverUuid string `protobuf:"bytes,4,opt,name=receiverUuid,proto3" json:"receiverUuid,omitempty"`
}

func (x *DelMonitorReceiverReq) Reset() {
	*x = DelMonitorReceiverReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneHook_v1_hook_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelMonitorReceiverReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelMonitorReceiverReq) ProtoMessage() {}

func (x *DelMonitorReceiverReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneHook_v1_hook_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelMonitorReceiverReq.ProtoReflect.Descriptor instead.
func (*DelMonitorReceiverReq) Descriptor() ([]byte, []int) {
	return file_oneHook_v1_hook_proto_rawDescGZIP(), []int{16}
}

func (x *DelMonitorReceiverReq) GetUserUuid() string {
	if x != nil {
		return x.UserUuid
	}
	return ""
}

func (x *DelMonitorReceiverReq) GetOrgUuid() string {
	if x != nil {
		return x.OrgUuid
	}
	return ""
}

func (x *DelMonitorReceiverReq) GetProductUuid() string {
	if x != nil {
		return x.ProductUuid
	}
	return ""
}

func (x *DelMonitorReceiverReq) GetReceiverUuid() string {
	if x != nil {
		return x.ReceiverUuid
	}
	return ""
}

type DelMonitorReceiverReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *DelMonitorReceiverReply) Reset() {
	*x = DelMonitorReceiverReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneHook_v1_hook_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelMonitorReceiverReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelMonitorReceiverReply) ProtoMessage() {}

func (x *DelMonitorReceiverReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneHook_v1_hook_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelMonitorReceiverReply.ProtoReflect.Descriptor instead.
func (*DelMonitorReceiverReply) Descriptor() ([]byte, []int) {
	return file_oneHook_v1_hook_proto_rawDescGZIP(), []int{17}
}

func (x *DelMonitorReceiverReply) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

type CreateKubernetesEventReceiverReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserUuid         string `protobuf:"bytes,1,opt,name=userUuid,proto3" json:"userUuid,omitempty"`
	OrgUuid          string `protobuf:"bytes,2,opt,name=orgUuid,proto3" json:"orgUuid,omitempty"`
	ProductUuid      string `protobuf:"bytes,3,opt,name=productUuid,proto3" json:"productUuid,omitempty"`
	K8SClusterUuid   string `protobuf:"bytes,4,opt,name=k8sClusterUuid,proto3" json:"k8sClusterUuid,omitempty"`
	MessageGroupUuid string `protobuf:"bytes,5,opt,name=messageGroupUuid,proto3" json:"messageGroupUuid,omitempty"`
}

func (x *CreateKubernetesEventReceiverReq) Reset() {
	*x = CreateKubernetesEventReceiverReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneHook_v1_hook_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateKubernetesEventReceiverReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateKubernetesEventReceiverReq) ProtoMessage() {}

func (x *CreateKubernetesEventReceiverReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneHook_v1_hook_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateKubernetesEventReceiverReq.ProtoReflect.Descriptor instead.
func (*CreateKubernetesEventReceiverReq) Descriptor() ([]byte, []int) {
	return file_oneHook_v1_hook_proto_rawDescGZIP(), []int{18}
}

func (x *CreateKubernetesEventReceiverReq) GetUserUuid() string {
	if x != nil {
		return x.UserUuid
	}
	return ""
}

func (x *CreateKubernetesEventReceiverReq) GetOrgUuid() string {
	if x != nil {
		return x.OrgUuid
	}
	return ""
}

func (x *CreateKubernetesEventReceiverReq) GetProductUuid() string {
	if x != nil {
		return x.ProductUuid
	}
	return ""
}

func (x *CreateKubernetesEventReceiverReq) GetK8SClusterUuid() string {
	if x != nil {
		return x.K8SClusterUuid
	}
	return ""
}

func (x *CreateKubernetesEventReceiverReq) GetMessageGroupUuid() string {
	if x != nil {
		return x.MessageGroupUuid
	}
	return ""
}

type CreateKubernetesEventReceiverReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *CreateKubernetesEventReceiverReply) Reset() {
	*x = CreateKubernetesEventReceiverReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneHook_v1_hook_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateKubernetesEventReceiverReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateKubernetesEventReceiverReply) ProtoMessage() {}

func (x *CreateKubernetesEventReceiverReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneHook_v1_hook_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateKubernetesEventReceiverReply.ProtoReflect.Descriptor instead.
func (*CreateKubernetesEventReceiverReply) Descriptor() ([]byte, []int) {
	return file_oneHook_v1_hook_proto_rawDescGZIP(), []int{19}
}

func (x *CreateKubernetesEventReceiverReply) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

type GetKubernetesEventReceiverReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserUuid       string `protobuf:"bytes,1,opt,name=userUuid,proto3" json:"userUuid,omitempty"`
	OrgUuid        string `protobuf:"bytes,2,opt,name=orgUuid,proto3" json:"orgUuid,omitempty"`
	ProductUuid    string `protobuf:"bytes,3,opt,name=productUuid,proto3" json:"productUuid,omitempty"`
	K8SClusterUuid string `protobuf:"bytes,4,opt,name=k8sClusterUuid,proto3" json:"k8sClusterUuid,omitempty"`
}

func (x *GetKubernetesEventReceiverReq) Reset() {
	*x = GetKubernetesEventReceiverReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneHook_v1_hook_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetKubernetesEventReceiverReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKubernetesEventReceiverReq) ProtoMessage() {}

func (x *GetKubernetesEventReceiverReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneHook_v1_hook_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKubernetesEventReceiverReq.ProtoReflect.Descriptor instead.
func (*GetKubernetesEventReceiverReq) Descriptor() ([]byte, []int) {
	return file_oneHook_v1_hook_proto_rawDescGZIP(), []int{20}
}

func (x *GetKubernetesEventReceiverReq) GetUserUuid() string {
	if x != nil {
		return x.UserUuid
	}
	return ""
}

func (x *GetKubernetesEventReceiverReq) GetOrgUuid() string {
	if x != nil {
		return x.OrgUuid
	}
	return ""
}

func (x *GetKubernetesEventReceiverReq) GetProductUuid() string {
	if x != nil {
		return x.ProductUuid
	}
	return ""
}

func (x *GetKubernetesEventReceiverReq) GetK8SClusterUuid() string {
	if x != nil {
		return x.K8SClusterUuid
	}
	return ""
}

type GetKubernetesEventReceiverReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KubernetesEventReceiver []*GetKubernetesEventReceiverReply_KubernetesEventReceiver `protobuf:"bytes,1,rep,name=kubernetesEventReceiver,proto3" json:"kubernetesEventReceiver,omitempty"`
}

func (x *GetKubernetesEventReceiverReply) Reset() {
	*x = GetKubernetesEventReceiverReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneHook_v1_hook_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetKubernetesEventReceiverReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKubernetesEventReceiverReply) ProtoMessage() {}

func (x *GetKubernetesEventReceiverReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneHook_v1_hook_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKubernetesEventReceiverReply.ProtoReflect.Descriptor instead.
func (*GetKubernetesEventReceiverReply) Descriptor() ([]byte, []int) {
	return file_oneHook_v1_hook_proto_rawDescGZIP(), []int{21}
}

func (x *GetKubernetesEventReceiverReply) GetKubernetesEventReceiver() []*GetKubernetesEventReceiverReply_KubernetesEventReceiver {
	if x != nil {
		return x.KubernetesEventReceiver
	}
	return nil
}

type DelKubernetesEventReceiverReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserUuid       string `protobuf:"bytes,1,opt,name=userUuid,proto3" json:"userUuid,omitempty"`
	OrgUuid        string `protobuf:"bytes,2,opt,name=orgUuid,proto3" json:"orgUuid,omitempty"`
	ProductUuid    string `protobuf:"bytes,3,opt,name=productUuid,proto3" json:"productUuid,omitempty"`
	K8SClusterUuid string `protobuf:"bytes,4,opt,name=k8sClusterUuid,proto3" json:"k8sClusterUuid,omitempty"`
	ReceiverUuid   string `protobuf:"bytes,5,opt,name=receiverUuid,proto3" json:"receiverUuid,omitempty"`
}

func (x *DelKubernetesEventReceiverReq) Reset() {
	*x = DelKubernetesEventReceiverReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneHook_v1_hook_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelKubernetesEventReceiverReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelKubernetesEventReceiverReq) ProtoMessage() {}

func (x *DelKubernetesEventReceiverReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneHook_v1_hook_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelKubernetesEventReceiverReq.ProtoReflect.Descriptor instead.
func (*DelKubernetesEventReceiverReq) Descriptor() ([]byte, []int) {
	return file_oneHook_v1_hook_proto_rawDescGZIP(), []int{22}
}

func (x *DelKubernetesEventReceiverReq) GetUserUuid() string {
	if x != nil {
		return x.UserUuid
	}
	return ""
}

func (x *DelKubernetesEventReceiverReq) GetOrgUuid() string {
	if x != nil {
		return x.OrgUuid
	}
	return ""
}

func (x *DelKubernetesEventReceiverReq) GetProductUuid() string {
	if x != nil {
		return x.ProductUuid
	}
	return ""
}

func (x *DelKubernetesEventReceiverReq) GetK8SClusterUuid() string {
	if x != nil {
		return x.K8SClusterUuid
	}
	return ""
}

func (x *DelKubernetesEventReceiverReq) GetReceiverUuid() string {
	if x != nil {
		return x.ReceiverUuid
	}
	return ""
}

type DelKubernetesEventReceiverReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *DelKubernetesEventReceiverReply) Reset() {
	*x = DelKubernetesEventReceiverReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneHook_v1_hook_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelKubernetesEventReceiverReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelKubernetesEventReceiverReply) ProtoMessage() {}

func (x *DelKubernetesEventReceiverReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneHook_v1_hook_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelKubernetesEventReceiverReply.ProtoReflect.Descriptor instead.
func (*DelKubernetesEventReceiverReply) Descriptor() ([]byte, []int) {
	return file_oneHook_v1_hook_proto_rawDescGZIP(), []int{23}
}

func (x *DelKubernetesEventReceiverReply) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

// skywalking 告警
type SkywalkingAlertReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgUuid string `protobuf:"bytes,1,opt,name=orgUuid,proto3" json:"orgUuid,omitempty"`
}

func (x *SkywalkingAlertReq) Reset() {
	*x = SkywalkingAlertReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneHook_v1_hook_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SkywalkingAlertReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SkywalkingAlertReq) ProtoMessage() {}

func (x *SkywalkingAlertReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneHook_v1_hook_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SkywalkingAlertReq.ProtoReflect.Descriptor instead.
func (*SkywalkingAlertReq) Descriptor() ([]byte, []int) {
	return file_oneHook_v1_hook_proto_rawDescGZIP(), []int{24}
}

func (x *SkywalkingAlertReq) GetOrgUuid() string {
	if x != nil {
		return x.OrgUuid
	}
	return ""
}

type SkywalkingAlertReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SkywalkingAlertReply) Reset() {
	*x = SkywalkingAlertReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneHook_v1_hook_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SkywalkingAlertReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SkywalkingAlertReply) ProtoMessage() {}

func (x *SkywalkingAlertReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneHook_v1_hook_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SkywalkingAlertReply.ProtoReflect.Descriptor instead.
func (*SkywalkingAlertReply) Descriptor() ([]byte, []int) {
	return file_oneHook_v1_hook_proto_rawDescGZIP(), []int{25}
}

// 系统审计
type SystemAuditReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgUuid string `protobuf:"bytes,1,opt,name=orgUuid,proto3" json:"orgUuid,omitempty"`
}

func (x *SystemAuditReq) Reset() {
	*x = SystemAuditReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneHook_v1_hook_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemAuditReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemAuditReq) ProtoMessage() {}

func (x *SystemAuditReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneHook_v1_hook_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemAuditReq.ProtoReflect.Descriptor instead.
func (*SystemAuditReq) Descriptor() ([]byte, []int) {
	return file_oneHook_v1_hook_proto_rawDescGZIP(), []int{26}
}

func (x *SystemAuditReq) GetOrgUuid() string {
	if x != nil {
		return x.OrgUuid
	}
	return ""
}

type SystemAuditReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SystemAuditReply) Reset() {
	*x = SystemAuditReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneHook_v1_hook_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemAuditReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemAuditReply) ProtoMessage() {}

func (x *SystemAuditReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneHook_v1_hook_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemAuditReply.ProtoReflect.Descriptor instead.
func (*SystemAuditReply) Descriptor() ([]byte, []int) {
	return file_oneHook_v1_hook_proto_rawDescGZIP(), []int{27}
}

type DatabaseDDLSQLAuditReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgUuid string `protobuf:"bytes,1,opt,name=orgUuid,proto3" json:"orgUuid,omitempty"`
	Sql     string `protobuf:"bytes,2,opt,name=sql,proto3" json:"sql,omitempty"`
	User    string `protobuf:"bytes,3,opt,name=user,proto3" json:"user,omitempty"`
	Jdbc    string `protobuf:"bytes,4,opt,name=jdbc,proto3" json:"jdbc,omitempty"`
}

func (x *DatabaseDDLSQLAuditReq) Reset() {
	*x = DatabaseDDLSQLAuditReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneHook_v1_hook_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DatabaseDDLSQLAuditReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatabaseDDLSQLAuditReq) ProtoMessage() {}

func (x *DatabaseDDLSQLAuditReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneHook_v1_hook_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatabaseDDLSQLAuditReq.ProtoReflect.Descriptor instead.
func (*DatabaseDDLSQLAuditReq) Descriptor() ([]byte, []int) {
	return file_oneHook_v1_hook_proto_rawDescGZIP(), []int{28}
}

func (x *DatabaseDDLSQLAuditReq) GetOrgUuid() string {
	if x != nil {
		return x.OrgUuid
	}
	return ""
}

func (x *DatabaseDDLSQLAuditReq) GetSql() string {
	if x != nil {
		return x.Sql
	}
	return ""
}

func (x *DatabaseDDLSQLAuditReq) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *DatabaseDDLSQLAuditReq) GetJdbc() string {
	if x != nil {
		return x.Jdbc
	}
	return ""
}

type DatabaseDDLSQLAuditReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DatabaseDDLSQLAuditReply) Reset() {
	*x = DatabaseDDLSQLAuditReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneHook_v1_hook_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DatabaseDDLSQLAuditReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatabaseDDLSQLAuditReply) ProtoMessage() {}

func (x *DatabaseDDLSQLAuditReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneHook_v1_hook_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatabaseDDLSQLAuditReply.ProtoReflect.Descriptor instead.
func (*DatabaseDDLSQLAuditReply) Descriptor() ([]byte, []int) {
	return file_oneHook_v1_hook_proto_rawDescGZIP(), []int{29}
}

type CloudSubScribeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgUuid string `protobuf:"bytes,1,opt,name=orgUuid,proto3" json:"orgUuid,omitempty"`
}

func (x *CloudSubScribeReq) Reset() {
	*x = CloudSubScribeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneHook_v1_hook_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloudSubScribeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloudSubScribeReq) ProtoMessage() {}

func (x *CloudSubScribeReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneHook_v1_hook_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloudSubScribeReq.ProtoReflect.Descriptor instead.
func (*CloudSubScribeReq) Descriptor() ([]byte, []int) {
	return file_oneHook_v1_hook_proto_rawDescGZIP(), []int{30}
}

func (x *CloudSubScribeReq) GetOrgUuid() string {
	if x != nil {
		return x.OrgUuid
	}
	return ""
}

type CloudSubScribeReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CloudSubScribeReply) Reset() {
	*x = CloudSubScribeReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneHook_v1_hook_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloudSubScribeReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloudSubScribeReply) ProtoMessage() {}

func (x *CloudSubScribeReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneHook_v1_hook_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloudSubScribeReply.ProtoReflect.Descriptor instead.
func (*CloudSubScribeReply) Descriptor() ([]byte, []int) {
	return file_oneHook_v1_hook_proto_rawDescGZIP(), []int{31}
}

// 生成 web 诊断
type GenerateWebDiagUrlReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserUuid    string   `protobuf:"bytes,1,opt,name=userUuid,proto3" json:"userUuid,omitempty"`
	OrgUuid     string   `protobuf:"bytes,2,opt,name=orgUuid,proto3" json:"orgUuid,omitempty"`
	ProductUuid string   `protobuf:"bytes,3,opt,name=productUuid,proto3" json:"productUuid,omitempty"`
	Urls        []string `protobuf:"bytes,4,rep,name=urls,proto3" json:"urls,omitempty"`
}

func (x *GenerateWebDiagUrlReq) Reset() {
	*x = GenerateWebDiagUrlReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneHook_v1_hook_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateWebDiagUrlReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateWebDiagUrlReq) ProtoMessage() {}

func (x *GenerateWebDiagUrlReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneHook_v1_hook_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateWebDiagUrlReq.ProtoReflect.Descriptor instead.
func (*GenerateWebDiagUrlReq) Descriptor() ([]byte, []int) {
	return file_oneHook_v1_hook_proto_rawDescGZIP(), []int{32}
}

func (x *GenerateWebDiagUrlReq) GetUserUuid() string {
	if x != nil {
		return x.UserUuid
	}
	return ""
}

func (x *GenerateWebDiagUrlReq) GetOrgUuid() string {
	if x != nil {
		return x.OrgUuid
	}
	return ""
}

func (x *GenerateWebDiagUrlReq) GetProductUuid() string {
	if x != nil {
		return x.ProductUuid
	}
	return ""
}

func (x *GenerateWebDiagUrlReq) GetUrls() []string {
	if x != nil {
		return x.Urls
	}
	return nil
}

type GenerateWebDiagUrlReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *GenerateWebDiagUrlReply) Reset() {
	*x = GenerateWebDiagUrlReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneHook_v1_hook_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateWebDiagUrlReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateWebDiagUrlReply) ProtoMessage() {}

func (x *GenerateWebDiagUrlReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneHook_v1_hook_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateWebDiagUrlReply.ProtoReflect.Descriptor instead.
func (*GenerateWebDiagUrlReply) Descriptor() ([]byte, []int) {
	return file_oneHook_v1_hook_proto_rawDescGZIP(), []int{33}
}

func (x *GenerateWebDiagUrlReply) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

// web 诊断
type WebDiagReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg string `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *WebDiagReq) Reset() {
	*x = WebDiagReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneHook_v1_hook_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebDiagReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebDiagReq) ProtoMessage() {}

func (x *WebDiagReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneHook_v1_hook_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebDiagReq.ProtoReflect.Descriptor instead.
func (*WebDiagReq) Descriptor() ([]byte, []int) {
	return file_oneHook_v1_hook_proto_rawDescGZIP(), []int{34}
}

func (x *WebDiagReq) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type WebDiagReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *WebDiagReply) Reset() {
	*x = WebDiagReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneHook_v1_hook_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebDiagReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebDiagReply) ProtoMessage() {}

func (x *WebDiagReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneHook_v1_hook_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebDiagReply.ProtoReflect.Descriptor instead.
func (*WebDiagReply) Descriptor() ([]byte, []int) {
	return file_oneHook_v1_hook_proto_rawDescGZIP(), []int{35}
}

func (x *WebDiagReply) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type PrometheusAlertReq_PrometheusAlert struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status       string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Labels       string `protobuf:"bytes,2,opt,name=labels,proto3" json:"labels,omitempty"`
	Annotations  string `protobuf:"bytes,3,opt,name=annotations,proto3" json:"annotations,omitempty"`
	StartsAt     int64  `protobuf:"varint,4,opt,name=startsAt,proto3" json:"startsAt,omitempty"`
	EndsAt       int64  `protobuf:"varint,5,opt,name=endsAt,proto3" json:"endsAt,omitempty"`
	GeneratorURL string `protobuf:"bytes,6,opt,name=generatorURL,proto3" json:"generatorURL,omitempty"`
	Fingerprint  string `protobuf:"bytes,7,opt,name=fingerprint,proto3" json:"fingerprint,omitempty"` // 可能为空，目前不直接使用，采用自己计算方式
}

func (x *PrometheusAlertReq_PrometheusAlert) Reset() {
	*x = PrometheusAlertReq_PrometheusAlert{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneHook_v1_hook_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrometheusAlertReq_PrometheusAlert) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrometheusAlertReq_PrometheusAlert) ProtoMessage() {}

func (x *PrometheusAlertReq_PrometheusAlert) ProtoReflect() protoreflect.Message {
	mi := &file_oneHook_v1_hook_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrometheusAlertReq_PrometheusAlert.ProtoReflect.Descriptor instead.
func (*PrometheusAlertReq_PrometheusAlert) Descriptor() ([]byte, []int) {
	return file_oneHook_v1_hook_proto_rawDescGZIP(), []int{0, 0}
}

func (x *PrometheusAlertReq_PrometheusAlert) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *PrometheusAlertReq_PrometheusAlert) GetLabels() string {
	if x != nil {
		return x.Labels
	}
	return ""
}

func (x *PrometheusAlertReq_PrometheusAlert) GetAnnotations() string {
	if x != nil {
		return x.Annotations
	}
	return ""
}

func (x *PrometheusAlertReq_PrometheusAlert) GetStartsAt() int64 {
	if x != nil {
		return x.StartsAt
	}
	return 0
}

func (x *PrometheusAlertReq_PrometheusAlert) GetEndsAt() int64 {
	if x != nil {
		return x.EndsAt
	}
	return 0
}

func (x *PrometheusAlertReq_PrometheusAlert) GetGeneratorURL() string {
	if x != nil {
		return x.GeneratorURL
	}
	return ""
}

func (x *PrometheusAlertReq_PrometheusAlert) GetFingerprint() string {
	if x != nil {
		return x.Fingerprint
	}
	return ""
}

type PrometheusAlertHisReply_PrometheusAlertHis struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AlertName    string `protobuf:"bytes,1,opt,name=alertName,proto3" json:"alertName,omitempty"`
	Instance     string `protobuf:"bytes,2,opt,name=instance,proto3" json:"instance,omitempty"`
	Job          string `protobuf:"bytes,3,opt,name=job,proto3" json:"job,omitempty"`
	Product      string `protobuf:"bytes,4,opt,name=product,proto3" json:"product,omitempty"`
	Level        int64  `protobuf:"varint,5,opt,name=level,proto3" json:"level,omitempty"`
	Receiver     string `protobuf:"bytes,6,opt,name=receiver,proto3" json:"receiver,omitempty"`
	Status       string `protobuf:"bytes,7,opt,name=status,proto3" json:"status,omitempty"`
	Lables       string `protobuf:"bytes,8,opt,name=lables,proto3" json:"lables,omitempty"`
	Annotations  string `protobuf:"bytes,9,opt,name=annotations,proto3" json:"annotations,omitempty"`
	StartAt      int64  `protobuf:"varint,10,opt,name=startAt,proto3" json:"startAt,omitempty"`
	EndAt        int64  `protobuf:"varint,11,opt,name=endAt,proto3" json:"endAt,omitempty"`
	GeneratorUrl string `protobuf:"bytes,12,opt,name=generatorUrl,proto3" json:"generatorUrl,omitempty"`
	Fingerprint  string `protobuf:"bytes,13,opt,name=fingerprint,proto3" json:"fingerprint,omitempty"`
	Ack          int64  `protobuf:"varint,14,opt,name=ack,proto3" json:"ack,omitempty"`
	AckMessage   string `protobuf:"bytes,15,opt,name=ackMessage,proto3" json:"ackMessage,omitempty"`
	AckUserUuid  string `protobuf:"bytes,16,opt,name=ackUserUuid,proto3" json:"ackUserUuid,omitempty"`
}

func (x *PrometheusAlertHisReply_PrometheusAlertHis) Reset() {
	*x = PrometheusAlertHisReply_PrometheusAlertHis{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneHook_v1_hook_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrometheusAlertHisReply_PrometheusAlertHis) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrometheusAlertHisReply_PrometheusAlertHis) ProtoMessage() {}

func (x *PrometheusAlertHisReply_PrometheusAlertHis) ProtoReflect() protoreflect.Message {
	mi := &file_oneHook_v1_hook_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrometheusAlertHisReply_PrometheusAlertHis.ProtoReflect.Descriptor instead.
func (*PrometheusAlertHisReply_PrometheusAlertHis) Descriptor() ([]byte, []int) {
	return file_oneHook_v1_hook_proto_rawDescGZIP(), []int{3, 0}
}

func (x *PrometheusAlertHisReply_PrometheusAlertHis) GetAlertName() string {
	if x != nil {
		return x.AlertName
	}
	return ""
}

func (x *PrometheusAlertHisReply_PrometheusAlertHis) GetInstance() string {
	if x != nil {
		return x.Instance
	}
	return ""
}

func (x *PrometheusAlertHisReply_PrometheusAlertHis) GetJob() string {
	if x != nil {
		return x.Job
	}
	return ""
}

func (x *PrometheusAlertHisReply_PrometheusAlertHis) GetProduct() string {
	if x != nil {
		return x.Product
	}
	return ""
}

func (x *PrometheusAlertHisReply_PrometheusAlertHis) GetLevel() int64 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *PrometheusAlertHisReply_PrometheusAlertHis) GetReceiver() string {
	if x != nil {
		return x.Receiver
	}
	return ""
}

func (x *PrometheusAlertHisReply_PrometheusAlertHis) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *PrometheusAlertHisReply_PrometheusAlertHis) GetLables() string {
	if x != nil {
		return x.Lables
	}
	return ""
}

func (x *PrometheusAlertHisReply_PrometheusAlertHis) GetAnnotations() string {
	if x != nil {
		return x.Annotations
	}
	return ""
}

func (x *PrometheusAlertHisReply_PrometheusAlertHis) GetStartAt() int64 {
	if x != nil {
		return x.StartAt
	}
	return 0
}

func (x *PrometheusAlertHisReply_PrometheusAlertHis) GetEndAt() int64 {
	if x != nil {
		return x.EndAt
	}
	return 0
}

func (x *PrometheusAlertHisReply_PrometheusAlertHis) GetGeneratorUrl() string {
	if x != nil {
		return x.GeneratorUrl
	}
	return ""
}

func (x *PrometheusAlertHisReply_PrometheusAlertHis) GetFingerprint() string {
	if x != nil {
		return x.Fingerprint
	}
	return ""
}

func (x *PrometheusAlertHisReply_PrometheusAlertHis) GetAck() int64 {
	if x != nil {
		return x.Ack
	}
	return 0
}

func (x *PrometheusAlertHisReply_PrometheusAlertHis) GetAckMessage() string {
	if x != nil {
		return x.AckMessage
	}
	return ""
}

func (x *PrometheusAlertHisReply_PrometheusAlertHis) GetAckUserUuid() string {
	if x != nil {
		return x.AckUserUuid
	}
	return ""
}

type GetKubernetesEventReply_KubernetesEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	K8SClusterUuid           string `protobuf:"bytes,1,opt,name=k8sClusterUuid,proto3" json:"k8sClusterUuid,omitempty"`
	ApiVersion               string `protobuf:"bytes,2,opt,name=apiVersion,proto3" json:"apiVersion,omitempty"`
	Kind                     string `protobuf:"bytes,3,opt,name=kind,proto3" json:"kind,omitempty"`
	Name                     string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Namespace                string `protobuf:"bytes,5,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Type                     string `protobuf:"bytes,6,opt,name=type,proto3" json:"type,omitempty"`
	Action                   string `protobuf:"bytes,7,opt,name=action,proto3" json:"action,omitempty"`
	Reason                   string `protobuf:"bytes,8,opt,name=reason,proto3" json:"reason,omitempty"`
	Note                     string `protobuf:"bytes,9,opt,name=note,proto3" json:"note,omitempty"`
	EventTime                int64  `protobuf:"varint,10,opt,name=eventTime,proto3" json:"eventTime,omitempty"`
	CreateTime               int64  `protobuf:"varint,11,opt,name=createTime,proto3" json:"createTime,omitempty"`
	Annotations              string `protobuf:"bytes,12,opt,name=annotations,proto3" json:"annotations,omitempty"`
	ResourceVersion          string `protobuf:"bytes,13,opt,name=resourceVersion,proto3" json:"resourceVersion,omitempty"`
	RegardingKind            string `protobuf:"bytes,14,opt,name=regardingKind,proto3" json:"regardingKind,omitempty"`
	RegardingNamespace       string `protobuf:"bytes,15,opt,name=regardingNamespace,proto3" json:"regardingNamespace,omitempty"`
	RegardingName            string `protobuf:"bytes,16,opt,name=regardingName,proto3" json:"regardingName,omitempty"`
	RegardingUid             string `protobuf:"bytes,17,opt,name=regardingUid,proto3" json:"regardingUid,omitempty"`
	RegardingAPIVersion      string `protobuf:"bytes,18,opt,name=regardingAPIVersion,proto3" json:"regardingAPIVersion,omitempty"`
	RegardingResourceVersion string `protobuf:"bytes,19,opt,name=regardingResourceVersion,proto3" json:"regardingResourceVersion,omitempty"`
	RegardingFieldPath       string `protobuf:"bytes,20,opt,name=regardingFieldPath,proto3" json:"regardingFieldPath,omitempty"`
}

func (x *GetKubernetesEventReply_KubernetesEvent) Reset() {
	*x = GetKubernetesEventReply_KubernetesEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneHook_v1_hook_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetKubernetesEventReply_KubernetesEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKubernetesEventReply_KubernetesEvent) ProtoMessage() {}

func (x *GetKubernetesEventReply_KubernetesEvent) ProtoReflect() protoreflect.Message {
	mi := &file_oneHook_v1_hook_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKubernetesEventReply_KubernetesEvent.ProtoReflect.Descriptor instead.
func (*GetKubernetesEventReply_KubernetesEvent) Descriptor() ([]byte, []int) {
	return file_oneHook_v1_hook_proto_rawDescGZIP(), []int{11, 0}
}

func (x *GetKubernetesEventReply_KubernetesEvent) GetK8SClusterUuid() string {
	if x != nil {
		return x.K8SClusterUuid
	}
	return ""
}

func (x *GetKubernetesEventReply_KubernetesEvent) GetApiVersion() string {
	if x != nil {
		return x.ApiVersion
	}
	return ""
}

func (x *GetKubernetesEventReply_KubernetesEvent) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *GetKubernetesEventReply_KubernetesEvent) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetKubernetesEventReply_KubernetesEvent) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *GetKubernetesEventReply_KubernetesEvent) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *GetKubernetesEventReply_KubernetesEvent) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *GetKubernetesEventReply_KubernetesEvent) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *GetKubernetesEventReply_KubernetesEvent) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

func (x *GetKubernetesEventReply_KubernetesEvent) GetEventTime() int64 {
	if x != nil {
		return x.EventTime
	}
	return 0
}

func (x *GetKubernetesEventReply_KubernetesEvent) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *GetKubernetesEventReply_KubernetesEvent) GetAnnotations() string {
	if x != nil {
		return x.Annotations
	}
	return ""
}

func (x *GetKubernetesEventReply_KubernetesEvent) GetResourceVersion() string {
	if x != nil {
		return x.ResourceVersion
	}
	return ""
}

func (x *GetKubernetesEventReply_KubernetesEvent) GetRegardingKind() string {
	if x != nil {
		return x.RegardingKind
	}
	return ""
}

func (x *GetKubernetesEventReply_KubernetesEvent) GetRegardingNamespace() string {
	if x != nil {
		return x.RegardingNamespace
	}
	return ""
}

func (x *GetKubernetesEventReply_KubernetesEvent) GetRegardingName() string {
	if x != nil {
		return x.RegardingName
	}
	return ""
}

func (x *GetKubernetesEventReply_KubernetesEvent) GetRegardingUid() string {
	if x != nil {
		return x.RegardingUid
	}
	return ""
}

func (x *GetKubernetesEventReply_KubernetesEvent) GetRegardingAPIVersion() string {
	if x != nil {
		return x.RegardingAPIVersion
	}
	return ""
}

func (x *GetKubernetesEventReply_KubernetesEvent) GetRegardingResourceVersion() string {
	if x != nil {
		return x.RegardingResourceVersion
	}
	return ""
}

func (x *GetKubernetesEventReply_KubernetesEvent) GetRegardingFieldPath() string {
	if x != nil {
		return x.RegardingFieldPath
	}
	return ""
}

type ListMonitorReceiverReply_MonitorReceiver struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid             string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	OrgUuid          string `protobuf:"bytes,2,opt,name=orgUuid,proto3" json:"orgUuid,omitempty"`
	ProductUuid      string `protobuf:"bytes,3,opt,name=productUuid,proto3" json:"productUuid,omitempty"`
	Receiver         string `protobuf:"bytes,4,opt,name=receiver,proto3" json:"receiver,omitempty"`
	MessageGroupUuid string `protobuf:"bytes,5,opt,name=messageGroupUuid,proto3" json:"messageGroupUuid,omitempty"`
	CreateTime       int64  `protobuf:"varint,6,opt,name=createTime,proto3" json:"createTime,omitempty"`
}

func (x *ListMonitorReceiverReply_MonitorReceiver) Reset() {
	*x = ListMonitorReceiverReply_MonitorReceiver{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneHook_v1_hook_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMonitorReceiverReply_MonitorReceiver) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMonitorReceiverReply_MonitorReceiver) ProtoMessage() {}

func (x *ListMonitorReceiverReply_MonitorReceiver) ProtoReflect() protoreflect.Message {
	mi := &file_oneHook_v1_hook_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMonitorReceiverReply_MonitorReceiver.ProtoReflect.Descriptor instead.
func (*ListMonitorReceiverReply_MonitorReceiver) Descriptor() ([]byte, []int) {
	return file_oneHook_v1_hook_proto_rawDescGZIP(), []int{15, 0}
}

func (x *ListMonitorReceiverReply_MonitorReceiver) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *ListMonitorReceiverReply_MonitorReceiver) GetOrgUuid() string {
	if x != nil {
		return x.OrgUuid
	}
	return ""
}

func (x *ListMonitorReceiverReply_MonitorReceiver) GetProductUuid() string {
	if x != nil {
		return x.ProductUuid
	}
	return ""
}

func (x *ListMonitorReceiverReply_MonitorReceiver) GetReceiver() string {
	if x != nil {
		return x.Receiver
	}
	return ""
}

func (x *ListMonitorReceiverReply_MonitorReceiver) GetMessageGroupUuid() string {
	if x != nil {
		return x.MessageGroupUuid
	}
	return ""
}

func (x *ListMonitorReceiverReply_MonitorReceiver) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

type GetKubernetesEventReceiverReply_KubernetesEventReceiver struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid             string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	K8SClusterUuid   string `protobuf:"bytes,2,opt,name=k8sClusterUuid,proto3" json:"k8sClusterUuid,omitempty"`
	MessageGroupUuid string `protobuf:"bytes,3,opt,name=messageGroupUuid,proto3" json:"messageGroupUuid,omitempty"`
	CreateTime       int64  `protobuf:"varint,4,opt,name=createTime,proto3" json:"createTime,omitempty"`
}

func (x *GetKubernetesEventReceiverReply_KubernetesEventReceiver) Reset() {
	*x = GetKubernetesEventReceiverReply_KubernetesEventReceiver{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneHook_v1_hook_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetKubernetesEventReceiverReply_KubernetesEventReceiver) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKubernetesEventReceiverReply_KubernetesEventReceiver) ProtoMessage() {}

func (x *GetKubernetesEventReceiverReply_KubernetesEventReceiver) ProtoReflect() protoreflect.Message {
	mi := &file_oneHook_v1_hook_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKubernetesEventReceiverReply_KubernetesEventReceiver.ProtoReflect.Descriptor instead.
func (*GetKubernetesEventReceiverReply_KubernetesEventReceiver) Descriptor() ([]byte, []int) {
	return file_oneHook_v1_hook_proto_rawDescGZIP(), []int{21, 0}
}

func (x *GetKubernetesEventReceiverReply_KubernetesEventReceiver) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *GetKubernetesEventReceiverReply_KubernetesEventReceiver) GetK8SClusterUuid() string {
	if x != nil {
		return x.K8SClusterUuid
	}
	return ""
}

func (x *GetKubernetesEventReceiverReply_KubernetesEventReceiver) GetMessageGroupUuid() string {
	if x != nil {
		return x.MessageGroupUuid
	}
	return ""
}

func (x *GetKubernetesEventReceiverReply_KubernetesEventReceiver) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

var File_oneHook_v1_hook_proto protoreflect.FileDescriptor

var file_oneHook_v1_hook_proto_rawDesc = []byte{
	0x0a, 0x15, 0x6f, 0x6e, 0x65, 0x48, 0x6f, 0x6f, 0x6b, 0x2f, 0x76, 0x31, 0x2f, 0x68, 0x6f, 0x6f,
	0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x6f, 0x6e, 0x65, 0x48, 0x6f, 0x6f, 0x6b,
	0x2e, 0x76, 0x31, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8d, 0x04, 0x0a,
	0x12, 0x50, 0x72, 0x6f, 0x6d, 0x65, 0x74, 0x68, 0x65, 0x75, 0x73, 0x41, 0x6c, 0x65, 0x72, 0x74,
	0x52, 0x65, 0x71, 0x12, 0x21, 0x0a, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x07, 0x6f,
	0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x55, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x72, 0x02, 0x10, 0x01, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x75, 0x69,
	0x64, 0x12, 0x2f, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x45, 0x6e, 0x76, 0x55,
	0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02,
	0x10, 0x01, 0x52, 0x0e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x45, 0x6e, 0x76, 0x55, 0x75,
	0x69, 0x64, 0x12, 0x2b, 0x0a, 0x0c, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10,
	0x01, 0x52, 0x0c, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
	0x23, 0x0a, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x08, 0x72, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x72, 0x12, 0x46, 0x0a, 0x06, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x18, 0x06,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x6f, 0x6e, 0x65, 0x48, 0x6f, 0x6f, 0x6b, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x72, 0x6f, 0x6d, 0x65, 0x74, 0x68, 0x65, 0x75, 0x73, 0x41, 0x6c, 0x65, 0x72,
	0x74, 0x52, 0x65, 0x71, 0x2e, 0x50, 0x72, 0x6f, 0x6d, 0x65, 0x74, 0x68, 0x65, 0x75, 0x73, 0x41,
	0x6c, 0x65, 0x72, 0x74, 0x52, 0x06, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x1a, 0xdd, 0x01, 0x0a,
	0x0f, 0x50, 0x72, 0x6f, 0x6d, 0x65, 0x74, 0x68, 0x65, 0x75, 0x73, 0x41, 0x6c, 0x65, 0x72, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73,
	0x12, 0x20, 0x0a, 0x0b, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x72, 0x74, 0x73, 0x41, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x74, 0x61, 0x72, 0x74, 0x73, 0x41, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x65, 0x6e, 0x64, 0x73, 0x41, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x65, 0x6e, 0x64, 0x73, 0x41, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x55, 0x52, 0x4c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x67, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x55, 0x52, 0x4c, 0x12, 0x20, 0x0a, 0x0b, 0x66, 0x69,
	0x6e, 0x67, 0x65, 0x72, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x66, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x22, 0x2e, 0x0a, 0x14,
	0x50, 0x72, 0x6f, 0x6d, 0x65, 0x74, 0x68, 0x65, 0x75, 0x73, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xfc, 0x02, 0x0a,
	0x15, 0x50, 0x72, 0x6f, 0x6d, 0x65, 0x74, 0x68, 0x65, 0x75, 0x73, 0x41, 0x6c, 0x65, 0x72, 0x74,
	0x48, 0x69, 0x73, 0x52, 0x65, 0x71, 0x12, 0x23, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x55, 0x75,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10,
	0x01, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x07, 0x6f,
	0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x12, 0x29,
	0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0b, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x45, 0x6e, 0x76, 0x55, 0x75, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x45, 0x6e, 0x76, 0x55, 0x75, 0x69,
	0x64, 0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x72, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x66, 0x69, 0x6e,
	0x67, 0x65, 0x72, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x66, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x65, 0x6e, 0x64, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x65, 0x6e,
	0x64, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xb2, 0x04, 0x0a, 0x17,
	0x50, 0x72, 0x6f, 0x6d, 0x65, 0x74, 0x68, 0x65, 0x75, 0x73, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x48,
	0x69, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x4c, 0x0a, 0x05, 0x61, 0x6c, 0x65, 0x72, 0x74,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x6f, 0x6e, 0x65, 0x48, 0x6f, 0x6f, 0x6b,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x6d, 0x65, 0x74, 0x68, 0x65, 0x75, 0x73, 0x41, 0x6c,
	0x65, 0x72, 0x74, 0x48, 0x69, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x50, 0x72, 0x6f, 0x6d,
	0x65, 0x74, 0x68, 0x65, 0x75, 0x73, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x48, 0x69, 0x73, 0x52, 0x05,
	0x61, 0x6c, 0x65, 0x72, 0x74, 0x1a, 0xc8, 0x03, 0x0a, 0x12, 0x50, 0x72, 0x6f, 0x6d, 0x65, 0x74,
	0x68, 0x65, 0x75, 0x73, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x48, 0x69, 0x73, 0x12, 0x1c, 0x0a, 0x09,
	0x61, 0x6c, 0x65, 0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6a, 0x6f, 0x62, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6a, 0x6f, 0x62, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x6c, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x61,
	0x62, 0x6c, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x6e, 0x6e, 0x6f, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x61, 0x72, 0x74, 0x41,
	0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x74, 0x61, 0x72, 0x74, 0x41, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x65, 0x6e, 0x64, 0x41, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x65, 0x6e, 0x64, 0x41, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x55, 0x72, 0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x67, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x55, 0x72, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x66, 0x69,
	0x6e, 0x67, 0x65, 0x72, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x66, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03,
	0x61, 0x63, 0x6b, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x61, 0x63, 0x6b, 0x12, 0x1e,
	0x0a, 0x0a, 0x61, 0x63, 0x6b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x61, 0x63, 0x6b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x61, 0x63, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64,
	0x22, 0xbd, 0x01, 0x0a, 0x1d, 0x50, 0x72, 0x6f, 0x6d, 0x65, 0x74, 0x68, 0x65, 0x75, 0x73, 0x41,
	0x6c, 0x65, 0x72, 0x74, 0x46, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x12, 0x21, 0x0a, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x07, 0x6f, 0x72,
	0x67, 0x55, 0x75, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01,
	0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x0b, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x0b, 0x66, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x70,
	0x72, 0x69, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72,
	0x02, 0x10, 0x01, 0x52, 0x0b, 0x66, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x70, 0x72, 0x69, 0x6e, 0x74,
	0x22, 0xd5, 0x03, 0x0a, 0x1f, 0x50, 0x72, 0x6f, 0x6d, 0x65, 0x74, 0x68, 0x65, 0x75, 0x73, 0x41,
	0x6c, 0x65, 0x72, 0x74, 0x46, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x6a, 0x6f, 0x62, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6a, 0x6f, 0x62,
	0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c,
	0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x0b,
	0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x74, 0x61, 0x72, 0x74, 0x41, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x73, 0x74, 0x61, 0x72, 0x74, 0x41, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6e, 0x64, 0x41,
	0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x65, 0x6e, 0x64, 0x41, 0x74, 0x12, 0x22,
	0x0a, 0x0c, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x55, 0x72, 0x6c, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x55,
	0x72, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x66, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x70, 0x72, 0x69, 0x6e,
	0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x70,
	0x72, 0x69, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x63, 0x6b, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x03, 0x61, 0x63, 0x6b, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x6b, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x63, 0x6b, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x63, 0x6b, 0x55, 0x73, 0x65,
	0x72, 0x55, 0x75, 0x69, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x6b,
	0x55, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x22, 0x89, 0x02, 0x0a, 0x15, 0x50, 0x72, 0x6f,
	0x6d, 0x65, 0x74, 0x68, 0x65, 0x75, 0x73, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x41, 0x63, 0x6b, 0x52,
	0x65, 0x71, 0x12, 0x23, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10,
	0x01, 0x52, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x0b, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x0b, 0x66, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x70,
	0x72, 0x69, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72,
	0x02, 0x10, 0x01, 0x52, 0x0b, 0x66, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x70, 0x72, 0x69, 0x6e, 0x74,
	0x12, 0x27, 0x0a, 0x0a, 0x61, 0x63, 0x6b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0a, 0x61,
	0x63, 0x6b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x29, 0x0a, 0x0b, 0x61, 0x63, 0x6b,
	0x55, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0b, 0x61, 0x63, 0x6b, 0x55, 0x73, 0x65, 0x72,
	0x55, 0x75, 0x69, 0x64, 0x22, 0x31, 0x0a, 0x17, 0x50, 0x72, 0x6f, 0x6d, 0x65, 0x74, 0x68, 0x65,
	0x75, 0x73, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x41, 0x63, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xfe, 0x07, 0x0a, 0x12, 0x4b, 0x75, 0x62, 0x65,
	0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x21,
	0x0a, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69,
	0x64, 0x12, 0x29, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x75, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52,
	0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x2f, 0x0a, 0x0e,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x45, 0x6e, 0x76, 0x55, 0x75, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0e, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x45, 0x6e, 0x76, 0x55, 0x75, 0x69, 0x64, 0x12, 0x2f, 0x0a,
	0x0e, 0x6b, 0x38, 0x73, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0e,
	0x6b, 0x38, 0x73, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x12, 0x1d,
	0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x27, 0x0a,
	0x0a, 0x61, 0x70, 0x69, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0a, 0x61, 0x70, 0x69, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x04, 0x6b,
	0x69, 0x6e, 0x64, 0x12, 0x1b, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x25, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x09, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x6f, 0x74, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x51, 0x0a,
	0x0b, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x10, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x6f, 0x6e, 0x65, 0x48, 0x6f, 0x6f, 0x6b, 0x2e, 0x76, 0x31, 0x2e,
	0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x2e, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x0b, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x28, 0x0a, 0x0f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x72, 0x65,
	0x67, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x4b, 0x69, 0x6e, 0x64, 0x18, 0x12, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x72, 0x65, 0x67, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x4b, 0x69, 0x6e, 0x64,
	0x12, 0x2e, 0x0a, 0x12, 0x72, 0x65, 0x67, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x4e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x72, 0x65,
	0x67, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x12, 0x24, 0x0a, 0x0d, 0x72, 0x65, 0x67, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x67, 0x61, 0x72, 0x64, 0x69,
	0x6e, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x67, 0x61, 0x72, 0x64,
	0x69, 0x6e, 0x67, 0x55, 0x69, 0x64, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65,
	0x67, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x55, 0x69, 0x64, 0x12, 0x30, 0x0a, 0x13, 0x72, 0x65,
	0x67, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x41, 0x50, 0x49, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x72, 0x65, 0x67, 0x61, 0x72, 0x64, 0x69,
	0x6e, 0x67, 0x41, 0x50, 0x49, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x3a, 0x0a, 0x18,
	0x72, 0x65, 0x67, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x18,
	0x72, 0x65, 0x67, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x12, 0x72, 0x65, 0x67, 0x61,
	0x72, 0x64, 0x69, 0x6e, 0x67, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x50, 0x61, 0x74, 0x68, 0x18, 0x18,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x72, 0x65, 0x67, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x50, 0x61, 0x74, 0x68, 0x1a, 0x3e, 0x0a, 0x10, 0x41, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x2e, 0x0a, 0x14, 0x4b, 0x75, 0x62, 0x65,
	0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xa5, 0x03, 0x0a, 0x15, 0x47, 0x65, 0x74,
	0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x12, 0x23, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10,
	0x01, 0x52, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x0b, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x45, 0x6e, 0x76, 0x55, 0x75, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x45, 0x6e, 0x76, 0x55, 0x75, 0x69, 0x64, 0x12, 0x2f, 0x0a,
	0x0e, 0x6b, 0x38, 0x73, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0e,
	0x6b, 0x38, 0x73, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x24, 0x0a, 0x0d, 0x72, 0x65, 0x67, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x4b, 0x69, 0x6e,
	0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x67, 0x61, 0x72, 0x64, 0x69,
	0x6e, 0x67, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x72, 0x65, 0x67, 0x61, 0x72, 0x64,
	0x69, 0x6e, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72,
	0x65, 0x67, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c,
	0x72, 0x65, 0x67, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x55, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x67, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x55, 0x69, 0x64,
	0x22, 0xa8, 0x06, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74,
	0x65, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x4b, 0x0a, 0x06,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x6f,
	0x6e, 0x65, 0x48, 0x6f, 0x6f, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4b, 0x75, 0x62,
	0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x2e, 0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x52, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0xbf, 0x05, 0x0a, 0x0f, 0x4b, 0x75,
	0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x26, 0x0a,
	0x0e, 0x6b, 0x38, 0x73, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6b, 0x38, 0x73, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x55, 0x75, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x70, 0x69, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x70, 0x69, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x6f, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a,
	0x0d, 0x72, 0x65, 0x67, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x4b, 0x69, 0x6e, 0x64, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x67, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x4b,
	0x69, 0x6e, 0x64, 0x12, 0x2e, 0x0a, 0x12, 0x72, 0x65, 0x67, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67,
	0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x12, 0x72, 0x65, 0x67, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x72, 0x65, 0x67, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x67, 0x61,
	0x72, 0x64, 0x69, 0x6e, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x67,
	0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x55, 0x69, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x72, 0x65, 0x67, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x55, 0x69, 0x64, 0x12, 0x30, 0x0a,
	0x13, 0x72, 0x65, 0x67, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x41, 0x50, 0x49, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x72, 0x65, 0x67, 0x61,
	0x72, 0x64, 0x69, 0x6e, 0x67, 0x41, 0x50, 0x49, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x3a, 0x0a, 0x18, 0x72, 0x65, 0x67, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x13, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x18, 0x72, 0x65, 0x67, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x12, 0x72,
	0x65, 0x67, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x50, 0x61, 0x74,
	0x68, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x72, 0x65, 0x67, 0x61, 0x72, 0x64, 0x69,
	0x6e, 0x67, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x50, 0x61, 0x74, 0x68, 0x22, 0xe7, 0x01, 0x0a, 0x18,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x23, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x55, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72,
	0x02, 0x10, 0x01, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x12, 0x21, 0x0a,
	0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64,
	0x12, 0x29, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x75, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0b,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x08, 0x72,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72,
	0x12, 0x33, 0x0a, 0x10, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x55, 0x75, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72,
	0x02, 0x10, 0x01, 0x52, 0x10, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x55, 0x75, 0x69, 0x64, 0x22, 0x34, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d,
	0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x8b, 0x01, 0x0a, 0x16,
	0x4c, 0x69, 0x73, 0x74, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x23, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x55, 0x75,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10,
	0x01, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x07, 0x6f,
	0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x12, 0x29,
	0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0b, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x75, 0x69, 0x64, 0x22, 0xc6, 0x02, 0x0a, 0x18, 0x4c, 0x69,
	0x73, 0x74, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x5e, 0x0a, 0x0f, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f,
	0x72, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x34, 0x2e, 0x6f, 0x6e, 0x65, 0x48, 0x6f, 0x6f, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x72, 0x52, 0x0f, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x52, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x1a, 0xc9, 0x01, 0x0a, 0x0f, 0x4d, 0x6f, 0x6e, 0x69, 0x74,
	0x6f, 0x72, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x55, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x12, 0x2a, 0x0a, 0x10, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x55, 0x75, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x10, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x55, 0x75,
	0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x22, 0xb7, 0x01, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f,
	0x72, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x23, 0x0a, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69,
	0x64, 0x12, 0x21, 0x0a, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x07, 0x6f, 0x72, 0x67,
	0x55, 0x75, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55,
	0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02,
	0x10, 0x01, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12,
	0x2b, 0x0a, 0x0c, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0c,
	0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x22, 0x31, 0x0a, 0x17,
	0x44, 0x65, 0x6c, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22,
	0xfb, 0x01, 0x0a, 0x20, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e,
	0x65, 0x74, 0x65, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x12, 0x23, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x07, 0x6f, 0x72, 0x67,
	0x55, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72,
	0x02, 0x10, 0x01, 0x52, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x0b,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x2f, 0x0a, 0x0e, 0x6b, 0x38, 0x73, 0x43, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0e, 0x6b, 0x38, 0x73, 0x43, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x12, 0x33, 0x0a, 0x10, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x55, 0x75, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x10, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x55, 0x75, 0x69, 0x64, 0x22, 0x3c, 0x0a,
	0x22, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65,
	0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xc3, 0x01, 0x0a, 0x1d,
	0x47, 0x65, 0x74, 0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x23, 0x0a,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x55, 0x75,
	0x69, 0x64, 0x12, 0x21, 0x0a, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x07, 0x6f, 0x72,
	0x67, 0x55, 0x75, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x55, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72,
	0x02, 0x10, 0x01, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x75, 0x69, 0x64,
	0x12, 0x2f, 0x0a, 0x0e, 0x6b, 0x38, 0x73, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x55, 0x75,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10,
	0x01, 0x52, 0x0e, 0x6b, 0x38, 0x73, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x55, 0x75, 0x69,
	0x64, 0x22, 0xc4, 0x02, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65,
	0x74, 0x65, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x7d, 0x0a, 0x17, 0x6b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65,
	0x74, 0x65, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x43, 0x2e, 0x6f, 0x6e, 0x65, 0x48, 0x6f, 0x6f, 0x6b,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65,
	0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x2e, 0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x52, 0x17, 0x6b, 0x75, 0x62,
	0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x72, 0x1a, 0xa1, 0x01, 0x0a, 0x17, 0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65,
	0x74, 0x65, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72,
	0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x75, 0x75, 0x69, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x6b, 0x38, 0x73, 0x43, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6b, 0x38,
	0x73, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x12, 0x2a, 0x0a, 0x10,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x55, 0x75, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x55, 0x75, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xf0, 0x01, 0x0a, 0x1d, 0x44, 0x65, 0x6c,
	0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x23, 0x0a, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x12,
	0x21, 0x0a, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75,
	0x69, 0x64, 0x12, 0x29, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x75, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01,
	0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x2f, 0x0a,
	0x0e, 0x6b, 0x38, 0x73, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0e,
	0x6b, 0x38, 0x73, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x12, 0x2b,
	0x0a, 0x0c, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0c, 0x72,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x22, 0x39, 0x0a, 0x1f, 0x44,
	0x65, 0x6c, 0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x37, 0x0a, 0x12, 0x53, 0x6b, 0x79, 0x77, 0x61, 0x6c,
	0x6b, 0x69, 0x6e, 0x67, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x65, 0x71, 0x12, 0x21, 0x0a, 0x07,
	0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x22,
	0x16, 0x0a, 0x14, 0x53, 0x6b, 0x79, 0x77, 0x61, 0x6c, 0x6b, 0x69, 0x6e, 0x67, 0x41, 0x6c, 0x65,
	0x72, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x33, 0x0a, 0x0e, 0x53, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x41, 0x75, 0x64, 0x69, 0x74, 0x52, 0x65, 0x71, 0x12, 0x21, 0x0a, 0x07, 0x6f, 0x72, 0x67,
	0x55, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72,
	0x02, 0x10, 0x01, 0x52, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x22, 0x12, 0x0a, 0x10,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x41, 0x75, 0x64, 0x69, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x75, 0x0a, 0x16, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x44, 0x44, 0x4c, 0x53,
	0x51, 0x4c, 0x41, 0x75, 0x64, 0x69, 0x74, 0x52, 0x65, 0x71, 0x12, 0x21, 0x0a, 0x07, 0x6f, 0x72,
	0x67, 0x55, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x72, 0x02, 0x10, 0x01, 0x52, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x12, 0x10, 0x0a,
	0x03, 0x73, 0x71, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x71, 0x6c, 0x12,
	0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75,
	0x73, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6a, 0x64, 0x62, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6a, 0x64, 0x62, 0x63, 0x22, 0x1a, 0x0a, 0x18, 0x44, 0x61, 0x74, 0x61, 0x62,
	0x61, 0x73, 0x65, 0x44, 0x44, 0x4c, 0x53, 0x51, 0x4c, 0x41, 0x75, 0x64, 0x69, 0x74, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x36, 0x0a, 0x11, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x53, 0x75, 0x62, 0x53,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x71, 0x12, 0x21, 0x0a, 0x07, 0x6f, 0x72, 0x67, 0x55,
	0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02,
	0x10, 0x01, 0x52, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x22, 0x15, 0x0a, 0x13, 0x43,
	0x6c, 0x6f, 0x75, 0x64, 0x53, 0x75, 0x62, 0x53, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x9e, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x57,
	0x65, 0x62, 0x44, 0x69, 0x61, 0x67, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x23, 0x0a, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69,
	0x64, 0x12, 0x21, 0x0a, 0x07, 0x6f, 0x72, 0x67, 0x55, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x07, 0x6f, 0x72, 0x67,
	0x55, 0x75, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55,
	0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02,
	0x10, 0x01, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x75, 0x72, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x75,
	0x72, 0x6c, 0x73, 0x22, 0x2b, 0x0a, 0x17, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x57,
	0x65, 0x62, 0x44, 0x69, 0x61, 0x67, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c,
	0x22, 0x1e, 0x0a, 0x0a, 0x57, 0x65, 0x62, 0x44, 0x69, 0x61, 0x67, 0x52, 0x65, 0x71, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67,
	0x22, 0x1e, 0x0a, 0x0c, 0x57, 0x65, 0x62, 0x44, 0x69, 0x61, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x32, 0x81, 0x0d, 0x0a, 0x07, 0x4f, 0x6e, 0x65, 0x48, 0x6f, 0x6f, 0x6b, 0x12, 0x55, 0x0a, 0x0f,
	0x50, 0x72, 0x6f, 0x6d, 0x65, 0x74, 0x68, 0x65, 0x75, 0x73, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x12,
	0x1e, 0x2e, 0x6f, 0x6e, 0x65, 0x48, 0x6f, 0x6f, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f,
	0x6d, 0x65, 0x74, 0x68, 0x65, 0x75, 0x73, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x65, 0x71, 0x1a,
	0x20, 0x2e, 0x6f, 0x6e, 0x65, 0x48, 0x6f, 0x6f, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f,
	0x6d, 0x65, 0x74, 0x68, 0x65, 0x75, 0x73, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x00, 0x12, 0x5e, 0x0a, 0x12, 0x50, 0x72, 0x6f, 0x6d, 0x65, 0x74, 0x68, 0x65, 0x75,
	0x73, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x48, 0x69, 0x73, 0x12, 0x21, 0x2e, 0x6f, 0x6e, 0x65, 0x48,
	0x6f, 0x6f, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x6d, 0x65, 0x74, 0x68, 0x65, 0x75,
	0x73, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x48, 0x69, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x6f,
	0x6e, 0x65, 0x48, 0x6f, 0x6f, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x6d, 0x65, 0x74,
	0x68, 0x65, 0x75, 0x73, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x48, 0x69, 0x73, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x00, 0x12, 0x5e, 0x0a, 0x12, 0x50, 0x72, 0x6f, 0x6d, 0x65, 0x74, 0x68, 0x65, 0x75,
	0x73, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x41, 0x63, 0x6b, 0x12, 0x21, 0x2e, 0x6f, 0x6e, 0x65, 0x48,
	0x6f, 0x6f, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x6d, 0x65, 0x74, 0x68, 0x65, 0x75,
	0x73, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x41, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x6f,
	0x6e, 0x65, 0x48, 0x6f, 0x6f, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x6d, 0x65, 0x74,
	0x68, 0x65, 0x75, 0x73, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x41, 0x63, 0x6b, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x00, 0x12, 0x76, 0x0a, 0x1a, 0x50, 0x72, 0x6f, 0x6d, 0x65, 0x74, 0x68, 0x65, 0x75,
	0x73, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x46, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x70, 0x72, 0x69, 0x6e,
	0x74, 0x12, 0x29, 0x2e, 0x6f, 0x6e, 0x65, 0x48, 0x6f, 0x6f, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x72, 0x6f, 0x6d, 0x65, 0x74, 0x68, 0x65, 0x75, 0x73, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x46, 0x69,
	0x6e, 0x67, 0x65, 0x72, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x2b, 0x2e, 0x6f,
	0x6e, 0x65, 0x48, 0x6f, 0x6f, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x6d, 0x65, 0x74,
	0x68, 0x65, 0x75, 0x73, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x46, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x70,
	0x72, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x0f, 0x4b,
	0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x1e,
	0x2e, 0x6f, 0x6e, 0x65, 0x48, 0x6f, 0x6f, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x75, 0x62, 0x65,
	0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x20,
	0x2e, 0x6f, 0x6e, 0x65, 0x48, 0x6f, 0x6f, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x75, 0x62, 0x65,
	0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x00, 0x12, 0x5e, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65,
	0x74, 0x65, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x21, 0x2e, 0x6f, 0x6e, 0x65, 0x48, 0x6f,
	0x6f, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65,
	0x74, 0x65, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x6f, 0x6e,
	0x65, 0x48, 0x6f, 0x6f, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4b, 0x75, 0x62, 0x65,
	0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x00, 0x12, 0x67, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x6e, 0x69,
	0x74, 0x6f, 0x72, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x12, 0x24, 0x2e, 0x6f, 0x6e,
	0x65, 0x48, 0x6f, 0x6f, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d,
	0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x1a, 0x26, 0x2e, 0x6f, 0x6e, 0x65, 0x48, 0x6f, 0x6f, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x61, 0x0a, 0x13, 0x4c,
	0x69, 0x73, 0x74, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x72, 0x12, 0x22, 0x2e, 0x6f, 0x6e, 0x65, 0x48, 0x6f, 0x6f, 0x6b, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x6f, 0x6e, 0x65, 0x48, 0x6f, 0x6f, 0x6b,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x52,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x5e,
	0x0a, 0x12, 0x44, 0x65, 0x6c, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x72, 0x12, 0x21, 0x2e, 0x6f, 0x6e, 0x65, 0x48, 0x6f, 0x6f, 0x6b, 0x2e, 0x76,
	0x31, 0x2e, 0x44, 0x65, 0x6c, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x6f, 0x6e, 0x65, 0x48, 0x6f, 0x6f,
	0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x52,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x7f,
	0x0a, 0x1d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74,
	0x65, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x12,
	0x2c, 0x2e, 0x6f, 0x6e, 0x65, 0x48, 0x6f, 0x6f, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x2e, 0x2e,
	0x6f, 0x6e, 0x65, 0x48, 0x6f, 0x6f, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12,
	0x76, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x12, 0x29, 0x2e,
	0x6f, 0x6e, 0x65, 0x48, 0x6f, 0x6f, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4b, 0x75,
	0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x2b, 0x2e, 0x6f, 0x6e, 0x65, 0x48, 0x6f,
	0x6f, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65,
	0x74, 0x65, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x76, 0x0a, 0x1a, 0x44, 0x65, 0x6c, 0x4b, 0x75,
	0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x72, 0x12, 0x29, 0x2e, 0x6f, 0x6e, 0x65, 0x48, 0x6f, 0x6f, 0x6b, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x1a, 0x2b, 0x2e, 0x6f, 0x6e, 0x65, 0x48, 0x6f, 0x6f, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65,
	0x6c, 0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12,
	0x55, 0x0a, 0x0f, 0x53, 0x6b, 0x79, 0x77, 0x61, 0x6c, 0x6b, 0x69, 0x6e, 0x67, 0x41, 0x6c, 0x65,
	0x72, 0x74, 0x12, 0x1e, 0x2e, 0x6f, 0x6e, 0x65, 0x48, 0x6f, 0x6f, 0x6b, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x6b, 0x79, 0x77, 0x61, 0x6c, 0x6b, 0x69, 0x6e, 0x67, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52,
	0x65, 0x71, 0x1a, 0x20, 0x2e, 0x6f, 0x6e, 0x65, 0x48, 0x6f, 0x6f, 0x6b, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x6b, 0x79, 0x77, 0x61, 0x6c, 0x6b, 0x69, 0x6e, 0x67, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x0b, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x41, 0x75, 0x64, 0x69, 0x74, 0x12, 0x1a, 0x2e, 0x6f, 0x6e, 0x65, 0x48, 0x6f, 0x6f, 0x6b, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x41, 0x75, 0x64, 0x69, 0x74, 0x52, 0x65,
	0x71, 0x1a, 0x1c, 0x2e, 0x6f, 0x6e, 0x65, 0x48, 0x6f, 0x6f, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x41, 0x75, 0x64, 0x69, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x00, 0x12, 0x52, 0x0a, 0x0e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x53, 0x75, 0x62, 0x53, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x12, 0x1d, 0x2e, 0x6f, 0x6e, 0x65, 0x48, 0x6f, 0x6f, 0x6b, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x53, 0x75, 0x62, 0x53, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52,
	0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x6f, 0x6e, 0x65, 0x48, 0x6f, 0x6f, 0x6b, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x6c, 0x6f, 0x75, 0x64, 0x53, 0x75, 0x62, 0x53, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x5e, 0x0a, 0x12, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x57, 0x65, 0x62, 0x44, 0x69, 0x61, 0x67, 0x55, 0x72, 0x6c, 0x12, 0x21, 0x2e, 0x6f, 0x6e,
	0x65, 0x48, 0x6f, 0x6f, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x57, 0x65, 0x62, 0x44, 0x69, 0x61, 0x67, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x23,
	0x2e, 0x6f, 0x6e, 0x65, 0x48, 0x6f, 0x6f, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x57, 0x65, 0x62, 0x44, 0x69, 0x61, 0x67, 0x55, 0x72, 0x6c, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x07, 0x57, 0x65, 0x62, 0x44, 0x69, 0x61, 0x67,
	0x12, 0x16, 0x2e, 0x6f, 0x6e, 0x65, 0x48, 0x6f, 0x6f, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x65,
	0x62, 0x44, 0x69, 0x61, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x6f, 0x6e, 0x65, 0x48, 0x6f,
	0x6f, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x65, 0x62, 0x44, 0x69, 0x61, 0x67, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x00, 0x42, 0x30, 0x5a, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x6f, 0x70, 0x73, 0x7a, 0x2f, 0x6f, 0x6e, 0x65,
	0x48, 0x6f, 0x6f, 0x6b, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6f, 0x6e, 0x65, 0x48, 0x6f, 0x6f, 0x6b,
	0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_oneHook_v1_hook_proto_rawDescOnce sync.Once
	file_oneHook_v1_hook_proto_rawDescData = file_oneHook_v1_hook_proto_rawDesc
)

func file_oneHook_v1_hook_proto_rawDescGZIP() []byte {
	file_oneHook_v1_hook_proto_rawDescOnce.Do(func() {
		file_oneHook_v1_hook_proto_rawDescData = protoimpl.X.CompressGZIP(file_oneHook_v1_hook_proto_rawDescData)
	})
	return file_oneHook_v1_hook_proto_rawDescData
}

var file_oneHook_v1_hook_proto_msgTypes = make([]protoimpl.MessageInfo, 42)
var file_oneHook_v1_hook_proto_goTypes = []interface{}{
	(*PrometheusAlertReq)(nil),                         // 0: oneHook.v1.PrometheusAlertReq
	(*PrometheusAlertReply)(nil),                       // 1: oneHook.v1.PrometheusAlertReply
	(*PrometheusAlertHisReq)(nil),                      // 2: oneHook.v1.PrometheusAlertHisReq
	(*PrometheusAlertHisReply)(nil),                    // 3: oneHook.v1.PrometheusAlertHisReply
	(*PrometheusAlertFingerprintReq)(nil),              // 4: oneHook.v1.PrometheusAlertFingerprintReq
	(*PrometheusAlertFingerprintReply)(nil),            // 5: oneHook.v1.PrometheusAlertFingerprintReply
	(*PrometheusAlertAckReq)(nil),                      // 6: oneHook.v1.PrometheusAlertAckReq
	(*PrometheusAlertAckReply)(nil),                    // 7: oneHook.v1.PrometheusAlertAckReply
	(*KubernetesEventReq)(nil),                         // 8: oneHook.v1.KubernetesEventReq
	(*KubernetesEventReply)(nil),                       // 9: oneHook.v1.KubernetesEventReply
	(*GetKubernetesEventReq)(nil),                      // 10: oneHook.v1.GetKubernetesEventReq
	(*GetKubernetesEventReply)(nil),                    // 11: oneHook.v1.GetKubernetesEventReply
	(*CreateMonitorReceiverReq)(nil),                   // 12: oneHook.v1.CreateMonitorReceiverReq
	(*CreateMonitorReceiverReply)(nil),                 // 13: oneHook.v1.CreateMonitorReceiverReply
	(*ListMonitorReceiverReq)(nil),                     // 14: oneHook.v1.ListMonitorReceiverReq
	(*ListMonitorReceiverReply)(nil),                   // 15: oneHook.v1.ListMonitorReceiverReply
	(*DelMonitorReceiverReq)(nil),                      // 16: oneHook.v1.DelMonitorReceiverReq
	(*DelMonitorReceiverReply)(nil),                    // 17: oneHook.v1.DelMonitorReceiverReply
	(*CreateKubernetesEventReceiverReq)(nil),           // 18: oneHook.v1.CreateKubernetesEventReceiverReq
	(*CreateKubernetesEventReceiverReply)(nil),         // 19: oneHook.v1.CreateKubernetesEventReceiverReply
	(*GetKubernetesEventReceiverReq)(nil),              // 20: oneHook.v1.GetKubernetesEventReceiverReq
	(*GetKubernetesEventReceiverReply)(nil),            // 21: oneHook.v1.GetKubernetesEventReceiverReply
	(*DelKubernetesEventReceiverReq)(nil),              // 22: oneHook.v1.DelKubernetesEventReceiverReq
	(*DelKubernetesEventReceiverReply)(nil),            // 23: oneHook.v1.DelKubernetesEventReceiverReply
	(*SkywalkingAlertReq)(nil),                         // 24: oneHook.v1.SkywalkingAlertReq
	(*SkywalkingAlertReply)(nil),                       // 25: oneHook.v1.SkywalkingAlertReply
	(*SystemAuditReq)(nil),                             // 26: oneHook.v1.SystemAuditReq
	(*SystemAuditReply)(nil),                           // 27: oneHook.v1.SystemAuditReply
	(*DatabaseDDLSQLAuditReq)(nil),                     // 28: oneHook.v1.DatabaseDDLSQLAuditReq
	(*DatabaseDDLSQLAuditReply)(nil),                   // 29: oneHook.v1.DatabaseDDLSQLAuditReply
	(*CloudSubScribeReq)(nil),                          // 30: oneHook.v1.CloudSubScribeReq
	(*CloudSubScribeReply)(nil),                        // 31: oneHook.v1.CloudSubScribeReply
	(*GenerateWebDiagUrlReq)(nil),                      // 32: oneHook.v1.GenerateWebDiagUrlReq
	(*GenerateWebDiagUrlReply)(nil),                    // 33: oneHook.v1.GenerateWebDiagUrlReply
	(*WebDiagReq)(nil),                                 // 34: oneHook.v1.WebDiagReq
	(*WebDiagReply)(nil),                               // 35: oneHook.v1.WebDiagReply
	(*PrometheusAlertReq_PrometheusAlert)(nil),         // 36: oneHook.v1.PrometheusAlertReq.PrometheusAlert
	(*PrometheusAlertHisReply_PrometheusAlertHis)(nil), // 37: oneHook.v1.PrometheusAlertHisReply.PrometheusAlertHis
	nil, // 38: oneHook.v1.KubernetesEventReq.AnnotationsEntry
	(*GetKubernetesEventReply_KubernetesEvent)(nil),                 // 39: oneHook.v1.GetKubernetesEventReply.KubernetesEvent
	(*ListMonitorReceiverReply_MonitorReceiver)(nil),                // 40: oneHook.v1.ListMonitorReceiverReply.MonitorReceiver
	(*GetKubernetesEventReceiverReply_KubernetesEventReceiver)(nil), // 41: oneHook.v1.GetKubernetesEventReceiverReply.KubernetesEventReceiver
}
var file_oneHook_v1_hook_proto_depIdxs = []int32{
	36, // 0: oneHook.v1.PrometheusAlertReq.alerts:type_name -> oneHook.v1.PrometheusAlertReq.PrometheusAlert
	37, // 1: oneHook.v1.PrometheusAlertHisReply.alert:type_name -> oneHook.v1.PrometheusAlertHisReply.PrometheusAlertHis
	38, // 2: oneHook.v1.KubernetesEventReq.annotations:type_name -> oneHook.v1.KubernetesEventReq.AnnotationsEntry
	39, // 3: oneHook.v1.GetKubernetesEventReply.events:type_name -> oneHook.v1.GetKubernetesEventReply.KubernetesEvent
	40, // 4: oneHook.v1.ListMonitorReceiverReply.monitorReceiver:type_name -> oneHook.v1.ListMonitorReceiverReply.MonitorReceiver
	41, // 5: oneHook.v1.GetKubernetesEventReceiverReply.kubernetesEventReceiver:type_name -> oneHook.v1.GetKubernetesEventReceiverReply.KubernetesEventReceiver
	0,  // 6: oneHook.v1.OneHook.PrometheusAlert:input_type -> oneHook.v1.PrometheusAlertReq
	2,  // 7: oneHook.v1.OneHook.PrometheusAlertHis:input_type -> oneHook.v1.PrometheusAlertHisReq
	6,  // 8: oneHook.v1.OneHook.PrometheusAlertAck:input_type -> oneHook.v1.PrometheusAlertAckReq
	4,  // 9: oneHook.v1.OneHook.PrometheusAlertFingerprint:input_type -> oneHook.v1.PrometheusAlertFingerprintReq
	8,  // 10: oneHook.v1.OneHook.KubernetesEvent:input_type -> oneHook.v1.KubernetesEventReq
	10, // 11: oneHook.v1.OneHook.GetKubernetesEvent:input_type -> oneHook.v1.GetKubernetesEventReq
	12, // 12: oneHook.v1.OneHook.CreateMonitorReceiver:input_type -> oneHook.v1.CreateMonitorReceiverReq
	14, // 13: oneHook.v1.OneHook.ListMonitorReceiver:input_type -> oneHook.v1.ListMonitorReceiverReq
	16, // 14: oneHook.v1.OneHook.DelMonitorReceiver:input_type -> oneHook.v1.DelMonitorReceiverReq
	18, // 15: oneHook.v1.OneHook.CreateKubernetesEventReceiver:input_type -> oneHook.v1.CreateKubernetesEventReceiverReq
	20, // 16: oneHook.v1.OneHook.GetKubernetesEventReceiver:input_type -> oneHook.v1.GetKubernetesEventReceiverReq
	22, // 17: oneHook.v1.OneHook.DelKubernetesEventReceiver:input_type -> oneHook.v1.DelKubernetesEventReceiverReq
	24, // 18: oneHook.v1.OneHook.SkywalkingAlert:input_type -> oneHook.v1.SkywalkingAlertReq
	26, // 19: oneHook.v1.OneHook.SystemAudit:input_type -> oneHook.v1.SystemAuditReq
	30, // 20: oneHook.v1.OneHook.CloudSubScribe:input_type -> oneHook.v1.CloudSubScribeReq
	32, // 21: oneHook.v1.OneHook.GenerateWebDiagUrl:input_type -> oneHook.v1.GenerateWebDiagUrlReq
	34, // 22: oneHook.v1.OneHook.WebDiag:input_type -> oneHook.v1.WebDiagReq
	1,  // 23: oneHook.v1.OneHook.PrometheusAlert:output_type -> oneHook.v1.PrometheusAlertReply
	3,  // 24: oneHook.v1.OneHook.PrometheusAlertHis:output_type -> oneHook.v1.PrometheusAlertHisReply
	7,  // 25: oneHook.v1.OneHook.PrometheusAlertAck:output_type -> oneHook.v1.PrometheusAlertAckReply
	5,  // 26: oneHook.v1.OneHook.PrometheusAlertFingerprint:output_type -> oneHook.v1.PrometheusAlertFingerprintReply
	9,  // 27: oneHook.v1.OneHook.KubernetesEvent:output_type -> oneHook.v1.KubernetesEventReply
	11, // 28: oneHook.v1.OneHook.GetKubernetesEvent:output_type -> oneHook.v1.GetKubernetesEventReply
	13, // 29: oneHook.v1.OneHook.CreateMonitorReceiver:output_type -> oneHook.v1.CreateMonitorReceiverReply
	15, // 30: oneHook.v1.OneHook.ListMonitorReceiver:output_type -> oneHook.v1.ListMonitorReceiverReply
	17, // 31: oneHook.v1.OneHook.DelMonitorReceiver:output_type -> oneHook.v1.DelMonitorReceiverReply
	19, // 32: oneHook.v1.OneHook.CreateKubernetesEventReceiver:output_type -> oneHook.v1.CreateKubernetesEventReceiverReply
	21, // 33: oneHook.v1.OneHook.GetKubernetesEventReceiver:output_type -> oneHook.v1.GetKubernetesEventReceiverReply
	23, // 34: oneHook.v1.OneHook.DelKubernetesEventReceiver:output_type -> oneHook.v1.DelKubernetesEventReceiverReply
	25, // 35: oneHook.v1.OneHook.SkywalkingAlert:output_type -> oneHook.v1.SkywalkingAlertReply
	27, // 36: oneHook.v1.OneHook.SystemAudit:output_type -> oneHook.v1.SystemAuditReply
	31, // 37: oneHook.v1.OneHook.CloudSubScribe:output_type -> oneHook.v1.CloudSubScribeReply
	33, // 38: oneHook.v1.OneHook.GenerateWebDiagUrl:output_type -> oneHook.v1.GenerateWebDiagUrlReply
	35, // 39: oneHook.v1.OneHook.WebDiag:output_type -> oneHook.v1.WebDiagReply
	23, // [23:40] is the sub-list for method output_type
	6,  // [6:23] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_oneHook_v1_hook_proto_init() }
func file_oneHook_v1_hook_proto_init() {
	if File_oneHook_v1_hook_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_oneHook_v1_hook_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PrometheusAlertReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneHook_v1_hook_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PrometheusAlertReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneHook_v1_hook_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PrometheusAlertHisReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneHook_v1_hook_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PrometheusAlertHisReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneHook_v1_hook_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PrometheusAlertFingerprintReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneHook_v1_hook_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PrometheusAlertFingerprintReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneHook_v1_hook_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PrometheusAlertAckReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneHook_v1_hook_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PrometheusAlertAckReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneHook_v1_hook_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KubernetesEventReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneHook_v1_hook_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KubernetesEventReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneHook_v1_hook_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetKubernetesEventReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneHook_v1_hook_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetKubernetesEventReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneHook_v1_hook_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateMonitorReceiverReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneHook_v1_hook_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateMonitorReceiverReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneHook_v1_hook_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMonitorReceiverReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneHook_v1_hook_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMonitorReceiverReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneHook_v1_hook_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelMonitorReceiverReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneHook_v1_hook_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelMonitorReceiverReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneHook_v1_hook_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateKubernetesEventReceiverReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneHook_v1_hook_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateKubernetesEventReceiverReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneHook_v1_hook_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetKubernetesEventReceiverReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneHook_v1_hook_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetKubernetesEventReceiverReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneHook_v1_hook_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelKubernetesEventReceiverReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneHook_v1_hook_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelKubernetesEventReceiverReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneHook_v1_hook_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SkywalkingAlertReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneHook_v1_hook_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SkywalkingAlertReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneHook_v1_hook_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemAuditReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneHook_v1_hook_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemAuditReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneHook_v1_hook_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DatabaseDDLSQLAuditReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneHook_v1_hook_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DatabaseDDLSQLAuditReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneHook_v1_hook_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloudSubScribeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneHook_v1_hook_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloudSubScribeReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneHook_v1_hook_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateWebDiagUrlReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneHook_v1_hook_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateWebDiagUrlReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneHook_v1_hook_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebDiagReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneHook_v1_hook_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebDiagReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneHook_v1_hook_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PrometheusAlertReq_PrometheusAlert); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneHook_v1_hook_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PrometheusAlertHisReply_PrometheusAlertHis); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneHook_v1_hook_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetKubernetesEventReply_KubernetesEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneHook_v1_hook_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMonitorReceiverReply_MonitorReceiver); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneHook_v1_hook_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetKubernetesEventReceiverReply_KubernetesEventReceiver); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_oneHook_v1_hook_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   42,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_oneHook_v1_hook_proto_goTypes,
		DependencyIndexes: file_oneHook_v1_hook_proto_depIdxs,
		MessageInfos:      file_oneHook_v1_hook_proto_msgTypes,
	}.Build()
	File_oneHook_v1_hook_proto = out.File
	file_oneHook_v1_hook_proto_rawDesc = nil
	file_oneHook_v1_hook_proto_goTypes = nil
	file_oneHook_v1_hook_proto_depIdxs = nil
}
