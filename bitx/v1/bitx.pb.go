// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.14.0
// source: bitx/v1/bitx.proto

package v1

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 列出 Symbol
type ListSymbolReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListSymbolReq) Reset() {
	*x = ListSymbolReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bitx_v1_bitx_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSymbolReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSymbolReq) ProtoMessage() {}

func (x *ListSymbolReq) ProtoReflect() protoreflect.Message {
	mi := &file_bitx_v1_bitx_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSymbolReq.ProtoReflect.Descriptor instead.
func (*ListSymbolReq) Descriptor() ([]byte, []int) {
	return file_bitx_v1_bitx_proto_rawDescGZIP(), []int{0}
}

type ListSymbolReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Symbols []string `protobuf:"bytes,1,rep,name=symbols,proto3" json:"symbols,omitempty"`
}

func (x *ListSymbolReply) Reset() {
	*x = ListSymbolReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bitx_v1_bitx_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSymbolReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSymbolReply) ProtoMessage() {}

func (x *ListSymbolReply) ProtoReflect() protoreflect.Message {
	mi := &file_bitx_v1_bitx_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSymbolReply.ProtoReflect.Descriptor instead.
func (*ListSymbolReply) Descriptor() ([]byte, []int) {
	return file_bitx_v1_bitx_proto_rawDescGZIP(), []int{1}
}

func (x *ListSymbolReply) GetSymbols() []string {
	if x != nil {
		return x.Symbols
	}
	return nil
}

// 列出 Symbol 价格
type ListSymbolPriceReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Symbol    string `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	StartTime int64  `protobuf:"varint,2,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime   int64  `protobuf:"varint,3,opt,name=endTime,proto3" json:"endTime,omitempty"`
}

func (x *ListSymbolPriceReq) Reset() {
	*x = ListSymbolPriceReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bitx_v1_bitx_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSymbolPriceReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSymbolPriceReq) ProtoMessage() {}

func (x *ListSymbolPriceReq) ProtoReflect() protoreflect.Message {
	mi := &file_bitx_v1_bitx_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSymbolPriceReq.ProtoReflect.Descriptor instead.
func (*ListSymbolPriceReq) Descriptor() ([]byte, []int) {
	return file_bitx_v1_bitx_proto_rawDescGZIP(), []int{2}
}

func (x *ListSymbolPriceReq) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *ListSymbolPriceReq) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *ListSymbolPriceReq) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

type ListSymbolPriceReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Prices []*ListSymbolPriceReply_Price `protobuf:"bytes,1,rep,name=prices,proto3" json:"prices,omitempty"`
}

func (x *ListSymbolPriceReply) Reset() {
	*x = ListSymbolPriceReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bitx_v1_bitx_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSymbolPriceReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSymbolPriceReply) ProtoMessage() {}

func (x *ListSymbolPriceReply) ProtoReflect() protoreflect.Message {
	mi := &file_bitx_v1_bitx_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSymbolPriceReply.ProtoReflect.Descriptor instead.
func (*ListSymbolPriceReply) Descriptor() ([]byte, []int) {
	return file_bitx_v1_bitx_proto_rawDescGZIP(), []int{3}
}

func (x *ListSymbolPriceReply) GetPrices() []*ListSymbolPriceReply_Price {
	if x != nil {
		return x.Prices
	}
	return nil
}

type GetDailyAssetReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Asset     string `protobuf:"bytes,1,opt,name=asset,proto3" json:"asset,omitempty"`
	StartTime int64  `protobuf:"varint,2,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime   int64  `protobuf:"varint,3,opt,name=endTime,proto3" json:"endTime,omitempty"`
}

func (x *GetDailyAssetReq) Reset() {
	*x = GetDailyAssetReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bitx_v1_bitx_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDailyAssetReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDailyAssetReq) ProtoMessage() {}

func (x *GetDailyAssetReq) ProtoReflect() protoreflect.Message {
	mi := &file_bitx_v1_bitx_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDailyAssetReq.ProtoReflect.Descriptor instead.
func (*GetDailyAssetReq) Descriptor() ([]byte, []int) {
	return file_bitx_v1_bitx_proto_rawDescGZIP(), []int{4}
}

func (x *GetDailyAssetReq) GetAsset() string {
	if x != nil {
		return x.Asset
	}
	return ""
}

func (x *GetDailyAssetReq) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *GetDailyAssetReq) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

type GetDailyAssetReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Asset []*GetDailyAssetReply_Asset `protobuf:"bytes,1,rep,name=asset,proto3" json:"asset,omitempty"`
}

func (x *GetDailyAssetReply) Reset() {
	*x = GetDailyAssetReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bitx_v1_bitx_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDailyAssetReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDailyAssetReply) ProtoMessage() {}

func (x *GetDailyAssetReply) ProtoReflect() protoreflect.Message {
	mi := &file_bitx_v1_bitx_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDailyAssetReply.ProtoReflect.Descriptor instead.
func (*GetDailyAssetReply) Descriptor() ([]byte, []int) {
	return file_bitx_v1_bitx_proto_rawDescGZIP(), []int{5}
}

func (x *GetDailyAssetReply) GetAsset() []*GetDailyAssetReply_Asset {
	if x != nil {
		return x.Asset
	}
	return nil
}

type ListSymbolPriceReply_Price struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PriceChange        float32 `protobuf:"fixed32,1,opt,name=PriceChange,proto3" json:"PriceChange,omitempty"`
	PriceChangePercent float32 `protobuf:"fixed32,2,opt,name=PriceChangePercent,proto3" json:"PriceChangePercent,omitempty"`
	WeightedAvgPrice   float32 `protobuf:"fixed32,3,opt,name=WeightedAvgPrice,proto3" json:"WeightedAvgPrice,omitempty"`
	OpenPrice          float32 `protobuf:"fixed32,4,opt,name=OpenPrice,proto3" json:"OpenPrice,omitempty"`
	HighPrice          float32 `protobuf:"fixed32,5,opt,name=HighPrice,proto3" json:"HighPrice,omitempty"`
	LowPrice           float32 `protobuf:"fixed32,6,opt,name=LowPrice,proto3" json:"LowPrice,omitempty"`
	LastPrice          float32 `protobuf:"fixed32,7,opt,name=LastPrice,proto3" json:"LastPrice,omitempty"`
	Volume             float32 `protobuf:"fixed32,8,opt,name=Volume,proto3" json:"Volume,omitempty"`
	QuoteVolume        float32 `protobuf:"fixed32,9,opt,name=QuoteVolume,proto3" json:"QuoteVolume,omitempty"`
	OpenTime           int64   `protobuf:"varint,10,opt,name=OpenTime,proto3" json:"OpenTime,omitempty"`
	CloseTime          int64   `protobuf:"varint,11,opt,name=CloseTime,proto3" json:"CloseTime,omitempty"`
	Count              int32   `protobuf:"varint,12,opt,name=Count,proto3" json:"Count,omitempty"`
}

func (x *ListSymbolPriceReply_Price) Reset() {
	*x = ListSymbolPriceReply_Price{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bitx_v1_bitx_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSymbolPriceReply_Price) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSymbolPriceReply_Price) ProtoMessage() {}

func (x *ListSymbolPriceReply_Price) ProtoReflect() protoreflect.Message {
	mi := &file_bitx_v1_bitx_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSymbolPriceReply_Price.ProtoReflect.Descriptor instead.
func (*ListSymbolPriceReply_Price) Descriptor() ([]byte, []int) {
	return file_bitx_v1_bitx_proto_rawDescGZIP(), []int{3, 0}
}

func (x *ListSymbolPriceReply_Price) GetPriceChange() float32 {
	if x != nil {
		return x.PriceChange
	}
	return 0
}

func (x *ListSymbolPriceReply_Price) GetPriceChangePercent() float32 {
	if x != nil {
		return x.PriceChangePercent
	}
	return 0
}

func (x *ListSymbolPriceReply_Price) GetWeightedAvgPrice() float32 {
	if x != nil {
		return x.WeightedAvgPrice
	}
	return 0
}

func (x *ListSymbolPriceReply_Price) GetOpenPrice() float32 {
	if x != nil {
		return x.OpenPrice
	}
	return 0
}

func (x *ListSymbolPriceReply_Price) GetHighPrice() float32 {
	if x != nil {
		return x.HighPrice
	}
	return 0
}

func (x *ListSymbolPriceReply_Price) GetLowPrice() float32 {
	if x != nil {
		return x.LowPrice
	}
	return 0
}

func (x *ListSymbolPriceReply_Price) GetLastPrice() float32 {
	if x != nil {
		return x.LastPrice
	}
	return 0
}

func (x *ListSymbolPriceReply_Price) GetVolume() float32 {
	if x != nil {
		return x.Volume
	}
	return 0
}

func (x *ListSymbolPriceReply_Price) GetQuoteVolume() float32 {
	if x != nil {
		return x.QuoteVolume
	}
	return 0
}

func (x *ListSymbolPriceReply_Price) GetOpenTime() int64 {
	if x != nil {
		return x.OpenTime
	}
	return 0
}

func (x *ListSymbolPriceReply_Price) GetCloseTime() int64 {
	if x != nil {
		return x.CloseTime
	}
	return 0
}

func (x *ListSymbolPriceReply_Price) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type GetDailyAssetReply_Asset struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Asset      string  `protobuf:"bytes,1,opt,name=asset,proto3" json:"asset,omitempty"`
	Free       float32 `protobuf:"fixed32,2,opt,name=free,proto3" json:"free,omitempty"`
	Locked     float32 `protobuf:"fixed32,3,opt,name=locked,proto3" json:"locked,omitempty"`
	Time       int64   `protobuf:"varint,4,opt,name=time,proto3" json:"time,omitempty"`
	CreateTime int64   `protobuf:"varint,5,opt,name=createTime,proto3" json:"createTime,omitempty"`
}

func (x *GetDailyAssetReply_Asset) Reset() {
	*x = GetDailyAssetReply_Asset{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bitx_v1_bitx_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDailyAssetReply_Asset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDailyAssetReply_Asset) ProtoMessage() {}

func (x *GetDailyAssetReply_Asset) ProtoReflect() protoreflect.Message {
	mi := &file_bitx_v1_bitx_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDailyAssetReply_Asset.ProtoReflect.Descriptor instead.
func (*GetDailyAssetReply_Asset) Descriptor() ([]byte, []int) {
	return file_bitx_v1_bitx_proto_rawDescGZIP(), []int{5, 0}
}

func (x *GetDailyAssetReply_Asset) GetAsset() string {
	if x != nil {
		return x.Asset
	}
	return ""
}

func (x *GetDailyAssetReply_Asset) GetFree() float32 {
	if x != nil {
		return x.Free
	}
	return 0
}

func (x *GetDailyAssetReply_Asset) GetLocked() float32 {
	if x != nil {
		return x.Locked
	}
	return 0
}

func (x *GetDailyAssetReply_Asset) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *GetDailyAssetReply_Asset) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

var File_bitx_v1_bitx_proto protoreflect.FileDescriptor

var file_bitx_v1_bitx_proto_rawDesc = []byte{
	0x0a, 0x12, 0x62, 0x69, 0x74, 0x78, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x69, 0x74, 0x78, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x62, 0x69, 0x74, 0x78, 0x2e, 0x76, 0x31, 0x1a, 0x17, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x0f, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x79,
	0x6d, 0x62, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x22, 0x2b, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x53,
	0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x79,
	0x6d, 0x62, 0x6f, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x73, 0x79, 0x6d,
	0x62, 0x6f, 0x6c, 0x73, 0x22, 0x64, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x79, 0x6d, 0x62,
	0x6f, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79,
	0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62,
	0x6f, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xdb, 0x03, 0x0a, 0x14, 0x4c,
	0x69, 0x73, 0x74, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x3b, 0x0a, 0x06, 0x70, 0x72, 0x69, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x62, 0x69, 0x74, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x2e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x06, 0x70, 0x72, 0x69, 0x63, 0x65, 0x73,
	0x1a, 0x85, 0x03, 0x0a, 0x05, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x0b, 0x50, 0x72, 0x69, 0x63, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x2e, 0x0a, 0x12,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x65, 0x72, 0x63, 0x65,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x12, 0x50, 0x72, 0x69, 0x63, 0x65, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x10,
	0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x65, 0x64, 0x41, 0x76, 0x67, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x10, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x65, 0x64,
	0x41, 0x76, 0x67, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x4f, 0x70, 0x65, 0x6e,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x4f, 0x70, 0x65,
	0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x48, 0x69, 0x67, 0x68, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x48, 0x69, 0x67, 0x68, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x4c, 0x6f, 0x77, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x4c, 0x6f, 0x77, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x4c, 0x61, 0x73, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x09, 0x4c, 0x61, 0x73, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06,
	0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x56,
	0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x51, 0x75, 0x6f,
	0x74, 0x65, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x4f, 0x70, 0x65, 0x6e,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x4f, 0x70, 0x65, 0x6e,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x60, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x44,
	0x61, 0x69, 0x6c, 0x79, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05,
	0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xcc, 0x01, 0x0a, 0x12, 0x47,
	0x65, 0x74, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x37, 0x0a, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x62, 0x69, 0x74, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x61,
	0x69, 0x6c, 0x79, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x41, 0x73,
	0x73, 0x65, 0x74, 0x52, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x1a, 0x7d, 0x0a, 0x05, 0x41, 0x73,
	0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x65,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x66, 0x72, 0x65, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x6c,
	0x6f, 0x63, 0x6b, 0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x32, 0xe2, 0x01, 0x0a, 0x02, 0x63, 0x69,
	0x12, 0x40, 0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x16,
	0x2e, 0x62, 0x69, 0x74, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x79, 0x6d,
	0x62, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x62, 0x69, 0x74, 0x78, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x00, 0x12, 0x4f, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1b, 0x2e, 0x62, 0x69, 0x74, 0x78, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52,
	0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x62, 0x69, 0x74, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x41,
	0x73, 0x73, 0x65, 0x74, 0x12, 0x19, 0x2e, 0x62, 0x69, 0x74, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x1a,
	0x1b, 0x2e, 0x62, 0x69, 0x74, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x61, 0x69,
	0x6c, 0x79, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x42, 0x2a,
	0x5a, 0x28, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x4f, 0x70, 0x73, 0x7a, 0x2f, 0x62, 0x69, 0x74, 0x78, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x62, 0x69, 0x74, 0x78, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_bitx_v1_bitx_proto_rawDescOnce sync.Once
	file_bitx_v1_bitx_proto_rawDescData = file_bitx_v1_bitx_proto_rawDesc
)

func file_bitx_v1_bitx_proto_rawDescGZIP() []byte {
	file_bitx_v1_bitx_proto_rawDescOnce.Do(func() {
		file_bitx_v1_bitx_proto_rawDescData = protoimpl.X.CompressGZIP(file_bitx_v1_bitx_proto_rawDescData)
	})
	return file_bitx_v1_bitx_proto_rawDescData
}

var file_bitx_v1_bitx_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_bitx_v1_bitx_proto_goTypes = []interface{}{
	(*ListSymbolReq)(nil),              // 0: bitx.v1.ListSymbolReq
	(*ListSymbolReply)(nil),            // 1: bitx.v1.ListSymbolReply
	(*ListSymbolPriceReq)(nil),         // 2: bitx.v1.ListSymbolPriceReq
	(*ListSymbolPriceReply)(nil),       // 3: bitx.v1.ListSymbolPriceReply
	(*GetDailyAssetReq)(nil),           // 4: bitx.v1.GetDailyAssetReq
	(*GetDailyAssetReply)(nil),         // 5: bitx.v1.GetDailyAssetReply
	(*ListSymbolPriceReply_Price)(nil), // 6: bitx.v1.ListSymbolPriceReply.Price
	(*GetDailyAssetReply_Asset)(nil),   // 7: bitx.v1.GetDailyAssetReply.Asset
}
var file_bitx_v1_bitx_proto_depIdxs = []int32{
	6, // 0: bitx.v1.ListSymbolPriceReply.prices:type_name -> bitx.v1.ListSymbolPriceReply.Price
	7, // 1: bitx.v1.GetDailyAssetReply.asset:type_name -> bitx.v1.GetDailyAssetReply.Asset
	0, // 2: bitx.v1.ci.ListSymbol:input_type -> bitx.v1.ListSymbolReq
	2, // 3: bitx.v1.ci.ListSymbolPrice:input_type -> bitx.v1.ListSymbolPriceReq
	4, // 4: bitx.v1.ci.GetDailyAsset:input_type -> bitx.v1.GetDailyAssetReq
	1, // 5: bitx.v1.ci.ListSymbol:output_type -> bitx.v1.ListSymbolReply
	3, // 6: bitx.v1.ci.ListSymbolPrice:output_type -> bitx.v1.ListSymbolPriceReply
	5, // 7: bitx.v1.ci.GetDailyAsset:output_type -> bitx.v1.GetDailyAssetReply
	5, // [5:8] is the sub-list for method output_type
	2, // [2:5] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_bitx_v1_bitx_proto_init() }
func file_bitx_v1_bitx_proto_init() {
	if File_bitx_v1_bitx_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_bitx_v1_bitx_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSymbolReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bitx_v1_bitx_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSymbolReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bitx_v1_bitx_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSymbolPriceReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bitx_v1_bitx_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSymbolPriceReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bitx_v1_bitx_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDailyAssetReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bitx_v1_bitx_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDailyAssetReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bitx_v1_bitx_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSymbolPriceReply_Price); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bitx_v1_bitx_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDailyAssetReply_Asset); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_bitx_v1_bitx_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_bitx_v1_bitx_proto_goTypes,
		DependencyIndexes: file_bitx_v1_bitx_proto_depIdxs,
		MessageInfos:      file_bitx_v1_bitx_proto_msgTypes,
	}.Build()
	File_bitx_v1_bitx_proto = out.File
	file_bitx_v1_bitx_proto_rawDesc = nil
	file_bitx_v1_bitx_proto_goTypes = nil
	file_bitx_v1_bitx_proto_depIdxs = nil
}
