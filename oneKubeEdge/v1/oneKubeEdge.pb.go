// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.14.0
// source: oneKubeEdge/v1/oneKubeEdge.proto

package v1

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StrategyType int32

const (
	StrategyType_RollingUpdate StrategyType = 0
	StrategyType_Recreate      StrategyType = 1
)

// Enum value maps for StrategyType.
var (
	StrategyType_name = map[int32]string{
		0: "RollingUpdate",
		1: "Recreate",
	}
	StrategyType_value = map[string]int32{
		"RollingUpdate": 0,
		"Recreate":      1,
	}
)

func (x StrategyType) Enum() *StrategyType {
	p := new(StrategyType)
	*p = x
	return p
}

func (x StrategyType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StrategyType) Descriptor() protoreflect.EnumDescriptor {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_enumTypes[0].Descriptor()
}

func (StrategyType) Type() protoreflect.EnumType {
	return &file_oneKubeEdge_v1_oneKubeEdge_proto_enumTypes[0]
}

func (x StrategyType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StrategyType.Descriptor instead.
func (StrategyType) EnumDescriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{0}
}

type GetClusterSummaryReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetClusterSummaryReq) Reset() {
	*x = GetClusterSummaryReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetClusterSummaryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClusterSummaryReq) ProtoMessage() {}

func (x *GetClusterSummaryReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClusterSummaryReq.ProtoReflect.Descriptor instead.
func (*GetClusterSummaryReq) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{0}
}

type GetClusterSummaryReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CapacityCpu               int64   `protobuf:"varint,1,opt,name=capacityCpu,proto3" json:"capacityCpu,omitempty"`
	CapacityMemory            int64   `protobuf:"varint,2,opt,name=capacityMemory,proto3" json:"capacityMemory,omitempty"`
	CapacityStorage           int64   `protobuf:"varint,3,opt,name=capacityStorage,proto3" json:"capacityStorage,omitempty"`
	AllocatableCpu            int64   `protobuf:"varint,4,opt,name=allocatableCpu,proto3" json:"allocatableCpu,omitempty"`
	AllocatableMemory         int64   `protobuf:"varint,5,opt,name=allocatableMemory,proto3" json:"allocatableMemory,omitempty"`
	AllocatableStorage        int64   `protobuf:"varint,6,opt,name=allocatableStorage,proto3" json:"allocatableStorage,omitempty"`
	AllocatableCpuPercent     float32 `protobuf:"fixed32,7,opt,name=allocatableCpuPercent,proto3" json:"allocatableCpuPercent,omitempty"`
	AllocatableMemoryPercent  float32 `protobuf:"fixed32,8,opt,name=allocatableMemoryPercent,proto3" json:"allocatableMemoryPercent,omitempty"`
	AllocatableStoragePercent float32 `protobuf:"fixed32,9,opt,name=allocatableStoragePercent,proto3" json:"allocatableStoragePercent,omitempty"`
	AssignedCpu               int64   `protobuf:"varint,10,opt,name=assignedCpu,proto3" json:"assignedCpu,omitempty"`
	AssignedMemory            int64   `protobuf:"varint,11,opt,name=assignedMemory,proto3" json:"assignedMemory,omitempty"`
	AssignedStorage           int64   `protobuf:"varint,12,opt,name=assignedStorage,proto3" json:"assignedStorage,omitempty"`
	AssignedCpuPercent        float32 `protobuf:"fixed32,13,opt,name=assignedCpuPercent,proto3" json:"assignedCpuPercent,omitempty"`
	AssignedMemoryPercent     float32 `protobuf:"fixed32,14,opt,name=assignedMemoryPercent,proto3" json:"assignedMemoryPercent,omitempty"`
	AssignedStoragePercent    float32 `protobuf:"fixed32,15,opt,name=assignedStoragePercent,proto3" json:"assignedStoragePercent,omitempty"`
}

func (x *GetClusterSummaryReply) Reset() {
	*x = GetClusterSummaryReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetClusterSummaryReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClusterSummaryReply) ProtoMessage() {}

func (x *GetClusterSummaryReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClusterSummaryReply.ProtoReflect.Descriptor instead.
func (*GetClusterSummaryReply) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{1}
}

func (x *GetClusterSummaryReply) GetCapacityCpu() int64 {
	if x != nil {
		return x.CapacityCpu
	}
	return 0
}

func (x *GetClusterSummaryReply) GetCapacityMemory() int64 {
	if x != nil {
		return x.CapacityMemory
	}
	return 0
}

func (x *GetClusterSummaryReply) GetCapacityStorage() int64 {
	if x != nil {
		return x.CapacityStorage
	}
	return 0
}

func (x *GetClusterSummaryReply) GetAllocatableCpu() int64 {
	if x != nil {
		return x.AllocatableCpu
	}
	return 0
}

func (x *GetClusterSummaryReply) GetAllocatableMemory() int64 {
	if x != nil {
		return x.AllocatableMemory
	}
	return 0
}

func (x *GetClusterSummaryReply) GetAllocatableStorage() int64 {
	if x != nil {
		return x.AllocatableStorage
	}
	return 0
}

func (x *GetClusterSummaryReply) GetAllocatableCpuPercent() float32 {
	if x != nil {
		return x.AllocatableCpuPercent
	}
	return 0
}

func (x *GetClusterSummaryReply) GetAllocatableMemoryPercent() float32 {
	if x != nil {
		return x.AllocatableMemoryPercent
	}
	return 0
}

func (x *GetClusterSummaryReply) GetAllocatableStoragePercent() float32 {
	if x != nil {
		return x.AllocatableStoragePercent
	}
	return 0
}

func (x *GetClusterSummaryReply) GetAssignedCpu() int64 {
	if x != nil {
		return x.AssignedCpu
	}
	return 0
}

func (x *GetClusterSummaryReply) GetAssignedMemory() int64 {
	if x != nil {
		return x.AssignedMemory
	}
	return 0
}

func (x *GetClusterSummaryReply) GetAssignedStorage() int64 {
	if x != nil {
		return x.AssignedStorage
	}
	return 0
}

func (x *GetClusterSummaryReply) GetAssignedCpuPercent() float32 {
	if x != nil {
		return x.AssignedCpuPercent
	}
	return 0
}

func (x *GetClusterSummaryReply) GetAssignedMemoryPercent() float32 {
	if x != nil {
		return x.AssignedMemoryPercent
	}
	return 0
}

func (x *GetClusterSummaryReply) GetAssignedStoragePercent() float32 {
	if x != nil {
		return x.AssignedStoragePercent
	}
	return 0
}

type GetNodeMetricsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetNodeMetricsReq) Reset() {
	*x = GetNodeMetricsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNodeMetricsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNodeMetricsReq) ProtoMessage() {}

func (x *GetNodeMetricsReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNodeMetricsReq.ProtoReflect.Descriptor instead.
func (*GetNodeMetricsReq) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{2}
}

func (x *GetNodeMetricsReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetNodeMetricsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cpu       string `protobuf:"bytes,1,opt,name=cpu,proto3" json:"cpu,omitempty"`
	Memory    string `protobuf:"bytes,2,opt,name=memory,proto3" json:"memory,omitempty"`
	Window    string `protobuf:"bytes,3,opt,name=window,proto3" json:"window,omitempty"`
	Timestamp int64  `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *GetNodeMetricsReply) Reset() {
	*x = GetNodeMetricsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNodeMetricsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNodeMetricsReply) ProtoMessage() {}

func (x *GetNodeMetricsReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNodeMetricsReply.ProtoReflect.Descriptor instead.
func (*GetNodeMetricsReply) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{3}
}

func (x *GetNodeMetricsReply) GetCpu() string {
	if x != nil {
		return x.Cpu
	}
	return ""
}

func (x *GetNodeMetricsReply) GetMemory() string {
	if x != nil {
		return x.Memory
	}
	return ""
}

func (x *GetNodeMetricsReply) GetWindow() string {
	if x != nil {
		return x.Window
	}
	return ""
}

func (x *GetNodeMetricsReply) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type GetPodMetricsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetPodMetricsReq) Reset() {
	*x = GetPodMetricsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPodMetricsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPodMetricsReq) ProtoMessage() {}

func (x *GetPodMetricsReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPodMetricsReq.ProtoReflect.Descriptor instead.
func (*GetPodMetricsReq) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{4}
}

func (x *GetPodMetricsReq) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *GetPodMetricsReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetPodMetricsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PodMetrics []*GetPodMetricsReply_ContainerMetrics `protobuf:"bytes,1,rep,name=podMetrics,proto3" json:"podMetrics,omitempty"`
}

func (x *GetPodMetricsReply) Reset() {
	*x = GetPodMetricsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPodMetricsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPodMetricsReply) ProtoMessage() {}

func (x *GetPodMetricsReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPodMetricsReply.ProtoReflect.Descriptor instead.
func (*GetPodMetricsReply) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{5}
}

func (x *GetPodMetricsReply) GetPodMetrics() []*GetPodMetricsReply_ContainerMetrics {
	if x != nil {
		return x.PodMetrics
	}
	return nil
}

// 创建 NameSpace
type CreateNameSpaceReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (x *CreateNameSpaceReq) Reset() {
	*x = CreateNameSpaceReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateNameSpaceReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNameSpaceReq) ProtoMessage() {}

func (x *CreateNameSpaceReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNameSpaceReq.ProtoReflect.Descriptor instead.
func (*CreateNameSpaceReq) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{6}
}

func (x *CreateNameSpaceReq) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

type CreateNameSpaceReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *CreateNameSpaceReply) Reset() {
	*x = CreateNameSpaceReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateNameSpaceReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNameSpaceReply) ProtoMessage() {}

func (x *CreateNameSpaceReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNameSpaceReply.ProtoReflect.Descriptor instead.
func (*CreateNameSpaceReply) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{7}
}

func (x *CreateNameSpaceReply) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

type ListNameSpaceReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListNameSpaceReq) Reset() {
	*x = ListNameSpaceReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListNameSpaceReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNameSpaceReq) ProtoMessage() {}

func (x *ListNameSpaceReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNameSpaceReq.ProtoReflect.Descriptor instead.
func (*ListNameSpaceReq) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{8}
}

type ListNameSpaceReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace []*ListNameSpaceReply_NameSpace `protobuf:"bytes,1,rep,name=namespace,proto3" json:"namespace,omitempty"`
}

func (x *ListNameSpaceReply) Reset() {
	*x = ListNameSpaceReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListNameSpaceReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNameSpaceReply) ProtoMessage() {}

func (x *ListNameSpaceReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNameSpaceReply.ProtoReflect.Descriptor instead.
func (*ListNameSpaceReply) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{9}
}

func (x *ListNameSpaceReply) GetNamespace() []*ListNameSpaceReply_NameSpace {
	if x != nil {
		return x.Namespace
	}
	return nil
}

type DelNameSpaceReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (x *DelNameSpaceReq) Reset() {
	*x = DelNameSpaceReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelNameSpaceReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelNameSpaceReq) ProtoMessage() {}

func (x *DelNameSpaceReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelNameSpaceReq.ProtoReflect.Descriptor instead.
func (*DelNameSpaceReq) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{10}
}

func (x *DelNameSpaceReq) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

type DelNameSpaceReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *DelNameSpaceReply) Reset() {
	*x = DelNameSpaceReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelNameSpaceReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelNameSpaceReply) ProtoMessage() {}

func (x *DelNameSpaceReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelNameSpaceReply.ProtoReflect.Descriptor instead.
func (*DelNameSpaceReply) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{11}
}

func (x *DelNameSpaceReply) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

// ConfigMap
type ConfigMap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string            `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name      string            `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Data      map[string]string `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Immutable bool              `protobuf:"varint,4,opt,name=immutable,proto3" json:"immutable,omitempty"`
}

func (x *ConfigMap) Reset() {
	*x = ConfigMap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigMap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigMap) ProtoMessage() {}

func (x *ConfigMap) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigMap.ProtoReflect.Descriptor instead.
func (*ConfigMap) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{12}
}

func (x *ConfigMap) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ConfigMap) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ConfigMap) GetData() map[string]string {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ConfigMap) GetImmutable() bool {
	if x != nil {
		return x.Immutable
	}
	return false
}

type CreateConfigMapReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string            `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name      string            `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Data      map[string]string `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Immutable bool              `protobuf:"varint,4,opt,name=immutable,proto3" json:"immutable,omitempty"`
}

func (x *CreateConfigMapReq) Reset() {
	*x = CreateConfigMapReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateConfigMapReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateConfigMapReq) ProtoMessage() {}

func (x *CreateConfigMapReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateConfigMapReq.ProtoReflect.Descriptor instead.
func (*CreateConfigMapReq) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{13}
}

func (x *CreateConfigMapReq) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *CreateConfigMapReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateConfigMapReq) GetData() map[string]string {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *CreateConfigMapReq) GetImmutable() bool {
	if x != nil {
		return x.Immutable
	}
	return false
}

type CreateConfigMapReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *CreateConfigMapReply) Reset() {
	*x = CreateConfigMapReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateConfigMapReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateConfigMapReply) ProtoMessage() {}

func (x *CreateConfigMapReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateConfigMapReply.ProtoReflect.Descriptor instead.
func (*CreateConfigMapReply) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{14}
}

func (x *CreateConfigMapReply) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

type ListConfigMapReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (x *ListConfigMapReq) Reset() {
	*x = ListConfigMapReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListConfigMapReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListConfigMapReq) ProtoMessage() {}

func (x *ListConfigMapReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListConfigMapReq.ProtoReflect.Descriptor instead.
func (*ListConfigMapReq) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{15}
}

func (x *ListConfigMapReq) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

type ListConfigMapReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConfigMap []*ConfigMap `protobuf:"bytes,1,rep,name=configMap,proto3" json:"configMap,omitempty"`
}

func (x *ListConfigMapReply) Reset() {
	*x = ListConfigMapReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListConfigMapReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListConfigMapReply) ProtoMessage() {}

func (x *ListConfigMapReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListConfigMapReply.ProtoReflect.Descriptor instead.
func (*ListConfigMapReply) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{16}
}

func (x *ListConfigMapReply) GetConfigMap() []*ConfigMap {
	if x != nil {
		return x.ConfigMap
	}
	return nil
}

type GetConfigMapReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetConfigMapReq) Reset() {
	*x = GetConfigMapReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetConfigMapReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConfigMapReq) ProtoMessage() {}

func (x *GetConfigMapReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConfigMapReq.ProtoReflect.Descriptor instead.
func (*GetConfigMapReq) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{17}
}

func (x *GetConfigMapReq) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *GetConfigMapReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetConfigMapReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string            `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name      string            `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Data      map[string]string `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Immutable bool              `protobuf:"varint,4,opt,name=immutable,proto3" json:"immutable,omitempty"`
}

func (x *GetConfigMapReply) Reset() {
	*x = GetConfigMapReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetConfigMapReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConfigMapReply) ProtoMessage() {}

func (x *GetConfigMapReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConfigMapReply.ProtoReflect.Descriptor instead.
func (*GetConfigMapReply) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{18}
}

func (x *GetConfigMapReply) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *GetConfigMapReply) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetConfigMapReply) GetData() map[string]string {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GetConfigMapReply) GetImmutable() bool {
	if x != nil {
		return x.Immutable
	}
	return false
}

type DelConfigMapReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *DelConfigMapReq) Reset() {
	*x = DelConfigMapReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelConfigMapReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelConfigMapReq) ProtoMessage() {}

func (x *DelConfigMapReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelConfigMapReq.ProtoReflect.Descriptor instead.
func (*DelConfigMapReq) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{19}
}

func (x *DelConfigMapReq) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *DelConfigMapReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type DelConfigMapReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *DelConfigMapReply) Reset() {
	*x = DelConfigMapReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelConfigMapReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelConfigMapReply) ProtoMessage() {}

func (x *DelConfigMapReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelConfigMapReply.ProtoReflect.Descriptor instead.
func (*DelConfigMapReply) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{20}
}

func (x *DelConfigMapReply) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

type UpdateConfigMapReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string            `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name      string            `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Data      map[string]string `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Immutable bool              `protobuf:"varint,4,opt,name=immutable,proto3" json:"immutable,omitempty"`
}

func (x *UpdateConfigMapReq) Reset() {
	*x = UpdateConfigMapReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateConfigMapReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateConfigMapReq) ProtoMessage() {}

func (x *UpdateConfigMapReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateConfigMapReq.ProtoReflect.Descriptor instead.
func (*UpdateConfigMapReq) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{21}
}

func (x *UpdateConfigMapReq) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *UpdateConfigMapReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateConfigMapReq) GetData() map[string]string {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *UpdateConfigMapReq) GetImmutable() bool {
	if x != nil {
		return x.Immutable
	}
	return false
}

type UpdateConfigMapReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *UpdateConfigMapReply) Reset() {
	*x = UpdateConfigMapReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateConfigMapReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateConfigMapReply) ProtoMessage() {}

func (x *UpdateConfigMapReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateConfigMapReply.ProtoReflect.Descriptor instead.
func (*UpdateConfigMapReply) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{22}
}

func (x *UpdateConfigMapReply) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

// Deployment
type Deployment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjectMeta *ObjectMeta       `protobuf:"bytes,1,opt,name=objectMeta,proto3" json:"objectMeta,omitempty"`
	Spec       *DeploymentSpec   `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
	Status     *DeploymentStatus `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *Deployment) Reset() {
	*x = Deployment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Deployment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Deployment) ProtoMessage() {}

func (x *Deployment) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Deployment.ProtoReflect.Descriptor instead.
func (*Deployment) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{23}
}

func (x *Deployment) GetObjectMeta() *ObjectMeta {
	if x != nil {
		return x.ObjectMeta
	}
	return nil
}

func (x *Deployment) GetSpec() *DeploymentSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *Deployment) GetStatus() *DeploymentStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

type ObjectMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace   string            `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name        string            `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Annotations map[string]string `protobuf:"bytes,3,rep,name=annotations,proto3" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Labels      map[string]string `protobuf:"bytes,4,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ObjectMeta) Reset() {
	*x = ObjectMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObjectMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectMeta) ProtoMessage() {}

func (x *ObjectMeta) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectMeta.ProtoReflect.Descriptor instead.
func (*ObjectMeta) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{24}
}

func (x *ObjectMeta) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ObjectMeta) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ObjectMeta) GetAnnotations() map[string]string {
	if x != nil {
		return x.Annotations
	}
	return nil
}

func (x *ObjectMeta) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

type DeploymentSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 指定所需 Pod 的可选字段
	Replicas int32 `protobuf:"varint,1,opt,name=replicas,proto3" json:"replicas,omitempty"`
	// 指定本 Deployment 的 Pod 标签选择算符的必需字段;
	// .spec.selector 必须匹配 .spec.template.metadata.labels，否则请求会被 API 拒绝。
	Selector *LabelSelector   `protobuf:"bytes,3,opt,name=selector,proto3" json:"selector,omitempty"`
	Template *PodTemplateSpec `protobuf:"bytes,2,opt,name=template,proto3" json:"template,omitempty"`
	// 指定用于用新 Pod 替换旧 Pod 的策略, “Recreate” 或 “RollingUpdate”。 默认值: RollingUpdate
	Strategy *DeploymentStrategy `protobuf:"bytes,4,opt,name=strategy,proto3" json:"strategy,omitempty"`
	// 用于指定新创建的 Pod 在没有任意容器崩溃情况下的最小就绪时间， 只有超出这个时间 Pod 才被视为可用。默认值为 0
	MinReadySeconds int32 `protobuf:"varint,5,opt,name=minReadySeconds,proto3" json:"minReadySeconds,omitempty"`
	// 用来设定出于回滚目的所要保留的旧 ReplicaSet 数量
	RevisionHistoryLimit int32 `protobuf:"varint,6,opt,name=revisionHistoryLimit,proto3" json:"revisionHistoryLimit,omitempty"`
	// 用于指定系统在报告 Deployment 进展失败 之前等待 Deployment 取得进展的秒数
	ProgressDeadlineSeconds int32 `protobuf:"varint,7,opt,name=progressDeadlineSeconds,proto3" json:"progressDeadlineSeconds,omitempty"`
}

func (x *DeploymentSpec) Reset() {
	*x = DeploymentSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeploymentSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeploymentSpec) ProtoMessage() {}

func (x *DeploymentSpec) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeploymentSpec.ProtoReflect.Descriptor instead.
func (*DeploymentSpec) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{25}
}

func (x *DeploymentSpec) GetReplicas() int32 {
	if x != nil {
		return x.Replicas
	}
	return 0
}

func (x *DeploymentSpec) GetSelector() *LabelSelector {
	if x != nil {
		return x.Selector
	}
	return nil
}

func (x *DeploymentSpec) GetTemplate() *PodTemplateSpec {
	if x != nil {
		return x.Template
	}
	return nil
}

func (x *DeploymentSpec) GetStrategy() *DeploymentStrategy {
	if x != nil {
		return x.Strategy
	}
	return nil
}

func (x *DeploymentSpec) GetMinReadySeconds() int32 {
	if x != nil {
		return x.MinReadySeconds
	}
	return 0
}

func (x *DeploymentSpec) GetRevisionHistoryLimit() int32 {
	if x != nil {
		return x.RevisionHistoryLimit
	}
	return 0
}

func (x *DeploymentSpec) GetProgressDeadlineSeconds() int32 {
	if x != nil {
		return x.ProgressDeadlineSeconds
	}
	return 0
}

type PodTemplateSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjectMeta *ObjectMeta `protobuf:"bytes,1,opt,name=objectMeta,proto3" json:"objectMeta,omitempty"`
	Spec       *PodSpec    `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
}

func (x *PodTemplateSpec) Reset() {
	*x = PodTemplateSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PodTemplateSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PodTemplateSpec) ProtoMessage() {}

func (x *PodTemplateSpec) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PodTemplateSpec.ProtoReflect.Descriptor instead.
func (*PodTemplateSpec) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{26}
}

func (x *PodTemplateSpec) GetObjectMeta() *ObjectMeta {
	if x != nil {
		return x.ObjectMeta
	}
	return nil
}

func (x *PodTemplateSpec) GetSpec() *PodSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

type LabelSelector struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MatchLabels map[string]string `protobuf:"bytes,1,rep,name=matchLabels,proto3" json:"matchLabels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *LabelSelector) Reset() {
	*x = LabelSelector{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LabelSelector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LabelSelector) ProtoMessage() {}

func (x *LabelSelector) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LabelSelector.ProtoReflect.Descriptor instead.
func (*LabelSelector) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{27}
}

func (x *LabelSelector) GetMatchLabels() map[string]string {
	if x != nil {
		return x.MatchLabels
	}
	return nil
}

// strategy
type DeploymentStrategy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *DeploymentStrategy) Reset() {
	*x = DeploymentStrategy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeploymentStrategy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeploymentStrategy) ProtoMessage() {}

func (x *DeploymentStrategy) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeploymentStrategy.ProtoReflect.Descriptor instead.
func (*DeploymentStrategy) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{28}
}

func (x *DeploymentStrategy) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

// Spec
type PodSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Volumes             []*Volume             `protobuf:"bytes,1,rep,name=volumes,proto3" json:"volumes,omitempty"`
	InitContainers      []*Container          `protobuf:"bytes,2,rep,name=initContainers,proto3" json:"initContainers,omitempty"`
	Containers          []*Container          `protobuf:"bytes,3,rep,name=containers,proto3" json:"containers,omitempty"`
	EphemeralContainers []*EphemeralContainer `protobuf:"bytes,4,rep,name=ephemeralContainers,proto3" json:"ephemeralContainers,omitempty"`
	// 容器重启策略, 取值包括 Always、OnFailure 和 Never。默认值是 Always。
	RestartPolicy                 string `protobuf:"bytes,11,opt,name=restartPolicy,proto3" json:"restartPolicy,omitempty"`
	TerminationGracePeriodSeconds int64  `protobuf:"varint,10,opt,name=terminationGracePeriodSeconds,proto3" json:"terminationGracePeriodSeconds,omitempty"`
	ActiveDeadlineSeconds         int64  `protobuf:"varint,9,opt,name=activeDeadlineSeconds,proto3" json:"activeDeadlineSeconds,omitempty"`
	// dnsPolicy 字段设置: Default, ClusterFirst, ClusterFirstWithHostNet, None; 如果未明确指定 dnsPolicy，则使用 "ClusterFirst"
	DnsPolicy                    string              `protobuf:"bytes,8,opt,name=dnsPolicy,proto3" json:"dnsPolicy,omitempty"`
	NodeSelector                 map[string]string   `protobuf:"bytes,7,rep,name=nodeSelector,proto3" json:"nodeSelector,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ServiceAccountName           string              `protobuf:"bytes,12,opt,name=serviceAccountName,proto3" json:"serviceAccountName,omitempty"`
	AutomountServiceAccountToken bool                `protobuf:"varint,13,opt,name=automountServiceAccountToken,proto3" json:"automountServiceAccountToken,omitempty"`
	SecurityContext              *PodSecurityContext `protobuf:"bytes,14,opt,name=securityContext,proto3" json:"securityContext,omitempty"`
	ImagePullSecrets             []*ImagePullSecret  `protobuf:"bytes,15,rep,name=imagePullSecrets,proto3" json:"imagePullSecrets,omitempty"`
	Tolerations                  []*Toleration       `protobuf:"bytes,16,rep,name=tolerations,proto3" json:"tolerations,omitempty"`
	HostAliases                  []*HostAlias        `protobuf:"bytes,17,rep,name=hostAliases,proto3" json:"hostAliases,omitempty"`
	DnsConfig                    *PodDNSConfig       `protobuf:"bytes,18,opt,name=dnsConfig,proto3" json:"dnsConfig,omitempty"`
}

func (x *PodSpec) Reset() {
	*x = PodSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PodSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PodSpec) ProtoMessage() {}

func (x *PodSpec) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PodSpec.ProtoReflect.Descriptor instead.
func (*PodSpec) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{29}
}

func (x *PodSpec) GetVolumes() []*Volume {
	if x != nil {
		return x.Volumes
	}
	return nil
}

func (x *PodSpec) GetInitContainers() []*Container {
	if x != nil {
		return x.InitContainers
	}
	return nil
}

func (x *PodSpec) GetContainers() []*Container {
	if x != nil {
		return x.Containers
	}
	return nil
}

func (x *PodSpec) GetEphemeralContainers() []*EphemeralContainer {
	if x != nil {
		return x.EphemeralContainers
	}
	return nil
}

func (x *PodSpec) GetRestartPolicy() string {
	if x != nil {
		return x.RestartPolicy
	}
	return ""
}

func (x *PodSpec) GetTerminationGracePeriodSeconds() int64 {
	if x != nil {
		return x.TerminationGracePeriodSeconds
	}
	return 0
}

func (x *PodSpec) GetActiveDeadlineSeconds() int64 {
	if x != nil {
		return x.ActiveDeadlineSeconds
	}
	return 0
}

func (x *PodSpec) GetDnsPolicy() string {
	if x != nil {
		return x.DnsPolicy
	}
	return ""
}

func (x *PodSpec) GetNodeSelector() map[string]string {
	if x != nil {
		return x.NodeSelector
	}
	return nil
}

func (x *PodSpec) GetServiceAccountName() string {
	if x != nil {
		return x.ServiceAccountName
	}
	return ""
}

func (x *PodSpec) GetAutomountServiceAccountToken() bool {
	if x != nil {
		return x.AutomountServiceAccountToken
	}
	return false
}

func (x *PodSpec) GetSecurityContext() *PodSecurityContext {
	if x != nil {
		return x.SecurityContext
	}
	return nil
}

func (x *PodSpec) GetImagePullSecrets() []*ImagePullSecret {
	if x != nil {
		return x.ImagePullSecrets
	}
	return nil
}

func (x *PodSpec) GetTolerations() []*Toleration {
	if x != nil {
		return x.Tolerations
	}
	return nil
}

func (x *PodSpec) GetHostAliases() []*HostAlias {
	if x != nil {
		return x.HostAliases
	}
	return nil
}

func (x *PodSpec) GetDnsConfig() *PodDNSConfig {
	if x != nil {
		return x.DnsConfig
	}
	return nil
}

// Volume
type Volume struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Volume) Reset() {
	*x = Volume{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Volume) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Volume) ProtoMessage() {}

func (x *Volume) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Volume.ProtoReflect.Descriptor instead.
func (*Volume) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{30}
}

// EphemeralContainer
type EphemeralContainer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EphemeralContainer) Reset() {
	*x = EphemeralContainer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EphemeralContainer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EphemeralContainer) ProtoMessage() {}

func (x *EphemeralContainer) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EphemeralContainer.ProtoReflect.Descriptor instead.
func (*EphemeralContainer) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{31}
}

// Selector
type Selector struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//MatchLabels matchLabels = 1;
	MatchLabels map[string]string `protobuf:"bytes,1,rep,name=matchLabels,proto3" json:"matchLabels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Selector) Reset() {
	*x = Selector{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Selector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Selector) ProtoMessage() {}

func (x *Selector) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Selector.ProtoReflect.Descriptor instead.
func (*Selector) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{32}
}

func (x *Selector) GetMatchLabels() map[string]string {
	if x != nil {
		return x.MatchLabels
	}
	return nil
}

// pod container
type Container struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string           `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Command  string           `protobuf:"bytes,6,opt,name=command,proto3" json:"command,omitempty"`
	Args     []string         `protobuf:"bytes,2,rep,name=args,proto3" json:"args,omitempty"`
	Envs     []*Env           `protobuf:"bytes,3,rep,name=envs,proto3" json:"envs,omitempty"`
	EnvFroms []*EnvFromSource `protobuf:"bytes,12,rep,name=EnvFroms,proto3" json:"EnvFroms,omitempty"`
	Image    string           `protobuf:"bytes,4,opt,name=image,proto3" json:"image,omitempty"`
	// Always , Never , IfNotPresent
	ImagePullPolicy string     `protobuf:"bytes,5,opt,name=imagePullPolicy,proto3" json:"imagePullPolicy,omitempty"`
	LivenessProbe   *Probe     `protobuf:"bytes,9,opt,name=livenessProbe,proto3" json:"livenessProbe,omitempty"`
	ReadinessProbe  *Probe     `protobuf:"bytes,7,opt,name=readinessProbe,proto3" json:"readinessProbe,omitempty"`
	StartupProbe    *Probe     `protobuf:"bytes,8,opt,name=startupProbe,proto3" json:"startupProbe,omitempty"`
	Lifecycle       *Lifecycle `protobuf:"bytes,10,opt,name=lifecycle,proto3" json:"lifecycle,omitempty"`
	Resource        *Resource  `protobuf:"bytes,11,opt,name=resource,proto3" json:"resource,omitempty"`
}

func (x *Container) Reset() {
	*x = Container{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Container) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Container) ProtoMessage() {}

func (x *Container) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Container.ProtoReflect.Descriptor instead.
func (*Container) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{33}
}

func (x *Container) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Container) GetCommand() string {
	if x != nil {
		return x.Command
	}
	return ""
}

func (x *Container) GetArgs() []string {
	if x != nil {
		return x.Args
	}
	return nil
}

func (x *Container) GetEnvs() []*Env {
	if x != nil {
		return x.Envs
	}
	return nil
}

func (x *Container) GetEnvFroms() []*EnvFromSource {
	if x != nil {
		return x.EnvFroms
	}
	return nil
}

func (x *Container) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *Container) GetImagePullPolicy() string {
	if x != nil {
		return x.ImagePullPolicy
	}
	return ""
}

func (x *Container) GetLivenessProbe() *Probe {
	if x != nil {
		return x.LivenessProbe
	}
	return nil
}

func (x *Container) GetReadinessProbe() *Probe {
	if x != nil {
		return x.ReadinessProbe
	}
	return nil
}

func (x *Container) GetStartupProbe() *Probe {
	if x != nil {
		return x.StartupProbe
	}
	return nil
}

func (x *Container) GetLifecycle() *Lifecycle {
	if x != nil {
		return x.Lifecycle
	}
	return nil
}

func (x *Container) GetResource() *Resource {
	if x != nil {
		return x.Resource
	}
	return nil
}

// container env
type Env struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Env) Reset() {
	*x = Env{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Env) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Env) ProtoMessage() {}

func (x *Env) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Env.ProtoReflect.Descriptor instead.
func (*Env) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{34}
}

func (x *Env) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Env) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// PodSecurityContext - pod 级别
type PodSecurityContext struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sysctls []*PodSecurityContextSysctl `protobuf:"bytes,1,rep,name=Sysctls,proto3" json:"Sysctls,omitempty"`
}

func (x *PodSecurityContext) Reset() {
	*x = PodSecurityContext{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PodSecurityContext) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PodSecurityContext) ProtoMessage() {}

func (x *PodSecurityContext) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PodSecurityContext.ProtoReflect.Descriptor instead.
func (*PodSecurityContext) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{35}
}

func (x *PodSecurityContext) GetSysctls() []*PodSecurityContextSysctl {
	if x != nil {
		return x.Sysctls
	}
	return nil
}

type PodSecurityContextSysctl struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *PodSecurityContextSysctl) Reset() {
	*x = PodSecurityContextSysctl{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PodSecurityContextSysctl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PodSecurityContextSysctl) ProtoMessage() {}

func (x *PodSecurityContextSysctl) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PodSecurityContextSysctl.ProtoReflect.Descriptor instead.
func (*PodSecurityContextSysctl) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{36}
}

func (x *PodSecurityContextSysctl) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PodSecurityContextSysctl) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// ImagePullSecrets - pod 级别
type ImagePullSecret struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *ImagePullSecret) Reset() {
	*x = ImagePullSecret{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImagePullSecret) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImagePullSecret) ProtoMessage() {}

func (x *ImagePullSecret) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImagePullSecret.ProtoReflect.Descriptor instead.
func (*ImagePullSecret) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{37}
}

func (x *ImagePullSecret) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// Toleration - pod 级别
type Toleration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key      string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Operator string `protobuf:"bytes,2,opt,name=operator,proto3" json:"operator,omitempty"`
	Effect   string `protobuf:"bytes,3,opt,name=effect,proto3" json:"effect,omitempty"`
	Value    string `protobuf:"bytes,4,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Toleration) Reset() {
	*x = Toleration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Toleration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Toleration) ProtoMessage() {}

func (x *Toleration) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Toleration.ProtoReflect.Descriptor instead.
func (*Toleration) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{38}
}

func (x *Toleration) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Toleration) GetOperator() string {
	if x != nil {
		return x.Operator
	}
	return ""
}

func (x *Toleration) GetEffect() string {
	if x != nil {
		return x.Effect
	}
	return ""
}

func (x *Toleration) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// PodDNSConfig - pod 级别
type PodDNSConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nameservers []string `protobuf:"bytes,1,rep,name=nameservers,proto3" json:"nameservers,omitempty"`
	Searches    []string `protobuf:"bytes,2,rep,name=searches,proto3" json:"searches,omitempty"`
}

func (x *PodDNSConfig) Reset() {
	*x = PodDNSConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PodDNSConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PodDNSConfig) ProtoMessage() {}

func (x *PodDNSConfig) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PodDNSConfig.ProtoReflect.Descriptor instead.
func (*PodDNSConfig) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{39}
}

func (x *PodDNSConfig) GetNameservers() []string {
	if x != nil {
		return x.Nameservers
	}
	return nil
}

func (x *PodDNSConfig) GetSearches() []string {
	if x != nil {
		return x.Searches
	}
	return nil
}

// HostAlias - pod 级别
type HostAlias struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ip        string   `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	Hostnames []string `protobuf:"bytes,2,rep,name=hostnames,proto3" json:"hostnames,omitempty"`
}

func (x *HostAlias) Reset() {
	*x = HostAlias{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostAlias) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostAlias) ProtoMessage() {}

func (x *HostAlias) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostAlias.ProtoReflect.Descriptor instead.
func (*HostAlias) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{40}
}

func (x *HostAlias) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *HostAlias) GetHostnames() []string {
	if x != nil {
		return x.Hostnames
	}
	return nil
}

// Probe
type Probe struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProbeHandler *ProbeHandler `protobuf:"bytes,1,opt,name=probeHandler,proto3" json:"probeHandler,omitempty"`
	// 容器启动后要等待多少秒后才启动 启动、存活和就绪探针， 默认是 0 秒，最小值是 0。
	InitialDelaySeconds int32 `protobuf:"varint,2,opt,name=initialDelaySeconds,proto3" json:"initialDelaySeconds,omitempty"`
	// 探测的超时后等待多少秒。默认值是 1 秒。最小值是 1。
	TimeoutSeconds int32 `protobuf:"varint,3,opt,name=timeoutSeconds,proto3" json:"timeoutSeconds,omitempty"`
	// 执行探测的时间间隔（单位是秒）。默认是 10 秒。最小值是 1。
	PeriodSeconds int32 `protobuf:"varint,4,opt,name=periodSeconds,proto3" json:"periodSeconds,omitempty"`
	// 探针在失败后，被视为成功的最小连续成功数。默认值是 1。 存活和启动探测的这个值必须是 1。最小值是 1。
	SuccessThreshold int32 `protobuf:"varint,5,opt,name=successThreshold,proto3" json:"successThreshold,omitempty"`
	// 当探测失败时，Kubernetes 的重试次数。 对存活探测而言，放弃就意味着重新启动容器。
	// 对就绪探测而言，放弃意味着 Pod 会被打上未就绪的标签。默认值是 3。最小值是 1。
	FailureThreshold int32 `protobuf:"varint,6,opt,name=failureThreshold,proto3" json:"failureThreshold,omitempty"`
}

func (x *Probe) Reset() {
	*x = Probe{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Probe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Probe) ProtoMessage() {}

func (x *Probe) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Probe.ProtoReflect.Descriptor instead.
func (*Probe) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{41}
}

func (x *Probe) GetProbeHandler() *ProbeHandler {
	if x != nil {
		return x.ProbeHandler
	}
	return nil
}

func (x *Probe) GetInitialDelaySeconds() int32 {
	if x != nil {
		return x.InitialDelaySeconds
	}
	return 0
}

func (x *Probe) GetTimeoutSeconds() int32 {
	if x != nil {
		return x.TimeoutSeconds
	}
	return 0
}

func (x *Probe) GetPeriodSeconds() int32 {
	if x != nil {
		return x.PeriodSeconds
	}
	return 0
}

func (x *Probe) GetSuccessThreshold() int32 {
	if x != nil {
		return x.SuccessThreshold
	}
	return 0
}

func (x *Probe) GetFailureThreshold() int32 {
	if x != nil {
		return x.FailureThreshold
	}
	return 0
}

type ProbeHandler struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exec      *ExecAction      `protobuf:"bytes,1,opt,name=exec,proto3" json:"exec,omitempty"`
	HttpGet   *HTTPGetAction   `protobuf:"bytes,2,opt,name=httpGet,proto3" json:"httpGet,omitempty"`
	TcpSocket *TCPSocketAction `protobuf:"bytes,3,opt,name=tcpSocket,proto3" json:"tcpSocket,omitempty"`
	Grpc      *GRPCAction      `protobuf:"bytes,4,opt,name=grpc,proto3" json:"grpc,omitempty"`
}

func (x *ProbeHandler) Reset() {
	*x = ProbeHandler{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProbeHandler) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProbeHandler) ProtoMessage() {}

func (x *ProbeHandler) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProbeHandler.ProtoReflect.Descriptor instead.
func (*ProbeHandler) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{42}
}

func (x *ProbeHandler) GetExec() *ExecAction {
	if x != nil {
		return x.Exec
	}
	return nil
}

func (x *ProbeHandler) GetHttpGet() *HTTPGetAction {
	if x != nil {
		return x.HttpGet
	}
	return nil
}

func (x *ProbeHandler) GetTcpSocket() *TCPSocketAction {
	if x != nil {
		return x.TcpSocket
	}
	return nil
}

func (x *ProbeHandler) GetGrpc() *GRPCAction {
	if x != nil {
		return x.Grpc
	}
	return nil
}

type ExecAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Command []string `protobuf:"bytes,1,rep,name=command,proto3" json:"command,omitempty"`
}

func (x *ExecAction) Reset() {
	*x = ExecAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecAction) ProtoMessage() {}

func (x *ExecAction) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecAction.ProtoReflect.Descriptor instead.
func (*ExecAction) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{43}
}

func (x *ExecAction) GetCommand() []string {
	if x != nil {
		return x.Command
	}
	return nil
}

type HTTPGetAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host    string            `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Port    int32             `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	Path    string            `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`
	Headers map[string]string `protobuf:"bytes,4,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *HTTPGetAction) Reset() {
	*x = HTTPGetAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HTTPGetAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HTTPGetAction) ProtoMessage() {}

func (x *HTTPGetAction) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HTTPGetAction.ProtoReflect.Descriptor instead.
func (*HTTPGetAction) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{44}
}

func (x *HTTPGetAction) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *HTTPGetAction) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *HTTPGetAction) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *HTTPGetAction) GetHeaders() map[string]string {
	if x != nil {
		return x.Headers
	}
	return nil
}

type TCPSocketAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host string `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Port int32  `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
}

func (x *TCPSocketAction) Reset() {
	*x = TCPSocketAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TCPSocketAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TCPSocketAction) ProtoMessage() {}

func (x *TCPSocketAction) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TCPSocketAction.ProtoReflect.Descriptor instead.
func (*TCPSocketAction) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{45}
}

func (x *TCPSocketAction) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *TCPSocketAction) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

type GRPCAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Port    int32  `protobuf:"varint,1,opt,name=port,proto3" json:"port,omitempty"`
	Service string `protobuf:"bytes,2,opt,name=service,proto3" json:"service,omitempty"`
}

func (x *GRPCAction) Reset() {
	*x = GRPCAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GRPCAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GRPCAction) ProtoMessage() {}

func (x *GRPCAction) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GRPCAction.ProtoReflect.Descriptor instead.
func (*GRPCAction) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{46}
}

func (x *GRPCAction) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *GRPCAction) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

//
type Lifecycle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PostStart *LifecycleHandler `protobuf:"bytes,1,opt,name=postStart,proto3" json:"postStart,omitempty"`
	PreStop   *LifecycleHandler `protobuf:"bytes,2,opt,name=preStop,proto3" json:"preStop,omitempty"`
}

func (x *Lifecycle) Reset() {
	*x = Lifecycle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Lifecycle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Lifecycle) ProtoMessage() {}

func (x *Lifecycle) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Lifecycle.ProtoReflect.Descriptor instead.
func (*Lifecycle) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{47}
}

func (x *Lifecycle) GetPostStart() *LifecycleHandler {
	if x != nil {
		return x.PostStart
	}
	return nil
}

func (x *Lifecycle) GetPreStop() *LifecycleHandler {
	if x != nil {
		return x.PreStop
	}
	return nil
}

type LifecycleHandler struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exec      *ExecAction      `protobuf:"bytes,1,opt,name=exec,proto3" json:"exec,omitempty"`
	HttpGet   *HTTPGetAction   `protobuf:"bytes,2,opt,name=httpGet,proto3" json:"httpGet,omitempty"`
	TcpSocket *TCPSocketAction `protobuf:"bytes,3,opt,name=tcpSocket,proto3" json:"tcpSocket,omitempty"`
}

func (x *LifecycleHandler) Reset() {
	*x = LifecycleHandler{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LifecycleHandler) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LifecycleHandler) ProtoMessage() {}

func (x *LifecycleHandler) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LifecycleHandler.ProtoReflect.Descriptor instead.
func (*LifecycleHandler) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{48}
}

func (x *LifecycleHandler) GetExec() *ExecAction {
	if x != nil {
		return x.Exec
	}
	return nil
}

func (x *LifecycleHandler) GetHttpGet() *HTTPGetAction {
	if x != nil {
		return x.HttpGet
	}
	return nil
}

func (x *LifecycleHandler) GetTcpSocket() *TCPSocketAction {
	if x != nil {
		return x.TcpSocket
	}
	return nil
}

// EnvFromSource
type EnvFromSource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConfigMapRef string `protobuf:"bytes,1,opt,name=configMapRef,proto3" json:"configMapRef,omitempty"`
	SecretRef    string `protobuf:"bytes,2,opt,name=secretRef,proto3" json:"secretRef,omitempty"`
}

func (x *EnvFromSource) Reset() {
	*x = EnvFromSource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnvFromSource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnvFromSource) ProtoMessage() {}

func (x *EnvFromSource) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnvFromSource.ProtoReflect.Descriptor instead.
func (*EnvFromSource) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{49}
}

func (x *EnvFromSource) GetConfigMapRef() string {
	if x != nil {
		return x.ConfigMapRef
	}
	return ""
}

func (x *EnvFromSource) GetSecretRef() string {
	if x != nil {
		return x.SecretRef
	}
	return ""
}

// Resource
type Resource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit   *ResourceLimit    `protobuf:"bytes,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Request *ResourceRequests `protobuf:"bytes,2,opt,name=request,proto3" json:"request,omitempty"`
}

func (x *Resource) Reset() {
	*x = Resource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Resource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resource) ProtoMessage() {}

func (x *Resource) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Resource.ProtoReflect.Descriptor instead.
func (*Resource) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{50}
}

func (x *Resource) GetLimit() *ResourceLimit {
	if x != nil {
		return x.Limit
	}
	return nil
}

func (x *Resource) GetRequest() *ResourceRequests {
	if x != nil {
		return x.Request
	}
	return nil
}

type ResourceLimit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cpu              int64 `protobuf:"varint,1,opt,name=cpu,proto3" json:"cpu,omitempty"`
	Memory           int64 `protobuf:"varint,2,opt,name=memory,proto3" json:"memory,omitempty"`
	Storage          int64 `protobuf:"varint,3,opt,name=storage,proto3" json:"storage,omitempty"`
	StorageEphemeral int64 `protobuf:"varint,4,opt,name=storageEphemeral,proto3" json:"storageEphemeral,omitempty"`
}

func (x *ResourceLimit) Reset() {
	*x = ResourceLimit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceLimit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceLimit) ProtoMessage() {}

func (x *ResourceLimit) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceLimit.ProtoReflect.Descriptor instead.
func (*ResourceLimit) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{51}
}

func (x *ResourceLimit) GetCpu() int64 {
	if x != nil {
		return x.Cpu
	}
	return 0
}

func (x *ResourceLimit) GetMemory() int64 {
	if x != nil {
		return x.Memory
	}
	return 0
}

func (x *ResourceLimit) GetStorage() int64 {
	if x != nil {
		return x.Storage
	}
	return 0
}

func (x *ResourceLimit) GetStorageEphemeral() int64 {
	if x != nil {
		return x.StorageEphemeral
	}
	return 0
}

type ResourceRequests struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cpu              int64 `protobuf:"varint,1,opt,name=cpu,proto3" json:"cpu,omitempty"`
	Memory           int64 `protobuf:"varint,2,opt,name=memory,proto3" json:"memory,omitempty"`
	Storage          int64 `protobuf:"varint,3,opt,name=storage,proto3" json:"storage,omitempty"`
	StorageEphemeral int64 `protobuf:"varint,4,opt,name=storageEphemeral,proto3" json:"storageEphemeral,omitempty"`
}

func (x *ResourceRequests) Reset() {
	*x = ResourceRequests{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceRequests) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceRequests) ProtoMessage() {}

func (x *ResourceRequests) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceRequests.ProtoReflect.Descriptor instead.
func (*ResourceRequests) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{52}
}

func (x *ResourceRequests) GetCpu() int64 {
	if x != nil {
		return x.Cpu
	}
	return 0
}

func (x *ResourceRequests) GetMemory() int64 {
	if x != nil {
		return x.Memory
	}
	return 0
}

func (x *ResourceRequests) GetStorage() int64 {
	if x != nil {
		return x.Storage
	}
	return 0
}

func (x *ResourceRequests) GetStorageEphemeral() int64 {
	if x != nil {
		return x.StorageEphemeral
	}
	return 0
}

//
type DeploymentStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Replicas            int32 `protobuf:"varint,1,opt,name=replicas,proto3" json:"replicas,omitempty"`
	UpdatedReplicas     int32 `protobuf:"varint,2,opt,name=updatedReplicas,proto3" json:"updatedReplicas,omitempty"`
	ReadyReplicas       int32 `protobuf:"varint,3,opt,name=readyReplicas,proto3" json:"readyReplicas,omitempty"`
	AvailableReplicas   int32 `protobuf:"varint,4,opt,name=availableReplicas,proto3" json:"availableReplicas,omitempty"`
	UnavailableReplicas int32 `protobuf:"varint,5,opt,name=unavailableReplicas,proto3" json:"unavailableReplicas,omitempty"`
}

func (x *DeploymentStatus) Reset() {
	*x = DeploymentStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeploymentStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeploymentStatus) ProtoMessage() {}

func (x *DeploymentStatus) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeploymentStatus.ProtoReflect.Descriptor instead.
func (*DeploymentStatus) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{53}
}

func (x *DeploymentStatus) GetReplicas() int32 {
	if x != nil {
		return x.Replicas
	}
	return 0
}

func (x *DeploymentStatus) GetUpdatedReplicas() int32 {
	if x != nil {
		return x.UpdatedReplicas
	}
	return 0
}

func (x *DeploymentStatus) GetReadyReplicas() int32 {
	if x != nil {
		return x.ReadyReplicas
	}
	return 0
}

func (x *DeploymentStatus) GetAvailableReplicas() int32 {
	if x != nil {
		return x.AvailableReplicas
	}
	return 0
}

func (x *DeploymentStatus) GetUnavailableReplicas() int32 {
	if x != nil {
		return x.UnavailableReplicas
	}
	return 0
}

//
type CreateDeploymentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Deployment *Deployment `protobuf:"bytes,1,opt,name=deployment,proto3" json:"deployment,omitempty"`
}

func (x *CreateDeploymentReq) Reset() {
	*x = CreateDeploymentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDeploymentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDeploymentReq) ProtoMessage() {}

func (x *CreateDeploymentReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDeploymentReq.ProtoReflect.Descriptor instead.
func (*CreateDeploymentReq) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{54}
}

func (x *CreateDeploymentReq) GetDeployment() *Deployment {
	if x != nil {
		return x.Deployment
	}
	return nil
}

type CreateDeploymentReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *CreateDeploymentReply) Reset() {
	*x = CreateDeploymentReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDeploymentReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDeploymentReply) ProtoMessage() {}

func (x *CreateDeploymentReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDeploymentReply.ProtoReflect.Descriptor instead.
func (*CreateDeploymentReply) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{55}
}

func (x *CreateDeploymentReply) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

type ListDeploymentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace     string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Limit         int64  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Continue      string `protobuf:"bytes,3,opt,name=continue,proto3" json:"continue,omitempty"`
	LabelSelector string `protobuf:"bytes,4,opt,name=labelSelector,proto3" json:"labelSelector,omitempty"`
}

func (x *ListDeploymentReq) Reset() {
	*x = ListDeploymentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDeploymentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDeploymentReq) ProtoMessage() {}

func (x *ListDeploymentReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDeploymentReq.ProtoReflect.Descriptor instead.
func (*ListDeploymentReq) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{56}
}

func (x *ListDeploymentReq) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ListDeploymentReq) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListDeploymentReq) GetContinue() string {
	if x != nil {
		return x.Continue
	}
	return ""
}

func (x *ListDeploymentReq) GetLabelSelector() string {
	if x != nil {
		return x.LabelSelector
	}
	return ""
}

type ListDeploymentReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Deployments []*Deployment `protobuf:"bytes,1,rep,name=deployments,proto3" json:"deployments,omitempty"`
	Continue    string        `protobuf:"bytes,2,opt,name=continue,proto3" json:"continue,omitempty"`
}

func (x *ListDeploymentReply) Reset() {
	*x = ListDeploymentReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDeploymentReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDeploymentReply) ProtoMessage() {}

func (x *ListDeploymentReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDeploymentReply.ProtoReflect.Descriptor instead.
func (*ListDeploymentReply) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{57}
}

func (x *ListDeploymentReply) GetDeployments() []*Deployment {
	if x != nil {
		return x.Deployments
	}
	return nil
}

func (x *ListDeploymentReply) GetContinue() string {
	if x != nil {
		return x.Continue
	}
	return ""
}

type ListDeploymentStatusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace     string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Limit         int64  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Continue      string `protobuf:"bytes,3,opt,name=continue,proto3" json:"continue,omitempty"`
	LabelSelector string `protobuf:"bytes,4,opt,name=labelSelector,proto3" json:"labelSelector,omitempty"`
}

func (x *ListDeploymentStatusReq) Reset() {
	*x = ListDeploymentStatusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDeploymentStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDeploymentStatusReq) ProtoMessage() {}

func (x *ListDeploymentStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDeploymentStatusReq.ProtoReflect.Descriptor instead.
func (*ListDeploymentStatusReq) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{58}
}

func (x *ListDeploymentStatusReq) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ListDeploymentStatusReq) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListDeploymentStatusReq) GetContinue() string {
	if x != nil {
		return x.Continue
	}
	return ""
}

func (x *ListDeploymentStatusReq) GetLabelSelector() string {
	if x != nil {
		return x.LabelSelector
	}
	return ""
}

type ListDeploymentStatusReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Deployments []*Deployment `protobuf:"bytes,1,rep,name=deployments,proto3" json:"deployments,omitempty"`
	Continue    string        `protobuf:"bytes,2,opt,name=continue,proto3" json:"continue,omitempty"`
}

func (x *ListDeploymentStatusReply) Reset() {
	*x = ListDeploymentStatusReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDeploymentStatusReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDeploymentStatusReply) ProtoMessage() {}

func (x *ListDeploymentStatusReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDeploymentStatusReply.ProtoReflect.Descriptor instead.
func (*ListDeploymentStatusReply) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{59}
}

func (x *ListDeploymentStatusReply) GetDeployments() []*Deployment {
	if x != nil {
		return x.Deployments
	}
	return nil
}

func (x *ListDeploymentStatusReply) GetContinue() string {
	if x != nil {
		return x.Continue
	}
	return ""
}

type GetDeploymentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetDeploymentReq) Reset() {
	*x = GetDeploymentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDeploymentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeploymentReq) ProtoMessage() {}

func (x *GetDeploymentReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeploymentReq.ProtoReflect.Descriptor instead.
func (*GetDeploymentReq) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{60}
}

func (x *GetDeploymentReq) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *GetDeploymentReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetDeploymentReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Deployment *Deployment `protobuf:"bytes,1,opt,name=deployment,proto3" json:"deployment,omitempty"`
}

func (x *GetDeploymentReply) Reset() {
	*x = GetDeploymentReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDeploymentReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeploymentReply) ProtoMessage() {}

func (x *GetDeploymentReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeploymentReply.ProtoReflect.Descriptor instead.
func (*GetDeploymentReply) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{61}
}

func (x *GetDeploymentReply) GetDeployment() *Deployment {
	if x != nil {
		return x.Deployment
	}
	return nil
}

type DelDeploymentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *DelDeploymentReq) Reset() {
	*x = DelDeploymentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelDeploymentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelDeploymentReq) ProtoMessage() {}

func (x *DelDeploymentReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelDeploymentReq.ProtoReflect.Descriptor instead.
func (*DelDeploymentReq) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{62}
}

func (x *DelDeploymentReq) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *DelDeploymentReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type DelDeploymentReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *DelDeploymentReply) Reset() {
	*x = DelDeploymentReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelDeploymentReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelDeploymentReply) ProtoMessage() {}

func (x *DelDeploymentReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelDeploymentReply.ProtoReflect.Descriptor instead.
func (*DelDeploymentReply) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{63}
}

func (x *DelDeploymentReply) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

type UpdateDeploymentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Deployment *Deployment `protobuf:"bytes,1,opt,name=deployment,proto3" json:"deployment,omitempty"`
}

func (x *UpdateDeploymentReq) Reset() {
	*x = UpdateDeploymentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDeploymentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDeploymentReq) ProtoMessage() {}

func (x *UpdateDeploymentReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDeploymentReq.ProtoReflect.Descriptor instead.
func (*UpdateDeploymentReq) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{64}
}

func (x *UpdateDeploymentReq) GetDeployment() *Deployment {
	if x != nil {
		return x.Deployment
	}
	return nil
}

type UpdateDeploymentReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *UpdateDeploymentReply) Reset() {
	*x = UpdateDeploymentReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDeploymentReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDeploymentReply) ProtoMessage() {}

func (x *UpdateDeploymentReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDeploymentReply.ProtoReflect.Descriptor instead.
func (*UpdateDeploymentReply) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{65}
}

func (x *UpdateDeploymentReply) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

type ListRolloutHisReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListRolloutHisReq) Reset() {
	*x = ListRolloutHisReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRolloutHisReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRolloutHisReq) ProtoMessage() {}

func (x *ListRolloutHisReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRolloutHisReq.ProtoReflect.Descriptor instead.
func (*ListRolloutHisReq) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{66}
}

type ListRolloutHisReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListRolloutHisReply) Reset() {
	*x = ListRolloutHisReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRolloutHisReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRolloutHisReply) ProtoMessage() {}

func (x *ListRolloutHisReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRolloutHisReply.ProtoReflect.Descriptor instead.
func (*ListRolloutHisReply) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{67}
}

type UpdateDeploymentReplaceSetReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Replicas  int32  `protobuf:"varint,3,opt,name=replicas,proto3" json:"replicas,omitempty"`
}

func (x *UpdateDeploymentReplaceSetReq) Reset() {
	*x = UpdateDeploymentReplaceSetReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDeploymentReplaceSetReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDeploymentReplaceSetReq) ProtoMessage() {}

func (x *UpdateDeploymentReplaceSetReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDeploymentReplaceSetReq.ProtoReflect.Descriptor instead.
func (*UpdateDeploymentReplaceSetReq) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{68}
}

func (x *UpdateDeploymentReplaceSetReq) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *UpdateDeploymentReplaceSetReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateDeploymentReplaceSetReq) GetReplicas() int32 {
	if x != nil {
		return x.Replicas
	}
	return 0
}

type UpdateDeploymentReplaceSetReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *UpdateDeploymentReplaceSetReply) Reset() {
	*x = UpdateDeploymentReplaceSetReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDeploymentReplaceSetReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDeploymentReplaceSetReply) ProtoMessage() {}

func (x *UpdateDeploymentReplaceSetReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDeploymentReplaceSetReply.ProtoReflect.Descriptor instead.
func (*UpdateDeploymentReplaceSetReply) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{69}
}

func (x *UpdateDeploymentReplaceSetReply) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

type FilterDeploymentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MinCpu              int32             `protobuf:"varint,1,opt,name=minCpu,proto3" json:"minCpu,omitempty"`
	MaxCpu              int32             `protobuf:"varint,2,opt,name=maxCpu,proto3" json:"maxCpu,omitempty"`
	MinMemory           int32             `protobuf:"varint,3,opt,name=minMemory,proto3" json:"minMemory,omitempty"`
	MaxMemory           int32             `protobuf:"varint,4,opt,name=maxMemory,proto3" json:"maxMemory,omitempty"`
	MinReplicas         int32             `protobuf:"varint,5,opt,name=minReplicas,proto3" json:"minReplicas,omitempty"`                                                                               // 最少 replicas
	UnAvailableReplicas int32             `protobuf:"varint,6,opt,name=unAvailableReplicas,proto3" json:"unAvailableReplicas,omitempty"`                                                               // 无效的 Replicas 个数
	ImageKeyword        string            `protobuf:"bytes,7,opt,name=imageKeyword,proto3" json:"imageKeyword,omitempty"`                                                                              // 镜像关键字
	NameKeyword         string            `protobuf:"bytes,8,opt,name=nameKeyword,proto3" json:"nameKeyword,omitempty"`                                                                                // 名字关键字
	Envs                map[string]string `protobuf:"bytes,9,rep,name=envs,proto3" json:"envs,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`      // 命中环境变量
	Labels              map[string]string `protobuf:"bytes,10,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // labels命中
	Namespace           string            `protobuf:"bytes,11,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (x *FilterDeploymentReq) Reset() {
	*x = FilterDeploymentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilterDeploymentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterDeploymentReq) ProtoMessage() {}

func (x *FilterDeploymentReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterDeploymentReq.ProtoReflect.Descriptor instead.
func (*FilterDeploymentReq) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{70}
}

func (x *FilterDeploymentReq) GetMinCpu() int32 {
	if x != nil {
		return x.MinCpu
	}
	return 0
}

func (x *FilterDeploymentReq) GetMaxCpu() int32 {
	if x != nil {
		return x.MaxCpu
	}
	return 0
}

func (x *FilterDeploymentReq) GetMinMemory() int32 {
	if x != nil {
		return x.MinMemory
	}
	return 0
}

func (x *FilterDeploymentReq) GetMaxMemory() int32 {
	if x != nil {
		return x.MaxMemory
	}
	return 0
}

func (x *FilterDeploymentReq) GetMinReplicas() int32 {
	if x != nil {
		return x.MinReplicas
	}
	return 0
}

func (x *FilterDeploymentReq) GetUnAvailableReplicas() int32 {
	if x != nil {
		return x.UnAvailableReplicas
	}
	return 0
}

func (x *FilterDeploymentReq) GetImageKeyword() string {
	if x != nil {
		return x.ImageKeyword
	}
	return ""
}

func (x *FilterDeploymentReq) GetNameKeyword() string {
	if x != nil {
		return x.NameKeyword
	}
	return ""
}

func (x *FilterDeploymentReq) GetEnvs() map[string]string {
	if x != nil {
		return x.Envs
	}
	return nil
}

func (x *FilterDeploymentReq) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *FilterDeploymentReq) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

type FilterDeploymentReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Deployments []*FilterDeploymentReplyDeployment `protobuf:"bytes,1,rep,name=deployments,proto3" json:"deployments,omitempty"`
}

func (x *FilterDeploymentReply) Reset() {
	*x = FilterDeploymentReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilterDeploymentReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterDeploymentReply) ProtoMessage() {}

func (x *FilterDeploymentReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterDeploymentReply.ProtoReflect.Descriptor instead.
func (*FilterDeploymentReply) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{71}
}

func (x *FilterDeploymentReply) GetDeployments() []*FilterDeploymentReplyDeployment {
	if x != nil {
		return x.Deployments
	}
	return nil
}

// Secret
type ListSecretReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (x *ListSecretReq) Reset() {
	*x = ListSecretReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSecretReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSecretReq) ProtoMessage() {}

func (x *ListSecretReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSecretReq.ProtoReflect.Descriptor instead.
func (*ListSecretReq) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{72}
}

func (x *ListSecretReq) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

type ListSecretReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Secrets []*ListSecretReply_Secret `protobuf:"bytes,1,rep,name=secrets,proto3" json:"secrets,omitempty"`
}

func (x *ListSecretReply) Reset() {
	*x = ListSecretReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSecretReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSecretReply) ProtoMessage() {}

func (x *ListSecretReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSecretReply.ProtoReflect.Descriptor instead.
func (*ListSecretReply) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{73}
}

func (x *ListSecretReply) GetSecrets() []*ListSecretReply_Secret {
	if x != nil {
		return x.Secrets
	}
	return nil
}

type GetSecretReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetSecretReq) Reset() {
	*x = GetSecretReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSecretReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSecretReq) ProtoMessage() {}

func (x *GetSecretReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSecretReq.ProtoReflect.Descriptor instead.
func (*GetSecretReq) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{74}
}

func (x *GetSecretReq) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *GetSecretReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetSecretReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace         string            `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name              string            `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Annotations       map[string]string `protobuf:"bytes,3,rep,name=annotations,proto3" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Labels            map[string]string `protobuf:"bytes,4,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Immutable         bool              `protobuf:"varint,5,opt,name=immutable,proto3" json:"immutable,omitempty"`
	Type              string            `protobuf:"bytes,6,opt,name=type,proto3" json:"type,omitempty"`
	CreationTimestamp int64             `protobuf:"varint,7,opt,name=creationTimestamp,proto3" json:"creationTimestamp,omitempty"`
	StringData        map[string]string `protobuf:"bytes,8,rep,name=stringData,proto3" json:"stringData,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Data              map[string][]byte `protobuf:"bytes,9,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GetSecretReply) Reset() {
	*x = GetSecretReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSecretReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSecretReply) ProtoMessage() {}

func (x *GetSecretReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSecretReply.ProtoReflect.Descriptor instead.
func (*GetSecretReply) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{75}
}

func (x *GetSecretReply) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *GetSecretReply) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetSecretReply) GetAnnotations() map[string]string {
	if x != nil {
		return x.Annotations
	}
	return nil
}

func (x *GetSecretReply) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *GetSecretReply) GetImmutable() bool {
	if x != nil {
		return x.Immutable
	}
	return false
}

func (x *GetSecretReply) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *GetSecretReply) GetCreationTimestamp() int64 {
	if x != nil {
		return x.CreationTimestamp
	}
	return 0
}

func (x *GetSecretReply) GetStringData() map[string]string {
	if x != nil {
		return x.StringData
	}
	return nil
}

func (x *GetSecretReply) GetData() map[string][]byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type DelSecretReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *DelSecretReq) Reset() {
	*x = DelSecretReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelSecretReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelSecretReq) ProtoMessage() {}

func (x *DelSecretReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelSecretReq.ProtoReflect.Descriptor instead.
func (*DelSecretReq) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{76}
}

func (x *DelSecretReq) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *DelSecretReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type DelSecretReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *DelSecretReply) Reset() {
	*x = DelSecretReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelSecretReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelSecretReply) ProtoMessage() {}

func (x *DelSecretReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelSecretReply.ProtoReflect.Descriptor instead.
func (*DelSecretReply) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{77}
}

func (x *DelSecretReply) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

type CreateTlsSecretReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace   string            `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name        string            `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Annotations map[string]string `protobuf:"bytes,3,rep,name=annotations,proto3" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Labels      map[string]string `protobuf:"bytes,4,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	TlsCrt      string            `protobuf:"bytes,5,opt,name=tlsCrt,proto3" json:"tlsCrt,omitempty"`
	TlsKey      string            `protobuf:"bytes,6,opt,name=tlsKey,proto3" json:"tlsKey,omitempty"`
}

func (x *CreateTlsSecretReq) Reset() {
	*x = CreateTlsSecretReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTlsSecretReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTlsSecretReq) ProtoMessage() {}

func (x *CreateTlsSecretReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTlsSecretReq.ProtoReflect.Descriptor instead.
func (*CreateTlsSecretReq) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{78}
}

func (x *CreateTlsSecretReq) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *CreateTlsSecretReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateTlsSecretReq) GetAnnotations() map[string]string {
	if x != nil {
		return x.Annotations
	}
	return nil
}

func (x *CreateTlsSecretReq) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *CreateTlsSecretReq) GetTlsCrt() string {
	if x != nil {
		return x.TlsCrt
	}
	return ""
}

func (x *CreateTlsSecretReq) GetTlsKey() string {
	if x != nil {
		return x.TlsKey
	}
	return ""
}

type CreateTlsSecretReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *CreateTlsSecretReply) Reset() {
	*x = CreateTlsSecretReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTlsSecretReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTlsSecretReply) ProtoMessage() {}

func (x *CreateTlsSecretReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTlsSecretReply.ProtoReflect.Descriptor instead.
func (*CreateTlsSecretReply) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{79}
}

func (x *CreateTlsSecretReply) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

type UpdateTlsSecretReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace   string            `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name        string            `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Annotations map[string]string `protobuf:"bytes,3,rep,name=annotations,proto3" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Labels      map[string]string `protobuf:"bytes,4,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	TlsCrt      string            `protobuf:"bytes,5,opt,name=tlsCrt,proto3" json:"tlsCrt,omitempty"`
	TlsKey      string            `protobuf:"bytes,6,opt,name=tlsKey,proto3" json:"tlsKey,omitempty"`
}

func (x *UpdateTlsSecretReq) Reset() {
	*x = UpdateTlsSecretReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTlsSecretReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTlsSecretReq) ProtoMessage() {}

func (x *UpdateTlsSecretReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTlsSecretReq.ProtoReflect.Descriptor instead.
func (*UpdateTlsSecretReq) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{80}
}

func (x *UpdateTlsSecretReq) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *UpdateTlsSecretReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateTlsSecretReq) GetAnnotations() map[string]string {
	if x != nil {
		return x.Annotations
	}
	return nil
}

func (x *UpdateTlsSecretReq) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *UpdateTlsSecretReq) GetTlsCrt() string {
	if x != nil {
		return x.TlsCrt
	}
	return ""
}

func (x *UpdateTlsSecretReq) GetTlsKey() string {
	if x != nil {
		return x.TlsKey
	}
	return ""
}

type UpdateTlsSecretReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *UpdateTlsSecretReply) Reset() {
	*x = UpdateTlsSecretReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTlsSecretReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTlsSecretReply) ProtoMessage() {}

func (x *UpdateTlsSecretReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTlsSecretReply.ProtoReflect.Descriptor instead.
func (*UpdateTlsSecretReply) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{81}
}

func (x *UpdateTlsSecretReply) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

type CreateOpaqueSecretReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace   string            `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name        string            `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Annotations map[string]string `protobuf:"bytes,3,rep,name=annotations,proto3" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Labels      map[string]string `protobuf:"bytes,4,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Data        map[string]string `protobuf:"bytes,5,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *CreateOpaqueSecretReq) Reset() {
	*x = CreateOpaqueSecretReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOpaqueSecretReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOpaqueSecretReq) ProtoMessage() {}

func (x *CreateOpaqueSecretReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOpaqueSecretReq.ProtoReflect.Descriptor instead.
func (*CreateOpaqueSecretReq) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{82}
}

func (x *CreateOpaqueSecretReq) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *CreateOpaqueSecretReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateOpaqueSecretReq) GetAnnotations() map[string]string {
	if x != nil {
		return x.Annotations
	}
	return nil
}

func (x *CreateOpaqueSecretReq) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *CreateOpaqueSecretReq) GetData() map[string]string {
	if x != nil {
		return x.Data
	}
	return nil
}

type CreateOpaqueSecretReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *CreateOpaqueSecretReply) Reset() {
	*x = CreateOpaqueSecretReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOpaqueSecretReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOpaqueSecretReply) ProtoMessage() {}

func (x *CreateOpaqueSecretReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOpaqueSecretReply.ProtoReflect.Descriptor instead.
func (*CreateOpaqueSecretReply) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{83}
}

func (x *CreateOpaqueSecretReply) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

type UpdateOpaqueSecretReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace   string            `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name        string            `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Annotations map[string]string `protobuf:"bytes,3,rep,name=annotations,proto3" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Labels      map[string]string `protobuf:"bytes,4,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Data        map[string]string `protobuf:"bytes,5,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *UpdateOpaqueSecretReq) Reset() {
	*x = UpdateOpaqueSecretReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOpaqueSecretReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOpaqueSecretReq) ProtoMessage() {}

func (x *UpdateOpaqueSecretReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOpaqueSecretReq.ProtoReflect.Descriptor instead.
func (*UpdateOpaqueSecretReq) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{84}
}

func (x *UpdateOpaqueSecretReq) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *UpdateOpaqueSecretReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateOpaqueSecretReq) GetAnnotations() map[string]string {
	if x != nil {
		return x.Annotations
	}
	return nil
}

func (x *UpdateOpaqueSecretReq) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *UpdateOpaqueSecretReq) GetData() map[string]string {
	if x != nil {
		return x.Data
	}
	return nil
}

type UpdateOpaqueSecretReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *UpdateOpaqueSecretReply) Reset() {
	*x = UpdateOpaqueSecretReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOpaqueSecretReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOpaqueSecretReply) ProtoMessage() {}

func (x *UpdateOpaqueSecretReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOpaqueSecretReply.ProtoReflect.Descriptor instead.
func (*UpdateOpaqueSecretReply) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{85}
}

func (x *UpdateOpaqueSecretReply) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

type CreateDockerConfigJsonSecretReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace   string            `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name        string            `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Username    string            `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	Password    string            `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
	Email       string            `protobuf:"bytes,5,opt,name=email,proto3" json:"email,omitempty"`
	Url         string            `protobuf:"bytes,6,opt,name=url,proto3" json:"url,omitempty"`
	Annotations map[string]string `protobuf:"bytes,7,rep,name=annotations,proto3" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Labels      map[string]string `protobuf:"bytes,8,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *CreateDockerConfigJsonSecretReq) Reset() {
	*x = CreateDockerConfigJsonSecretReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDockerConfigJsonSecretReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDockerConfigJsonSecretReq) ProtoMessage() {}

func (x *CreateDockerConfigJsonSecretReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDockerConfigJsonSecretReq.ProtoReflect.Descriptor instead.
func (*CreateDockerConfigJsonSecretReq) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{86}
}

func (x *CreateDockerConfigJsonSecretReq) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *CreateDockerConfigJsonSecretReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateDockerConfigJsonSecretReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *CreateDockerConfigJsonSecretReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *CreateDockerConfigJsonSecretReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *CreateDockerConfigJsonSecretReq) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *CreateDockerConfigJsonSecretReq) GetAnnotations() map[string]string {
	if x != nil {
		return x.Annotations
	}
	return nil
}

func (x *CreateDockerConfigJsonSecretReq) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

type CreateDockerConfigJsonSecretReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *CreateDockerConfigJsonSecretReply) Reset() {
	*x = CreateDockerConfigJsonSecretReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDockerConfigJsonSecretReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDockerConfigJsonSecretReply) ProtoMessage() {}

func (x *CreateDockerConfigJsonSecretReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDockerConfigJsonSecretReply.ProtoReflect.Descriptor instead.
func (*CreateDockerConfigJsonSecretReply) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{87}
}

func (x *CreateDockerConfigJsonSecretReply) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

type UpdateDockerConfigJsonSecretReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace   string            `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name        string            `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Username    string            `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	Password    string            `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
	Email       string            `protobuf:"bytes,5,opt,name=email,proto3" json:"email,omitempty"`
	Url         string            `protobuf:"bytes,6,opt,name=url,proto3" json:"url,omitempty"`
	Annotations map[string]string `protobuf:"bytes,7,rep,name=annotations,proto3" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Labels      map[string]string `protobuf:"bytes,8,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *UpdateDockerConfigJsonSecretReq) Reset() {
	*x = UpdateDockerConfigJsonSecretReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDockerConfigJsonSecretReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDockerConfigJsonSecretReq) ProtoMessage() {}

func (x *UpdateDockerConfigJsonSecretReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDockerConfigJsonSecretReq.ProtoReflect.Descriptor instead.
func (*UpdateDockerConfigJsonSecretReq) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{88}
}

func (x *UpdateDockerConfigJsonSecretReq) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *UpdateDockerConfigJsonSecretReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateDockerConfigJsonSecretReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *UpdateDockerConfigJsonSecretReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *UpdateDockerConfigJsonSecretReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UpdateDockerConfigJsonSecretReq) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *UpdateDockerConfigJsonSecretReq) GetAnnotations() map[string]string {
	if x != nil {
		return x.Annotations
	}
	return nil
}

func (x *UpdateDockerConfigJsonSecretReq) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

type UpdateDockerConfigJsonSecretReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *UpdateDockerConfigJsonSecretReply) Reset() {
	*x = UpdateDockerConfigJsonSecretReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDockerConfigJsonSecretReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDockerConfigJsonSecretReply) ProtoMessage() {}

func (x *UpdateDockerConfigJsonSecretReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDockerConfigJsonSecretReply.ProtoReflect.Descriptor instead.
func (*UpdateDockerConfigJsonSecretReply) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{89}
}

func (x *UpdateDockerConfigJsonSecretReply) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

type CreateBasicAuthSecretReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace   string            `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name        string            `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Username    string            `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	Password    string            `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
	Immutable   bool              `protobuf:"varint,5,opt,name=immutable,proto3" json:"immutable,omitempty"`
	Annotations map[string]string `protobuf:"bytes,6,rep,name=annotations,proto3" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Labels      map[string]string `protobuf:"bytes,7,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *CreateBasicAuthSecretReq) Reset() {
	*x = CreateBasicAuthSecretReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateBasicAuthSecretReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBasicAuthSecretReq) ProtoMessage() {}

func (x *CreateBasicAuthSecretReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBasicAuthSecretReq.ProtoReflect.Descriptor instead.
func (*CreateBasicAuthSecretReq) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{90}
}

func (x *CreateBasicAuthSecretReq) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *CreateBasicAuthSecretReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateBasicAuthSecretReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *CreateBasicAuthSecretReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *CreateBasicAuthSecretReq) GetImmutable() bool {
	if x != nil {
		return x.Immutable
	}
	return false
}

func (x *CreateBasicAuthSecretReq) GetAnnotations() map[string]string {
	if x != nil {
		return x.Annotations
	}
	return nil
}

func (x *CreateBasicAuthSecretReq) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

type CreateBasicAuthSecretReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *CreateBasicAuthSecretReply) Reset() {
	*x = CreateBasicAuthSecretReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateBasicAuthSecretReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBasicAuthSecretReply) ProtoMessage() {}

func (x *CreateBasicAuthSecretReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBasicAuthSecretReply.ProtoReflect.Descriptor instead.
func (*CreateBasicAuthSecretReply) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{91}
}

func (x *CreateBasicAuthSecretReply) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

type UpdateBasicAuthSecretReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace   string            `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name        string            `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Username    string            `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	Password    string            `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
	Immutable   bool              `protobuf:"varint,5,opt,name=immutable,proto3" json:"immutable,omitempty"`
	Annotations map[string]string `protobuf:"bytes,6,rep,name=annotations,proto3" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Labels      map[string]string `protobuf:"bytes,7,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *UpdateBasicAuthSecretReq) Reset() {
	*x = UpdateBasicAuthSecretReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateBasicAuthSecretReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateBasicAuthSecretReq) ProtoMessage() {}

func (x *UpdateBasicAuthSecretReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateBasicAuthSecretReq.ProtoReflect.Descriptor instead.
func (*UpdateBasicAuthSecretReq) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{92}
}

func (x *UpdateBasicAuthSecretReq) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *UpdateBasicAuthSecretReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateBasicAuthSecretReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *UpdateBasicAuthSecretReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *UpdateBasicAuthSecretReq) GetImmutable() bool {
	if x != nil {
		return x.Immutable
	}
	return false
}

func (x *UpdateBasicAuthSecretReq) GetAnnotations() map[string]string {
	if x != nil {
		return x.Annotations
	}
	return nil
}

func (x *UpdateBasicAuthSecretReq) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

type UpdateBasicAuthSecretReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *UpdateBasicAuthSecretReply) Reset() {
	*x = UpdateBasicAuthSecretReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateBasicAuthSecretReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateBasicAuthSecretReply) ProtoMessage() {}

func (x *UpdateBasicAuthSecretReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateBasicAuthSecretReply.ProtoReflect.Descriptor instead.
func (*UpdateBasicAuthSecretReply) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{93}
}

func (x *UpdateBasicAuthSecretReply) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

type CreateSshAuthSecretReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace   string            `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name        string            `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	PrivateKey  string            `protobuf:"bytes,3,opt,name=privateKey,proto3" json:"privateKey,omitempty"`
	Immutable   bool              `protobuf:"varint,4,opt,name=immutable,proto3" json:"immutable,omitempty"`
	Annotations map[string]string `protobuf:"bytes,5,rep,name=annotations,proto3" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Labels      map[string]string `protobuf:"bytes,6,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *CreateSshAuthSecretReq) Reset() {
	*x = CreateSshAuthSecretReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSshAuthSecretReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSshAuthSecretReq) ProtoMessage() {}

func (x *CreateSshAuthSecretReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSshAuthSecretReq.ProtoReflect.Descriptor instead.
func (*CreateSshAuthSecretReq) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{94}
}

func (x *CreateSshAuthSecretReq) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *CreateSshAuthSecretReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateSshAuthSecretReq) GetPrivateKey() string {
	if x != nil {
		return x.PrivateKey
	}
	return ""
}

func (x *CreateSshAuthSecretReq) GetImmutable() bool {
	if x != nil {
		return x.Immutable
	}
	return false
}

func (x *CreateSshAuthSecretReq) GetAnnotations() map[string]string {
	if x != nil {
		return x.Annotations
	}
	return nil
}

func (x *CreateSshAuthSecretReq) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

type CreateSshAuthSecretReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *CreateSshAuthSecretReply) Reset() {
	*x = CreateSshAuthSecretReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSshAuthSecretReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSshAuthSecretReply) ProtoMessage() {}

func (x *CreateSshAuthSecretReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSshAuthSecretReply.ProtoReflect.Descriptor instead.
func (*CreateSshAuthSecretReply) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{95}
}

func (x *CreateSshAuthSecretReply) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

type UpdateSshAuthSecretReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace   string            `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name        string            `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	PrivateKey  string            `protobuf:"bytes,3,opt,name=privateKey,proto3" json:"privateKey,omitempty"`
	Immutable   bool              `protobuf:"varint,4,opt,name=immutable,proto3" json:"immutable,omitempty"`
	Annotations map[string]string `protobuf:"bytes,5,rep,name=annotations,proto3" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Labels      map[string]string `protobuf:"bytes,6,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *UpdateSshAuthSecretReq) Reset() {
	*x = UpdateSshAuthSecretReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSshAuthSecretReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSshAuthSecretReq) ProtoMessage() {}

func (x *UpdateSshAuthSecretReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSshAuthSecretReq.ProtoReflect.Descriptor instead.
func (*UpdateSshAuthSecretReq) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{96}
}

func (x *UpdateSshAuthSecretReq) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *UpdateSshAuthSecretReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateSshAuthSecretReq) GetPrivateKey() string {
	if x != nil {
		return x.PrivateKey
	}
	return ""
}

func (x *UpdateSshAuthSecretReq) GetImmutable() bool {
	if x != nil {
		return x.Immutable
	}
	return false
}

func (x *UpdateSshAuthSecretReq) GetAnnotations() map[string]string {
	if x != nil {
		return x.Annotations
	}
	return nil
}

func (x *UpdateSshAuthSecretReq) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

type UpdateSshAuthSecretReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *UpdateSshAuthSecretReply) Reset() {
	*x = UpdateSshAuthSecretReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSshAuthSecretReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSshAuthSecretReply) ProtoMessage() {}

func (x *UpdateSshAuthSecretReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSshAuthSecretReply.ProtoReflect.Descriptor instead.
func (*UpdateSshAuthSecretReply) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{97}
}

func (x *UpdateSshAuthSecretReply) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

// Job
type CreateJobReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (x *CreateJobReq) Reset() {
	*x = CreateJobReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateJobReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateJobReq) ProtoMessage() {}

func (x *CreateJobReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateJobReq.ProtoReflect.Descriptor instead.
func (*CreateJobReq) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{98}
}

func (x *CreateJobReq) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

type CreateJobReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateJobReply) Reset() {
	*x = CreateJobReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateJobReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateJobReply) ProtoMessage() {}

func (x *CreateJobReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateJobReply.ProtoReflect.Descriptor instead.
func (*CreateJobReply) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{99}
}

type ListJobReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (x *ListJobReq) Reset() {
	*x = ListJobReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[100]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListJobReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListJobReq) ProtoMessage() {}

func (x *ListJobReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[100]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListJobReq.ProtoReflect.Descriptor instead.
func (*ListJobReq) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{100}
}

func (x *ListJobReq) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

type ListJobReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListJobReply) Reset() {
	*x = ListJobReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[101]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListJobReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListJobReply) ProtoMessage() {}

func (x *ListJobReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[101]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListJobReply.ProtoReflect.Descriptor instead.
func (*ListJobReply) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{101}
}

type GetJobReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (x *GetJobReq) Reset() {
	*x = GetJobReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[102]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetJobReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJobReq) ProtoMessage() {}

func (x *GetJobReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[102]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJobReq.ProtoReflect.Descriptor instead.
func (*GetJobReq) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{102}
}

func (x *GetJobReq) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

type GetJobReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetJobReply) Reset() {
	*x = GetJobReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[103]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetJobReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJobReply) ProtoMessage() {}

func (x *GetJobReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[103]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJobReply.ProtoReflect.Descriptor instead.
func (*GetJobReply) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{103}
}

type DelJobReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (x *DelJobReq) Reset() {
	*x = DelJobReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[104]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelJobReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelJobReq) ProtoMessage() {}

func (x *DelJobReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[104]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelJobReq.ProtoReflect.Descriptor instead.
func (*DelJobReq) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{104}
}

func (x *DelJobReq) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

type DelJobReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DelJobReply) Reset() {
	*x = DelJobReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[105]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelJobReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelJobReply) ProtoMessage() {}

func (x *DelJobReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[105]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelJobReply.ProtoReflect.Descriptor instead.
func (*DelJobReply) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{105}
}

// Node
type ListNodeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListNodeReq) Reset() {
	*x = ListNodeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[106]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListNodeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNodeReq) ProtoMessage() {}

func (x *ListNodeReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[106]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNodeReq.ProtoReflect.Descriptor instead.
func (*ListNodeReq) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{106}
}

type ListNodeReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Node []*ListNodeReply_Node `protobuf:"bytes,1,rep,name=node,proto3" json:"node,omitempty"`
}

func (x *ListNodeReply) Reset() {
	*x = ListNodeReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[107]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListNodeReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNodeReply) ProtoMessage() {}

func (x *ListNodeReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[107]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNodeReply.ProtoReflect.Descriptor instead.
func (*ListNodeReply) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{107}
}

func (x *ListNodeReply) GetNode() []*ListNodeReply_Node {
	if x != nil {
		return x.Node
	}
	return nil
}

type GetNodeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Node string `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`
}

func (x *GetNodeReq) Reset() {
	*x = GetNodeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[108]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNodeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNodeReq) ProtoMessage() {}

func (x *GetNodeReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[108]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNodeReq.ProtoReflect.Descriptor instead.
func (*GetNodeReq) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{108}
}

func (x *GetNodeReq) GetNode() string {
	if x != nil {
		return x.Node
	}
	return ""
}

type GetNodeReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                    string                           `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	CreationTimestamp       int64                            `protobuf:"varint,2,opt,name=creationTimestamp,proto3" json:"creationTimestamp,omitempty"`
	ContainerRuntimeVersion string                           `protobuf:"bytes,3,opt,name=containerRuntimeVersion,proto3" json:"containerRuntimeVersion,omitempty"`
	KernelVersion           string                           `protobuf:"bytes,4,opt,name=kernelVersion,proto3" json:"kernelVersion,omitempty"`
	KubeProxyVersion        string                           `protobuf:"bytes,5,opt,name=kubeProxyVersion,proto3" json:"kubeProxyVersion,omitempty"`
	KubeletVersion          string                           `protobuf:"bytes,6,opt,name=kubeletVersion,proto3" json:"kubeletVersion,omitempty"`
	KubeletEndpoint         string                           `protobuf:"bytes,7,opt,name=kubeletEndpoint,proto3" json:"kubeletEndpoint,omitempty"`
	OsImage                 string                           `protobuf:"bytes,8,opt,name=osImage,proto3" json:"osImage,omitempty"`
	Labels                  map[string]string                `protobuf:"bytes,9,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Annotations             map[string]string                `protobuf:"bytes,10,rep,name=annotations,proto3" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Capacity                *GetNodeReply_Capacity           `protobuf:"bytes,11,opt,name=capacity,proto3" json:"capacity,omitempty"`
	Allocatable             *GetNodeReply_Allocatable        `protobuf:"bytes,12,opt,name=allocatable,proto3" json:"allocatable,omitempty"`
	AllocatablePercent      *GetNodeReply_AllocatablePercent `protobuf:"bytes,13,opt,name=allocatablePercent,proto3" json:"allocatablePercent,omitempty"`
}

func (x *GetNodeReply) Reset() {
	*x = GetNodeReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[109]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNodeReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNodeReply) ProtoMessage() {}

func (x *GetNodeReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[109]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNodeReply.ProtoReflect.Descriptor instead.
func (*GetNodeReply) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{109}
}

func (x *GetNodeReply) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetNodeReply) GetCreationTimestamp() int64 {
	if x != nil {
		return x.CreationTimestamp
	}
	return 0
}

func (x *GetNodeReply) GetContainerRuntimeVersion() string {
	if x != nil {
		return x.ContainerRuntimeVersion
	}
	return ""
}

func (x *GetNodeReply) GetKernelVersion() string {
	if x != nil {
		return x.KernelVersion
	}
	return ""
}

func (x *GetNodeReply) GetKubeProxyVersion() string {
	if x != nil {
		return x.KubeProxyVersion
	}
	return ""
}

func (x *GetNodeReply) GetKubeletVersion() string {
	if x != nil {
		return x.KubeletVersion
	}
	return ""
}

func (x *GetNodeReply) GetKubeletEndpoint() string {
	if x != nil {
		return x.KubeletEndpoint
	}
	return ""
}

func (x *GetNodeReply) GetOsImage() string {
	if x != nil {
		return x.OsImage
	}
	return ""
}

func (x *GetNodeReply) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *GetNodeReply) GetAnnotations() map[string]string {
	if x != nil {
		return x.Annotations
	}
	return nil
}

func (x *GetNodeReply) GetCapacity() *GetNodeReply_Capacity {
	if x != nil {
		return x.Capacity
	}
	return nil
}

func (x *GetNodeReply) GetAllocatable() *GetNodeReply_Allocatable {
	if x != nil {
		return x.Allocatable
	}
	return nil
}

func (x *GetNodeReply) GetAllocatablePercent() *GetNodeReply_AllocatablePercent {
	if x != nil {
		return x.AllocatablePercent
	}
	return nil
}

// Pod
type GetPodReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetPodReq) Reset() {
	*x = GetPodReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[110]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPodReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPodReq) ProtoMessage() {}

func (x *GetPodReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[110]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPodReq.ProtoReflect.Descriptor instead.
func (*GetPodReq) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{110}
}

func (x *GetPodReq) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *GetPodReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetPodReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace         string                   `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name              string                   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	CreationTimestamp int64                    `protobuf:"varint,3,opt,name=creationTimestamp,proto3" json:"creationTimestamp,omitempty"`
	Reason            string                   `protobuf:"bytes,4,opt,name=reason,proto3" json:"reason,omitempty"`
	Phase             string                   `protobuf:"bytes,5,opt,name=phase,proto3" json:"phase,omitempty"`
	HostIP            string                   `protobuf:"bytes,6,opt,name=hostIP,proto3" json:"hostIP,omitempty"`
	PodIP             string                   `protobuf:"bytes,7,opt,name=podIP,proto3" json:"podIP,omitempty"`
	Labels            map[string]string        `protobuf:"bytes,8,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Envs              map[string]string        `protobuf:"bytes,9,rep,name=envs,proto3" json:"envs,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Container         []*GetPodReply_Container `protobuf:"bytes,10,rep,name=container,proto3" json:"container,omitempty"`
}

func (x *GetPodReply) Reset() {
	*x = GetPodReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[111]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPodReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPodReply) ProtoMessage() {}

func (x *GetPodReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[111]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPodReply.ProtoReflect.Descriptor instead.
func (*GetPodReply) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{111}
}

func (x *GetPodReply) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *GetPodReply) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetPodReply) GetCreationTimestamp() int64 {
	if x != nil {
		return x.CreationTimestamp
	}
	return 0
}

func (x *GetPodReply) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *GetPodReply) GetPhase() string {
	if x != nil {
		return x.Phase
	}
	return ""
}

func (x *GetPodReply) GetHostIP() string {
	if x != nil {
		return x.HostIP
	}
	return ""
}

func (x *GetPodReply) GetPodIP() string {
	if x != nil {
		return x.PodIP
	}
	return ""
}

func (x *GetPodReply) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *GetPodReply) GetEnvs() map[string]string {
	if x != nil {
		return x.Envs
	}
	return nil
}

func (x *GetPodReply) GetContainer() []*GetPodReply_Container {
	if x != nil {
		return x.Container
	}
	return nil
}

type ListPodReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace     string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Limit         int64  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Continue      string `protobuf:"bytes,3,opt,name=continue,proto3" json:"continue,omitempty"`
	LabelSelector string `protobuf:"bytes,4,opt,name=labelSelector,proto3" json:"labelSelector,omitempty"`
}

func (x *ListPodReq) Reset() {
	*x = ListPodReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[112]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPodReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPodReq) ProtoMessage() {}

func (x *ListPodReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[112]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPodReq.ProtoReflect.Descriptor instead.
func (*ListPodReq) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{112}
}

func (x *ListPodReq) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ListPodReq) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListPodReq) GetContinue() string {
	if x != nil {
		return x.Continue
	}
	return ""
}

func (x *ListPodReq) GetLabelSelector() string {
	if x != nil {
		return x.LabelSelector
	}
	return ""
}

type ListPodReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Continue string              `protobuf:"bytes,1,opt,name=continue,proto3" json:"continue,omitempty"`
	Pod      []*ListPodReply_Pod `protobuf:"bytes,2,rep,name=pod,proto3" json:"pod,omitempty"`
}

func (x *ListPodReply) Reset() {
	*x = ListPodReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[113]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPodReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPodReply) ProtoMessage() {}

func (x *ListPodReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[113]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPodReply.ProtoReflect.Descriptor instead.
func (*ListPodReply) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{113}
}

func (x *ListPodReply) GetContinue() string {
	if x != nil {
		return x.Continue
	}
	return ""
}

func (x *ListPodReply) GetPod() []*ListPodReply_Pod {
	if x != nil {
		return x.Pod
	}
	return nil
}

type SearchPodReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Keyword   string `protobuf:"bytes,2,opt,name=keyword,proto3" json:"keyword,omitempty"`
}

func (x *SearchPodReq) Reset() {
	*x = SearchPodReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[114]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchPodReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchPodReq) ProtoMessage() {}

func (x *SearchPodReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[114]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchPodReq.ProtoReflect.Descriptor instead.
func (*SearchPodReq) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{114}
}

func (x *SearchPodReq) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *SearchPodReq) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

type SearchPodReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pod []*SearchPodReply_Pod `protobuf:"bytes,1,rep,name=pod,proto3" json:"pod,omitempty"`
}

func (x *SearchPodReply) Reset() {
	*x = SearchPodReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[115]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchPodReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchPodReply) ProtoMessage() {}

func (x *SearchPodReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[115]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchPodReply.ProtoReflect.Descriptor instead.
func (*SearchPodReply) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{115}
}

func (x *SearchPodReply) GetPod() []*SearchPodReply_Pod {
	if x != nil {
		return x.Pod
	}
	return nil
}

type DelPodReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *DelPodReq) Reset() {
	*x = DelPodReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[116]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelPodReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelPodReq) ProtoMessage() {}

func (x *DelPodReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[116]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelPodReq.ProtoReflect.Descriptor instead.
func (*DelPodReq) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{116}
}

func (x *DelPodReq) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *DelPodReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type DelPodReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *DelPodReply) Reset() {
	*x = DelPodReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[117]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelPodReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelPodReply) ProtoMessage() {}

func (x *DelPodReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[117]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelPodReply.ProtoReflect.Descriptor instead.
func (*DelPodReply) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{117}
}

func (x *DelPodReply) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

type EvictPodReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *EvictPodReq) Reset() {
	*x = EvictPodReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[118]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EvictPodReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvictPodReq) ProtoMessage() {}

func (x *EvictPodReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[118]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvictPodReq.ProtoReflect.Descriptor instead.
func (*EvictPodReq) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{118}
}

func (x *EvictPodReq) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *EvictPodReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type EvictPodReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *EvictPodReply) Reset() {
	*x = EvictPodReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[119]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EvictPodReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvictPodReply) ProtoMessage() {}

func (x *EvictPodReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[119]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvictPodReply.ProtoReflect.Descriptor instead.
func (*EvictPodReply) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{119}
}

func (x *EvictPodReply) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

type DelEvictPodReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (x *DelEvictPodReq) Reset() {
	*x = DelEvictPodReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[120]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelEvictPodReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelEvictPodReq) ProtoMessage() {}

func (x *DelEvictPodReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[120]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelEvictPodReq.ProtoReflect.Descriptor instead.
func (*DelEvictPodReq) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{120}
}

func (x *DelEvictPodReq) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

type DelEvictPodReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *DelEvictPodReply) Reset() {
	*x = DelEvictPodReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[121]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelEvictPodReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelEvictPodReply) ProtoMessage() {}

func (x *DelEvictPodReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[121]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelEvictPodReply.ProtoReflect.Descriptor instead.
func (*DelEvictPodReply) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{121}
}

func (x *DelEvictPodReply) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

// Service
type ServicePort struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Protocol   string `protobuf:"bytes,2,opt,name=protocol,proto3" json:"protocol,omitempty"`
	Port       int32  `protobuf:"varint,3,opt,name=port,proto3" json:"port,omitempty"`
	TargetPort int32  `protobuf:"varint,4,opt,name=targetPort,proto3" json:"targetPort,omitempty"`
}

func (x *ServicePort) Reset() {
	*x = ServicePort{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[122]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServicePort) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServicePort) ProtoMessage() {}

func (x *ServicePort) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[122]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServicePort.ProtoReflect.Descriptor instead.
func (*ServicePort) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{122}
}

func (x *ServicePort) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ServicePort) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

func (x *ServicePort) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *ServicePort) GetTargetPort() int32 {
	if x != nil {
		return x.TargetPort
	}
	return 0
}

type CreateServiceReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace   string            `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name        string            `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ServiceType string            `protobuf:"bytes,3,opt,name=serviceType,proto3" json:"serviceType,omitempty"`
	Selector    map[string]string `protobuf:"bytes,4,rep,name=selector,proto3" json:"selector,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Ports       []*ServicePort    `protobuf:"bytes,5,rep,name=ports,proto3" json:"ports,omitempty"`
	Annotations map[string]string `protobuf:"bytes,6,rep,name=annotations,proto3" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *CreateServiceReq) Reset() {
	*x = CreateServiceReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[123]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateServiceReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateServiceReq) ProtoMessage() {}

func (x *CreateServiceReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[123]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateServiceReq.ProtoReflect.Descriptor instead.
func (*CreateServiceReq) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{123}
}

func (x *CreateServiceReq) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *CreateServiceReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateServiceReq) GetServiceType() string {
	if x != nil {
		return x.ServiceType
	}
	return ""
}

func (x *CreateServiceReq) GetSelector() map[string]string {
	if x != nil {
		return x.Selector
	}
	return nil
}

func (x *CreateServiceReq) GetPorts() []*ServicePort {
	if x != nil {
		return x.Ports
	}
	return nil
}

func (x *CreateServiceReq) GetAnnotations() map[string]string {
	if x != nil {
		return x.Annotations
	}
	return nil
}

type CreateServiceReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *CreateServiceReply) Reset() {
	*x = CreateServiceReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[124]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateServiceReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateServiceReply) ProtoMessage() {}

func (x *CreateServiceReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[124]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateServiceReply.ProtoReflect.Descriptor instead.
func (*CreateServiceReply) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{124}
}

func (x *CreateServiceReply) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

type ListServiceReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (x *ListServiceReq) Reset() {
	*x = ListServiceReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[125]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListServiceReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListServiceReq) ProtoMessage() {}

func (x *ListServiceReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[125]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListServiceReq.ProtoReflect.Descriptor instead.
func (*ListServiceReq) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{125}
}

func (x *ListServiceReq) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

type ListServiceReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Service []*ListServiceReply_Service `protobuf:"bytes,1,rep,name=service,proto3" json:"service,omitempty"`
}

func (x *ListServiceReply) Reset() {
	*x = ListServiceReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[126]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListServiceReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListServiceReply) ProtoMessage() {}

func (x *ListServiceReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[126]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListServiceReply.ProtoReflect.Descriptor instead.
func (*ListServiceReply) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{126}
}

func (x *ListServiceReply) GetService() []*ListServiceReply_Service {
	if x != nil {
		return x.Service
	}
	return nil
}

type GetServiceReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetServiceReq) Reset() {
	*x = GetServiceReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[127]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServiceReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServiceReq) ProtoMessage() {}

func (x *GetServiceReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[127]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServiceReq.ProtoReflect.Descriptor instead.
func (*GetServiceReq) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{127}
}

func (x *GetServiceReq) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *GetServiceReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetServiceReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name            string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Namespace       string            `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	ResourceVersion string            `protobuf:"bytes,3,opt,name=resourceVersion,proto3" json:"resourceVersion,omitempty"`
	ClusterIP       string            `protobuf:"bytes,4,opt,name=clusterIP,proto3" json:"clusterIP,omitempty"`
	SessionAffinity string            `protobuf:"bytes,5,opt,name=sessionAffinity,proto3" json:"sessionAffinity,omitempty"`
	Type            string            `protobuf:"bytes,6,opt,name=type,proto3" json:"type,omitempty"`
	Labels          map[string]string `protobuf:"bytes,7,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Annotations     map[string]string `protobuf:"bytes,8,rep,name=annotations,proto3" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Ports           []*ServicePort    `protobuf:"bytes,9,rep,name=ports,proto3" json:"ports,omitempty"`
	ExternalIPs     []string          `protobuf:"bytes,10,rep,name=ExternalIPs,proto3" json:"ExternalIPs,omitempty"`
}

func (x *GetServiceReply) Reset() {
	*x = GetServiceReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[128]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServiceReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServiceReply) ProtoMessage() {}

func (x *GetServiceReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[128]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServiceReply.ProtoReflect.Descriptor instead.
func (*GetServiceReply) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{128}
}

func (x *GetServiceReply) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetServiceReply) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *GetServiceReply) GetResourceVersion() string {
	if x != nil {
		return x.ResourceVersion
	}
	return ""
}

func (x *GetServiceReply) GetClusterIP() string {
	if x != nil {
		return x.ClusterIP
	}
	return ""
}

func (x *GetServiceReply) GetSessionAffinity() string {
	if x != nil {
		return x.SessionAffinity
	}
	return ""
}

func (x *GetServiceReply) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *GetServiceReply) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *GetServiceReply) GetAnnotations() map[string]string {
	if x != nil {
		return x.Annotations
	}
	return nil
}

func (x *GetServiceReply) GetPorts() []*ServicePort {
	if x != nil {
		return x.Ports
	}
	return nil
}

func (x *GetServiceReply) GetExternalIPs() []string {
	if x != nil {
		return x.ExternalIPs
	}
	return nil
}

type DelServiceReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *DelServiceReq) Reset() {
	*x = DelServiceReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[129]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelServiceReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelServiceReq) ProtoMessage() {}

func (x *DelServiceReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[129]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelServiceReq.ProtoReflect.Descriptor instead.
func (*DelServiceReq) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{129}
}

func (x *DelServiceReq) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *DelServiceReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type DelServiceReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *DelServiceReply) Reset() {
	*x = DelServiceReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[130]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelServiceReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelServiceReply) ProtoMessage() {}

func (x *DelServiceReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[130]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelServiceReply.ProtoReflect.Descriptor instead.
func (*DelServiceReply) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{130}
}

func (x *DelServiceReply) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

// Ingress
type CreateIngressReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	//string ingressClassName = 3 [(validate.rules).string.min_len = 1];
	Annotations map[string]string `protobuf:"bytes,4,rep,name=annotations,proto3" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Labels      map[string]string `protobuf:"bytes,5,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// map[hostname]Service
	Service map[string]*CreateIngressReq_Service `protobuf:"bytes,6,rep,name=service,proto3" json:"service,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *CreateIngressReq) Reset() {
	*x = CreateIngressReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[131]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateIngressReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateIngressReq) ProtoMessage() {}

func (x *CreateIngressReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[131]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateIngressReq.ProtoReflect.Descriptor instead.
func (*CreateIngressReq) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{131}
}

func (x *CreateIngressReq) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *CreateIngressReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateIngressReq) GetAnnotations() map[string]string {
	if x != nil {
		return x.Annotations
	}
	return nil
}

func (x *CreateIngressReq) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *CreateIngressReq) GetService() map[string]*CreateIngressReq_Service {
	if x != nil {
		return x.Service
	}
	return nil
}

type CreateIngressReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *CreateIngressReply) Reset() {
	*x = CreateIngressReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[132]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateIngressReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateIngressReply) ProtoMessage() {}

func (x *CreateIngressReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[132]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateIngressReply.ProtoReflect.Descriptor instead.
func (*CreateIngressReply) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{132}
}

func (x *CreateIngressReply) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

type UpdateIngressReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	//string ingressClassName = 3 [(validate.rules).string.min_len = 1];
	Annotations map[string]string `protobuf:"bytes,4,rep,name=annotations,proto3" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Labels      map[string]string `protobuf:"bytes,5,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// map[hostname]Service
	Service map[string]*UpdateIngressReq_Service `protobuf:"bytes,6,rep,name=service,proto3" json:"service,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *UpdateIngressReq) Reset() {
	*x = UpdateIngressReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[133]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateIngressReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateIngressReq) ProtoMessage() {}

func (x *UpdateIngressReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[133]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateIngressReq.ProtoReflect.Descriptor instead.
func (*UpdateIngressReq) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{133}
}

func (x *UpdateIngressReq) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *UpdateIngressReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateIngressReq) GetAnnotations() map[string]string {
	if x != nil {
		return x.Annotations
	}
	return nil
}

func (x *UpdateIngressReq) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *UpdateIngressReq) GetService() map[string]*UpdateIngressReq_Service {
	if x != nil {
		return x.Service
	}
	return nil
}

type UpdateIngressReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *UpdateIngressReply) Reset() {
	*x = UpdateIngressReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[134]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateIngressReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateIngressReply) ProtoMessage() {}

func (x *UpdateIngressReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[134]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateIngressReply.ProtoReflect.Descriptor instead.
func (*UpdateIngressReply) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{134}
}

func (x *UpdateIngressReply) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

type ListIngressReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (x *ListIngressReq) Reset() {
	*x = ListIngressReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[135]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListIngressReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListIngressReq) ProtoMessage() {}

func (x *ListIngressReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[135]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListIngressReq.ProtoReflect.Descriptor instead.
func (*ListIngressReq) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{135}
}

func (x *ListIngressReq) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

type ListIngressReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ingress []*ListIngressReply_Ingress `protobuf:"bytes,1,rep,name=ingress,proto3" json:"ingress,omitempty"`
}

func (x *ListIngressReply) Reset() {
	*x = ListIngressReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[136]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListIngressReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListIngressReply) ProtoMessage() {}

func (x *ListIngressReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[136]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListIngressReply.ProtoReflect.Descriptor instead.
func (*ListIngressReply) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{136}
}

func (x *ListIngressReply) GetIngress() []*ListIngressReply_Ingress {
	if x != nil {
		return x.Ingress
	}
	return nil
}

type GetIngressReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetIngressReq) Reset() {
	*x = GetIngressReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[137]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIngressReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIngressReq) ProtoMessage() {}

func (x *GetIngressReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[137]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIngressReq.ProtoReflect.Descriptor instead.
func (*GetIngressReq) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{137}
}

func (x *GetIngressReq) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *GetIngressReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetIngressReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace   string            `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name        string            `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Annotations map[string]string `protobuf:"bytes,3,rep,name=annotations,proto3" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Labels      map[string]string `protobuf:"bytes,4,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// map[hostname]Service
	Service map[string]*GetIngressReply_Service `protobuf:"bytes,5,rep,name=service,proto3" json:"service,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GetIngressReply) Reset() {
	*x = GetIngressReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[138]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIngressReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIngressReply) ProtoMessage() {}

func (x *GetIngressReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[138]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIngressReply.ProtoReflect.Descriptor instead.
func (*GetIngressReply) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{138}
}

func (x *GetIngressReply) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *GetIngressReply) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetIngressReply) GetAnnotations() map[string]string {
	if x != nil {
		return x.Annotations
	}
	return nil
}

func (x *GetIngressReply) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *GetIngressReply) GetService() map[string]*GetIngressReply_Service {
	if x != nil {
		return x.Service
	}
	return nil
}

type DelIngressReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *DelIngressReq) Reset() {
	*x = DelIngressReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[139]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelIngressReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelIngressReq) ProtoMessage() {}

func (x *DelIngressReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[139]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelIngressReq.ProtoReflect.Descriptor instead.
func (*DelIngressReq) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{139}
}

func (x *DelIngressReq) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *DelIngressReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type DelIngressReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *DelIngressReply) Reset() {
	*x = DelIngressReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[140]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelIngressReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelIngressReply) ProtoMessage() {}

func (x *DelIngressReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[140]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelIngressReply.ProtoReflect.Descriptor instead.
func (*DelIngressReply) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{140}
}

func (x *DelIngressReply) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

// LoadBalancer
type CreateLoadBalancerReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (x *CreateLoadBalancerReq) Reset() {
	*x = CreateLoadBalancerReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[141]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateLoadBalancerReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLoadBalancerReq) ProtoMessage() {}

func (x *CreateLoadBalancerReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[141]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLoadBalancerReq.ProtoReflect.Descriptor instead.
func (*CreateLoadBalancerReq) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{141}
}

func (x *CreateLoadBalancerReq) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

type CreateLoadBalancerReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateLoadBalancerReply) Reset() {
	*x = CreateLoadBalancerReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[142]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateLoadBalancerReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLoadBalancerReply) ProtoMessage() {}

func (x *CreateLoadBalancerReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[142]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLoadBalancerReply.ProtoReflect.Descriptor instead.
func (*CreateLoadBalancerReply) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{142}
}

type ListLoadBalancerReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (x *ListLoadBalancerReq) Reset() {
	*x = ListLoadBalancerReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[143]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListLoadBalancerReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLoadBalancerReq) ProtoMessage() {}

func (x *ListLoadBalancerReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[143]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListLoadBalancerReq.ProtoReflect.Descriptor instead.
func (*ListLoadBalancerReq) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{143}
}

func (x *ListLoadBalancerReq) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

type ListLoadBalancerReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListLoadBalancerReply) Reset() {
	*x = ListLoadBalancerReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[144]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListLoadBalancerReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLoadBalancerReply) ProtoMessage() {}

func (x *ListLoadBalancerReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[144]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListLoadBalancerReply.ProtoReflect.Descriptor instead.
func (*ListLoadBalancerReply) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{144}
}

type GetLoadBalancerReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (x *GetLoadBalancerReq) Reset() {
	*x = GetLoadBalancerReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[145]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLoadBalancerReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLoadBalancerReq) ProtoMessage() {}

func (x *GetLoadBalancerReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[145]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLoadBalancerReq.ProtoReflect.Descriptor instead.
func (*GetLoadBalancerReq) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{145}
}

func (x *GetLoadBalancerReq) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

type GetLoadBalancerReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetLoadBalancerReply) Reset() {
	*x = GetLoadBalancerReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[146]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLoadBalancerReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLoadBalancerReply) ProtoMessage() {}

func (x *GetLoadBalancerReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[146]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLoadBalancerReply.ProtoReflect.Descriptor instead.
func (*GetLoadBalancerReply) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{146}
}

type DelLoadBalancerReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (x *DelLoadBalancerReq) Reset() {
	*x = DelLoadBalancerReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[147]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelLoadBalancerReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelLoadBalancerReq) ProtoMessage() {}

func (x *DelLoadBalancerReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[147]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelLoadBalancerReq.ProtoReflect.Descriptor instead.
func (*DelLoadBalancerReq) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{147}
}

func (x *DelLoadBalancerReq) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

type DelLoadBalancerReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DelLoadBalancerReply) Reset() {
	*x = DelLoadBalancerReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[148]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelLoadBalancerReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelLoadBalancerReply) ProtoMessage() {}

func (x *DelLoadBalancerReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[148]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelLoadBalancerReply.ProtoReflect.Descriptor instead.
func (*DelLoadBalancerReply) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{148}
}

// StatefulSet
type CreateStatefulSetReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (x *CreateStatefulSetReq) Reset() {
	*x = CreateStatefulSetReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[149]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateStatefulSetReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateStatefulSetReq) ProtoMessage() {}

func (x *CreateStatefulSetReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[149]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateStatefulSetReq.ProtoReflect.Descriptor instead.
func (*CreateStatefulSetReq) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{149}
}

func (x *CreateStatefulSetReq) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

type CreateStatefulSetReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateStatefulSetReply) Reset() {
	*x = CreateStatefulSetReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[150]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateStatefulSetReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateStatefulSetReply) ProtoMessage() {}

func (x *CreateStatefulSetReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[150]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateStatefulSetReply.ProtoReflect.Descriptor instead.
func (*CreateStatefulSetReply) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{150}
}

type ListStatefulSetReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (x *ListStatefulSetReq) Reset() {
	*x = ListStatefulSetReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[151]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListStatefulSetReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStatefulSetReq) ProtoMessage() {}

func (x *ListStatefulSetReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[151]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStatefulSetReq.ProtoReflect.Descriptor instead.
func (*ListStatefulSetReq) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{151}
}

func (x *ListStatefulSetReq) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

type ListStatefulSetReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListStatefulSetReply) Reset() {
	*x = ListStatefulSetReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[152]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListStatefulSetReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStatefulSetReply) ProtoMessage() {}

func (x *ListStatefulSetReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[152]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStatefulSetReply.ProtoReflect.Descriptor instead.
func (*ListStatefulSetReply) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{152}
}

type GetStatefulSetReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (x *GetStatefulSetReq) Reset() {
	*x = GetStatefulSetReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[153]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStatefulSetReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStatefulSetReq) ProtoMessage() {}

func (x *GetStatefulSetReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[153]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStatefulSetReq.ProtoReflect.Descriptor instead.
func (*GetStatefulSetReq) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{153}
}

func (x *GetStatefulSetReq) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

type GetStatefulSetReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetStatefulSetReply) Reset() {
	*x = GetStatefulSetReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[154]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStatefulSetReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStatefulSetReply) ProtoMessage() {}

func (x *GetStatefulSetReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[154]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStatefulSetReply.ProtoReflect.Descriptor instead.
func (*GetStatefulSetReply) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{154}
}

type DelStatefulSetReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (x *DelStatefulSetReq) Reset() {
	*x = DelStatefulSetReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[155]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelStatefulSetReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelStatefulSetReq) ProtoMessage() {}

func (x *DelStatefulSetReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[155]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelStatefulSetReq.ProtoReflect.Descriptor instead.
func (*DelStatefulSetReq) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{155}
}

func (x *DelStatefulSetReq) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

type DelStatefulSetReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DelStatefulSetReply) Reset() {
	*x = DelStatefulSetReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[156]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelStatefulSetReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelStatefulSetReply) ProtoMessage() {}

func (x *DelStatefulSetReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[156]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelStatefulSetReply.ProtoReflect.Descriptor instead.
func (*DelStatefulSetReply) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{156}
}

//
type ListPersistentVolumeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListPersistentVolumeReq) Reset() {
	*x = ListPersistentVolumeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[157]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPersistentVolumeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPersistentVolumeReq) ProtoMessage() {}

func (x *ListPersistentVolumeReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[157]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPersistentVolumeReq.ProtoReflect.Descriptor instead.
func (*ListPersistentVolumeReq) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{157}
}

type ListPersistentVolumeReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PersistentVolume []*ListPersistentVolumeReply_PersistentVolume `protobuf:"bytes,1,rep,name=persistentVolume,proto3" json:"persistentVolume,omitempty"`
}

func (x *ListPersistentVolumeReply) Reset() {
	*x = ListPersistentVolumeReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[158]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPersistentVolumeReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPersistentVolumeReply) ProtoMessage() {}

func (x *ListPersistentVolumeReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[158]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPersistentVolumeReply.ProtoReflect.Descriptor instead.
func (*ListPersistentVolumeReply) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{158}
}

func (x *ListPersistentVolumeReply) GetPersistentVolume() []*ListPersistentVolumeReply_PersistentVolume {
	if x != nil {
		return x.PersistentVolume
	}
	return nil
}

type ListPersistentVolumeClaimReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (x *ListPersistentVolumeClaimReq) Reset() {
	*x = ListPersistentVolumeClaimReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[159]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPersistentVolumeClaimReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPersistentVolumeClaimReq) ProtoMessage() {}

func (x *ListPersistentVolumeClaimReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[159]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPersistentVolumeClaimReq.ProtoReflect.Descriptor instead.
func (*ListPersistentVolumeClaimReq) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{159}
}

func (x *ListPersistentVolumeClaimReq) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

type ListPersistentVolumeClaimReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PersistentVolumeClaim []*ListPersistentVolumeClaimReply_PersistentVolumeClaim `protobuf:"bytes,1,rep,name=persistentVolumeClaim,proto3" json:"persistentVolumeClaim,omitempty"`
}

func (x *ListPersistentVolumeClaimReply) Reset() {
	*x = ListPersistentVolumeClaimReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[160]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPersistentVolumeClaimReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPersistentVolumeClaimReply) ProtoMessage() {}

func (x *ListPersistentVolumeClaimReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[160]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPersistentVolumeClaimReply.ProtoReflect.Descriptor instead.
func (*ListPersistentVolumeClaimReply) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{160}
}

func (x *ListPersistentVolumeClaimReply) GetPersistentVolumeClaim() []*ListPersistentVolumeClaimReply_PersistentVolumeClaim {
	if x != nil {
		return x.PersistentVolumeClaim
	}
	return nil
}

type GetExpiringSoonKubernetesTlsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NameSpace string `protobuf:"bytes,1,opt,name=nameSpace,proto3" json:"nameSpace,omitempty"`
}

func (x *GetExpiringSoonKubernetesTlsReq) Reset() {
	*x = GetExpiringSoonKubernetesTlsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[161]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetExpiringSoonKubernetesTlsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExpiringSoonKubernetesTlsReq) ProtoMessage() {}

func (x *GetExpiringSoonKubernetesTlsReq) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[161]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExpiringSoonKubernetesTlsReq.ProtoReflect.Descriptor instead.
func (*GetExpiringSoonKubernetesTlsReq) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{161}
}

func (x *GetExpiringSoonKubernetesTlsReq) GetNameSpace() string {
	if x != nil {
		return x.NameSpace
	}
	return ""
}

type GetExpiringSoonKubernetesTlsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExpiringSoonKubernetesTls       []*GetExpiringSoonKubernetesTlsReply_ExpiringSoonKubernetesTls       `protobuf:"bytes,1,rep,name=expiringSoonKubernetesTls,proto3" json:"expiringSoonKubernetesTls,omitempty"`
	FailedExpiringSoonKubernetesTls []*GetExpiringSoonKubernetesTlsReply_FailedExpiringSoonKubernetesTls `protobuf:"bytes,2,rep,name=failedExpiringSoonKubernetesTls,proto3" json:"failedExpiringSoonKubernetesTls,omitempty"`
}

func (x *GetExpiringSoonKubernetesTlsReply) Reset() {
	*x = GetExpiringSoonKubernetesTlsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[162]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetExpiringSoonKubernetesTlsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExpiringSoonKubernetesTlsReply) ProtoMessage() {}

func (x *GetExpiringSoonKubernetesTlsReply) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[162]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExpiringSoonKubernetesTlsReply.ProtoReflect.Descriptor instead.
func (*GetExpiringSoonKubernetesTlsReply) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{162}
}

func (x *GetExpiringSoonKubernetesTlsReply) GetExpiringSoonKubernetesTls() []*GetExpiringSoonKubernetesTlsReply_ExpiringSoonKubernetesTls {
	if x != nil {
		return x.ExpiringSoonKubernetesTls
	}
	return nil
}

func (x *GetExpiringSoonKubernetesTlsReply) GetFailedExpiringSoonKubernetesTls() []*GetExpiringSoonKubernetesTlsReply_FailedExpiringSoonKubernetesTls {
	if x != nil {
		return x.FailedExpiringSoonKubernetesTls
	}
	return nil
}

type GetPodMetricsReply_ContainerMetrics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Cpu       string `protobuf:"bytes,2,opt,name=cpu,proto3" json:"cpu,omitempty"`
	Memory    string `protobuf:"bytes,3,opt,name=memory,proto3" json:"memory,omitempty"`
	Window    string `protobuf:"bytes,4,opt,name=window,proto3" json:"window,omitempty"`
	Timestamp int64  `protobuf:"varint,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *GetPodMetricsReply_ContainerMetrics) Reset() {
	*x = GetPodMetricsReply_ContainerMetrics{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[163]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPodMetricsReply_ContainerMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPodMetricsReply_ContainerMetrics) ProtoMessage() {}

func (x *GetPodMetricsReply_ContainerMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[163]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPodMetricsReply_ContainerMetrics.ProtoReflect.Descriptor instead.
func (*GetPodMetricsReply_ContainerMetrics) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{5, 0}
}

func (x *GetPodMetricsReply_ContainerMetrics) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetPodMetricsReply_ContainerMetrics) GetCpu() string {
	if x != nil {
		return x.Cpu
	}
	return ""
}

func (x *GetPodMetricsReply_ContainerMetrics) GetMemory() string {
	if x != nil {
		return x.Memory
	}
	return ""
}

func (x *GetPodMetricsReply_ContainerMetrics) GetWindow() string {
	if x != nil {
		return x.Window
	}
	return ""
}

func (x *GetPodMetricsReply_ContainerMetrics) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type ListNameSpaceReply_NameSpace struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	CreateTime int64  `protobuf:"varint,2,opt,name=createTime,proto3" json:"createTime,omitempty"`
	Status     string `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *ListNameSpaceReply_NameSpace) Reset() {
	*x = ListNameSpaceReply_NameSpace{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[164]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListNameSpaceReply_NameSpace) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNameSpaceReply_NameSpace) ProtoMessage() {}

func (x *ListNameSpaceReply_NameSpace) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[164]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNameSpaceReply_NameSpace.ProtoReflect.Descriptor instead.
func (*ListNameSpaceReply_NameSpace) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{9, 0}
}

func (x *ListNameSpaceReply_NameSpace) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ListNameSpaceReply_NameSpace) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *ListNameSpaceReply_NameSpace) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type FilterDeploymentReplyDeployment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *FilterDeploymentReplyDeployment) Reset() {
	*x = FilterDeploymentReplyDeployment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[177]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilterDeploymentReplyDeployment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterDeploymentReplyDeployment) ProtoMessage() {}

func (x *FilterDeploymentReplyDeployment) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[177]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterDeploymentReplyDeployment.ProtoReflect.Descriptor instead.
func (*FilterDeploymentReplyDeployment) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{71, 0}
}

func (x *FilterDeploymentReplyDeployment) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *FilterDeploymentReplyDeployment) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ListSecretReply_Secret struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace         string            `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name              string            `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Annotations       map[string]string `protobuf:"bytes,3,rep,name=annotations,proto3" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Labels            map[string]string `protobuf:"bytes,4,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Immutable         bool              `protobuf:"varint,5,opt,name=immutable,proto3" json:"immutable,omitempty"`
	Type              string            `protobuf:"bytes,6,opt,name=type,proto3" json:"type,omitempty"`
	CreationTimestamp int64             `protobuf:"varint,7,opt,name=creationTimestamp,proto3" json:"creationTimestamp,omitempty"`
	StringData        map[string]string `protobuf:"bytes,8,rep,name=stringData,proto3" json:"stringData,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Data              map[string][]byte `protobuf:"bytes,9,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ListSecretReply_Secret) Reset() {
	*x = ListSecretReply_Secret{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[178]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSecretReply_Secret) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSecretReply_Secret) ProtoMessage() {}

func (x *ListSecretReply_Secret) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[178]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSecretReply_Secret.ProtoReflect.Descriptor instead.
func (*ListSecretReply_Secret) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{73, 0}
}

func (x *ListSecretReply_Secret) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ListSecretReply_Secret) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ListSecretReply_Secret) GetAnnotations() map[string]string {
	if x != nil {
		return x.Annotations
	}
	return nil
}

func (x *ListSecretReply_Secret) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *ListSecretReply_Secret) GetImmutable() bool {
	if x != nil {
		return x.Immutable
	}
	return false
}

func (x *ListSecretReply_Secret) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ListSecretReply_Secret) GetCreationTimestamp() int64 {
	if x != nil {
		return x.CreationTimestamp
	}
	return 0
}

func (x *ListSecretReply_Secret) GetStringData() map[string]string {
	if x != nil {
		return x.StringData
	}
	return nil
}

func (x *ListSecretReply_Secret) GetData() map[string][]byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type ListNodeReply_Node struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                    string                                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	CreationTimestamp       int64                                  `protobuf:"varint,2,opt,name=creationTimestamp,proto3" json:"creationTimestamp,omitempty"`
	ContainerRuntimeVersion string                                 `protobuf:"bytes,3,opt,name=containerRuntimeVersion,proto3" json:"containerRuntimeVersion,omitempty"`
	KernelVersion           string                                 `protobuf:"bytes,4,opt,name=kernelVersion,proto3" json:"kernelVersion,omitempty"`
	KubeProxyVersion        string                                 `protobuf:"bytes,5,opt,name=kubeProxyVersion,proto3" json:"kubeProxyVersion,omitempty"`
	KubeletVersion          string                                 `protobuf:"bytes,6,opt,name=kubeletVersion,proto3" json:"kubeletVersion,omitempty"`
	KubeletEndpoint         string                                 `protobuf:"bytes,7,opt,name=kubeletEndpoint,proto3" json:"kubeletEndpoint,omitempty"`
	OsImage                 string                                 `protobuf:"bytes,8,opt,name=osImage,proto3" json:"osImage,omitempty"`
	Labels                  map[string]string                      `protobuf:"bytes,9,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Annotations             map[string]string                      `protobuf:"bytes,10,rep,name=annotations,proto3" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Capacity                *ListNodeReply_Node_Capacity           `protobuf:"bytes,11,opt,name=capacity,proto3" json:"capacity,omitempty"`
	Allocatable             *ListNodeReply_Node_Allocatable        `protobuf:"bytes,12,opt,name=allocatable,proto3" json:"allocatable,omitempty"`
	AllocatablePercent      *ListNodeReply_Node_AllocatablePercent `protobuf:"bytes,13,opt,name=allocatablePercent,proto3" json:"allocatablePercent,omitempty"`
}

func (x *ListNodeReply_Node) Reset() {
	*x = ListNodeReply_Node{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[209]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListNodeReply_Node) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNodeReply_Node) ProtoMessage() {}

func (x *ListNodeReply_Node) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[209]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNodeReply_Node.ProtoReflect.Descriptor instead.
func (*ListNodeReply_Node) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{107, 0}
}

func (x *ListNodeReply_Node) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ListNodeReply_Node) GetCreationTimestamp() int64 {
	if x != nil {
		return x.CreationTimestamp
	}
	return 0
}

func (x *ListNodeReply_Node) GetContainerRuntimeVersion() string {
	if x != nil {
		return x.ContainerRuntimeVersion
	}
	return ""
}

func (x *ListNodeReply_Node) GetKernelVersion() string {
	if x != nil {
		return x.KernelVersion
	}
	return ""
}

func (x *ListNodeReply_Node) GetKubeProxyVersion() string {
	if x != nil {
		return x.KubeProxyVersion
	}
	return ""
}

func (x *ListNodeReply_Node) GetKubeletVersion() string {
	if x != nil {
		return x.KubeletVersion
	}
	return ""
}

func (x *ListNodeReply_Node) GetKubeletEndpoint() string {
	if x != nil {
		return x.KubeletEndpoint
	}
	return ""
}

func (x *ListNodeReply_Node) GetOsImage() string {
	if x != nil {
		return x.OsImage
	}
	return ""
}

func (x *ListNodeReply_Node) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *ListNodeReply_Node) GetAnnotations() map[string]string {
	if x != nil {
		return x.Annotations
	}
	return nil
}

func (x *ListNodeReply_Node) GetCapacity() *ListNodeReply_Node_Capacity {
	if x != nil {
		return x.Capacity
	}
	return nil
}

func (x *ListNodeReply_Node) GetAllocatable() *ListNodeReply_Node_Allocatable {
	if x != nil {
		return x.Allocatable
	}
	return nil
}

func (x *ListNodeReply_Node) GetAllocatablePercent() *ListNodeReply_Node_AllocatablePercent {
	if x != nil {
		return x.AllocatablePercent
	}
	return nil
}

type ListNodeReply_Node_Capacity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cpu              int64 `protobuf:"varint,1,opt,name=cpu,proto3" json:"cpu,omitempty"`
	Memory           int64 `protobuf:"varint,2,opt,name=memory,proto3" json:"memory,omitempty"`
	Storage          int64 `protobuf:"varint,3,opt,name=storage,proto3" json:"storage,omitempty"`
	StorageEphemeral int64 `protobuf:"varint,4,opt,name=storageEphemeral,proto3" json:"storageEphemeral,omitempty"`
}

func (x *ListNodeReply_Node_Capacity) Reset() {
	*x = ListNodeReply_Node_Capacity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[212]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListNodeReply_Node_Capacity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNodeReply_Node_Capacity) ProtoMessage() {}

func (x *ListNodeReply_Node_Capacity) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[212]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNodeReply_Node_Capacity.ProtoReflect.Descriptor instead.
func (*ListNodeReply_Node_Capacity) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{107, 0, 2}
}

func (x *ListNodeReply_Node_Capacity) GetCpu() int64 {
	if x != nil {
		return x.Cpu
	}
	return 0
}

func (x *ListNodeReply_Node_Capacity) GetMemory() int64 {
	if x != nil {
		return x.Memory
	}
	return 0
}

func (x *ListNodeReply_Node_Capacity) GetStorage() int64 {
	if x != nil {
		return x.Storage
	}
	return 0
}

func (x *ListNodeReply_Node_Capacity) GetStorageEphemeral() int64 {
	if x != nil {
		return x.StorageEphemeral
	}
	return 0
}

type ListNodeReply_Node_Allocatable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cpu              int64 `protobuf:"varint,1,opt,name=cpu,proto3" json:"cpu,omitempty"`
	Memory           int64 `protobuf:"varint,2,opt,name=memory,proto3" json:"memory,omitempty"`
	Storage          int64 `protobuf:"varint,3,opt,name=storage,proto3" json:"storage,omitempty"`
	StorageEphemeral int64 `protobuf:"varint,4,opt,name=storageEphemeral,proto3" json:"storageEphemeral,omitempty"`
}

func (x *ListNodeReply_Node_Allocatable) Reset() {
	*x = ListNodeReply_Node_Allocatable{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[213]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListNodeReply_Node_Allocatable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNodeReply_Node_Allocatable) ProtoMessage() {}

func (x *ListNodeReply_Node_Allocatable) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[213]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNodeReply_Node_Allocatable.ProtoReflect.Descriptor instead.
func (*ListNodeReply_Node_Allocatable) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{107, 0, 3}
}

func (x *ListNodeReply_Node_Allocatable) GetCpu() int64 {
	if x != nil {
		return x.Cpu
	}
	return 0
}

func (x *ListNodeReply_Node_Allocatable) GetMemory() int64 {
	if x != nil {
		return x.Memory
	}
	return 0
}

func (x *ListNodeReply_Node_Allocatable) GetStorage() int64 {
	if x != nil {
		return x.Storage
	}
	return 0
}

func (x *ListNodeReply_Node_Allocatable) GetStorageEphemeral() int64 {
	if x != nil {
		return x.StorageEphemeral
	}
	return 0
}

type ListNodeReply_Node_AllocatablePercent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cpu              float32 `protobuf:"fixed32,1,opt,name=cpu,proto3" json:"cpu,omitempty"`
	Memory           float32 `protobuf:"fixed32,2,opt,name=memory,proto3" json:"memory,omitempty"`
	Storage          float32 `protobuf:"fixed32,3,opt,name=storage,proto3" json:"storage,omitempty"`
	StorageEphemeral float32 `protobuf:"fixed32,4,opt,name=storageEphemeral,proto3" json:"storageEphemeral,omitempty"`
}

func (x *ListNodeReply_Node_AllocatablePercent) Reset() {
	*x = ListNodeReply_Node_AllocatablePercent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[214]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListNodeReply_Node_AllocatablePercent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNodeReply_Node_AllocatablePercent) ProtoMessage() {}

func (x *ListNodeReply_Node_AllocatablePercent) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[214]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNodeReply_Node_AllocatablePercent.ProtoReflect.Descriptor instead.
func (*ListNodeReply_Node_AllocatablePercent) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{107, 0, 4}
}

func (x *ListNodeReply_Node_AllocatablePercent) GetCpu() float32 {
	if x != nil {
		return x.Cpu
	}
	return 0
}

func (x *ListNodeReply_Node_AllocatablePercent) GetMemory() float32 {
	if x != nil {
		return x.Memory
	}
	return 0
}

func (x *ListNodeReply_Node_AllocatablePercent) GetStorage() float32 {
	if x != nil {
		return x.Storage
	}
	return 0
}

func (x *ListNodeReply_Node_AllocatablePercent) GetStorageEphemeral() float32 {
	if x != nil {
		return x.StorageEphemeral
	}
	return 0
}

type GetNodeReply_Capacity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cpu              int64 `protobuf:"varint,1,opt,name=cpu,proto3" json:"cpu,omitempty"`
	Memory           int64 `protobuf:"varint,2,opt,name=memory,proto3" json:"memory,omitempty"`
	Storage          int64 `protobuf:"varint,3,opt,name=storage,proto3" json:"storage,omitempty"`
	StorageEphemeral int64 `protobuf:"varint,4,opt,name=storageEphemeral,proto3" json:"storageEphemeral,omitempty"`
}

func (x *GetNodeReply_Capacity) Reset() {
	*x = GetNodeReply_Capacity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[217]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNodeReply_Capacity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNodeReply_Capacity) ProtoMessage() {}

func (x *GetNodeReply_Capacity) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[217]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNodeReply_Capacity.ProtoReflect.Descriptor instead.
func (*GetNodeReply_Capacity) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{109, 2}
}

func (x *GetNodeReply_Capacity) GetCpu() int64 {
	if x != nil {
		return x.Cpu
	}
	return 0
}

func (x *GetNodeReply_Capacity) GetMemory() int64 {
	if x != nil {
		return x.Memory
	}
	return 0
}

func (x *GetNodeReply_Capacity) GetStorage() int64 {
	if x != nil {
		return x.Storage
	}
	return 0
}

func (x *GetNodeReply_Capacity) GetStorageEphemeral() int64 {
	if x != nil {
		return x.StorageEphemeral
	}
	return 0
}

type GetNodeReply_Allocatable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cpu              int64 `protobuf:"varint,1,opt,name=cpu,proto3" json:"cpu,omitempty"`
	Memory           int64 `protobuf:"varint,2,opt,name=memory,proto3" json:"memory,omitempty"`
	Storage          int64 `protobuf:"varint,3,opt,name=storage,proto3" json:"storage,omitempty"`
	StorageEphemeral int64 `protobuf:"varint,4,opt,name=storageEphemeral,proto3" json:"storageEphemeral,omitempty"`
}

func (x *GetNodeReply_Allocatable) Reset() {
	*x = GetNodeReply_Allocatable{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[218]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNodeReply_Allocatable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNodeReply_Allocatable) ProtoMessage() {}

func (x *GetNodeReply_Allocatable) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[218]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNodeReply_Allocatable.ProtoReflect.Descriptor instead.
func (*GetNodeReply_Allocatable) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{109, 3}
}

func (x *GetNodeReply_Allocatable) GetCpu() int64 {
	if x != nil {
		return x.Cpu
	}
	return 0
}

func (x *GetNodeReply_Allocatable) GetMemory() int64 {
	if x != nil {
		return x.Memory
	}
	return 0
}

func (x *GetNodeReply_Allocatable) GetStorage() int64 {
	if x != nil {
		return x.Storage
	}
	return 0
}

func (x *GetNodeReply_Allocatable) GetStorageEphemeral() int64 {
	if x != nil {
		return x.StorageEphemeral
	}
	return 0
}

type GetNodeReply_AllocatablePercent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cpu              float32 `protobuf:"fixed32,1,opt,name=cpu,proto3" json:"cpu,omitempty"`
	Memory           float32 `protobuf:"fixed32,2,opt,name=memory,proto3" json:"memory,omitempty"`
	Storage          float32 `protobuf:"fixed32,3,opt,name=storage,proto3" json:"storage,omitempty"`
	StorageEphemeral float32 `protobuf:"fixed32,4,opt,name=storageEphemeral,proto3" json:"storageEphemeral,omitempty"`
}

func (x *GetNodeReply_AllocatablePercent) Reset() {
	*x = GetNodeReply_AllocatablePercent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[219]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNodeReply_AllocatablePercent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNodeReply_AllocatablePercent) ProtoMessage() {}

func (x *GetNodeReply_AllocatablePercent) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[219]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNodeReply_AllocatablePercent.ProtoReflect.Descriptor instead.
func (*GetNodeReply_AllocatablePercent) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{109, 4}
}

func (x *GetNodeReply_AllocatablePercent) GetCpu() float32 {
	if x != nil {
		return x.Cpu
	}
	return 0
}

func (x *GetNodeReply_AllocatablePercent) GetMemory() float32 {
	if x != nil {
		return x.Memory
	}
	return 0
}

func (x *GetNodeReply_AllocatablePercent) GetStorage() float32 {
	if x != nil {
		return x.Storage
	}
	return 0
}

func (x *GetNodeReply_AllocatablePercent) GetStorageEphemeral() float32 {
	if x != nil {
		return x.StorageEphemeral
	}
	return 0
}

type GetPodReply_Container struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                     string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Image                    string `protobuf:"bytes,2,opt,name=image,proto3" json:"image,omitempty"`
	WorkingDir               string `protobuf:"bytes,3,opt,name=workingDir,proto3" json:"workingDir,omitempty"`
	Command                  string `protobuf:"bytes,4,opt,name=command,proto3" json:"command,omitempty"`
	SecurityContext          string `protobuf:"bytes,5,opt,name=securityContext,proto3" json:"securityContext,omitempty"`
	RequestsCpu              int64  `protobuf:"varint,6,opt,name=requestsCpu,proto3" json:"requestsCpu,omitempty"`
	RequestsMemory           int64  `protobuf:"varint,7,opt,name=requestsMemory,proto3" json:"requestsMemory,omitempty"`
	RequestsStorage          int64  `protobuf:"varint,8,opt,name=requestsStorage,proto3" json:"requestsStorage,omitempty"`
	RequestsStorageEphemeral int64  `protobuf:"varint,9,opt,name=requestsStorageEphemeral,proto3" json:"requestsStorageEphemeral,omitempty"`
	LimitCpu                 int64  `protobuf:"varint,10,opt,name=limitCpu,proto3" json:"limitCpu,omitempty"`
	LimitMemory              int64  `protobuf:"varint,11,opt,name=limitMemory,proto3" json:"limitMemory,omitempty"`
	LimitStorage             int64  `protobuf:"varint,12,opt,name=limitStorage,proto3" json:"limitStorage,omitempty"`
	LimitStorageEphemeral    int64  `protobuf:"varint,13,opt,name=limitStorageEphemeral,proto3" json:"limitStorageEphemeral,omitempty"`
	StartupProbe             string `protobuf:"bytes,14,opt,name=startupProbe,proto3" json:"startupProbe,omitempty"`
	LivenessProbe            string `protobuf:"bytes,15,opt,name=livenessProbe,proto3" json:"livenessProbe,omitempty"`
	ReadinessProbe           string `protobuf:"bytes,16,opt,name=readinessProbe,proto3" json:"readinessProbe,omitempty"`
	RestartCount             int32  `protobuf:"varint,17,opt,name=restartCount,proto3" json:"restartCount,omitempty"`
	Ready                    bool   `protobuf:"varint,18,opt,name=ready,proto3" json:"ready,omitempty"`
}

func (x *GetPodReply_Container) Reset() {
	*x = GetPodReply_Container{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[222]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPodReply_Container) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPodReply_Container) ProtoMessage() {}

func (x *GetPodReply_Container) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[222]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPodReply_Container.ProtoReflect.Descriptor instead.
func (*GetPodReply_Container) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{111, 2}
}

func (x *GetPodReply_Container) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetPodReply_Container) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *GetPodReply_Container) GetWorkingDir() string {
	if x != nil {
		return x.WorkingDir
	}
	return ""
}

func (x *GetPodReply_Container) GetCommand() string {
	if x != nil {
		return x.Command
	}
	return ""
}

func (x *GetPodReply_Container) GetSecurityContext() string {
	if x != nil {
		return x.SecurityContext
	}
	return ""
}

func (x *GetPodReply_Container) GetRequestsCpu() int64 {
	if x != nil {
		return x.RequestsCpu
	}
	return 0
}

func (x *GetPodReply_Container) GetRequestsMemory() int64 {
	if x != nil {
		return x.RequestsMemory
	}
	return 0
}

func (x *GetPodReply_Container) GetRequestsStorage() int64 {
	if x != nil {
		return x.RequestsStorage
	}
	return 0
}

func (x *GetPodReply_Container) GetRequestsStorageEphemeral() int64 {
	if x != nil {
		return x.RequestsStorageEphemeral
	}
	return 0
}

func (x *GetPodReply_Container) GetLimitCpu() int64 {
	if x != nil {
		return x.LimitCpu
	}
	return 0
}

func (x *GetPodReply_Container) GetLimitMemory() int64 {
	if x != nil {
		return x.LimitMemory
	}
	return 0
}

func (x *GetPodReply_Container) GetLimitStorage() int64 {
	if x != nil {
		return x.LimitStorage
	}
	return 0
}

func (x *GetPodReply_Container) GetLimitStorageEphemeral() int64 {
	if x != nil {
		return x.LimitStorageEphemeral
	}
	return 0
}

func (x *GetPodReply_Container) GetStartupProbe() string {
	if x != nil {
		return x.StartupProbe
	}
	return ""
}

func (x *GetPodReply_Container) GetLivenessProbe() string {
	if x != nil {
		return x.LivenessProbe
	}
	return ""
}

func (x *GetPodReply_Container) GetReadinessProbe() string {
	if x != nil {
		return x.ReadinessProbe
	}
	return ""
}

func (x *GetPodReply_Container) GetRestartCount() int32 {
	if x != nil {
		return x.RestartCount
	}
	return 0
}

func (x *GetPodReply_Container) GetReady() bool {
	if x != nil {
		return x.Ready
	}
	return false
}

type ListPodReply_Pod struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace         string                        `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name              string                        `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	CreationTimestamp int64                         `protobuf:"varint,3,opt,name=creationTimestamp,proto3" json:"creationTimestamp,omitempty"`
	Reason            string                        `protobuf:"bytes,4,opt,name=reason,proto3" json:"reason,omitempty"`
	Phase             string                        `protobuf:"bytes,5,opt,name=phase,proto3" json:"phase,omitempty"`
	HostIP            string                        `protobuf:"bytes,6,opt,name=hostIP,proto3" json:"hostIP,omitempty"`
	PodIP             string                        `protobuf:"bytes,7,opt,name=podIP,proto3" json:"podIP,omitempty"`
	Labels            map[string]string             `protobuf:"bytes,8,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Envs              map[string]string             `protobuf:"bytes,9,rep,name=envs,proto3" json:"envs,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Container         []*ListPodReply_Pod_Container `protobuf:"bytes,10,rep,name=container,proto3" json:"container,omitempty"`
}

func (x *ListPodReply_Pod) Reset() {
	*x = ListPodReply_Pod{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[223]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPodReply_Pod) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPodReply_Pod) ProtoMessage() {}

func (x *ListPodReply_Pod) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[223]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPodReply_Pod.ProtoReflect.Descriptor instead.
func (*ListPodReply_Pod) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{113, 0}
}

func (x *ListPodReply_Pod) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ListPodReply_Pod) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ListPodReply_Pod) GetCreationTimestamp() int64 {
	if x != nil {
		return x.CreationTimestamp
	}
	return 0
}

func (x *ListPodReply_Pod) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *ListPodReply_Pod) GetPhase() string {
	if x != nil {
		return x.Phase
	}
	return ""
}

func (x *ListPodReply_Pod) GetHostIP() string {
	if x != nil {
		return x.HostIP
	}
	return ""
}

func (x *ListPodReply_Pod) GetPodIP() string {
	if x != nil {
		return x.PodIP
	}
	return ""
}

func (x *ListPodReply_Pod) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *ListPodReply_Pod) GetEnvs() map[string]string {
	if x != nil {
		return x.Envs
	}
	return nil
}

func (x *ListPodReply_Pod) GetContainer() []*ListPodReply_Pod_Container {
	if x != nil {
		return x.Container
	}
	return nil
}

type ListPodReply_Pod_Container struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                     string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Image                    string `protobuf:"bytes,2,opt,name=image,proto3" json:"image,omitempty"`
	WorkingDir               string `protobuf:"bytes,3,opt,name=workingDir,proto3" json:"workingDir,omitempty"`
	Command                  string `protobuf:"bytes,4,opt,name=command,proto3" json:"command,omitempty"`
	SecurityContext          string `protobuf:"bytes,5,opt,name=securityContext,proto3" json:"securityContext,omitempty"`
	RequestsCpu              int64  `protobuf:"varint,6,opt,name=requestsCpu,proto3" json:"requestsCpu,omitempty"`
	RequestsMemory           int64  `protobuf:"varint,7,opt,name=requestsMemory,proto3" json:"requestsMemory,omitempty"`
	RequestsStorage          int64  `protobuf:"varint,8,opt,name=requestsStorage,proto3" json:"requestsStorage,omitempty"`
	RequestsStorageEphemeral int64  `protobuf:"varint,9,opt,name=requestsStorageEphemeral,proto3" json:"requestsStorageEphemeral,omitempty"`
	LimitCpu                 int64  `protobuf:"varint,10,opt,name=limitCpu,proto3" json:"limitCpu,omitempty"`
	LimitMemory              int64  `protobuf:"varint,11,opt,name=limitMemory,proto3" json:"limitMemory,omitempty"`
	LimitStorage             int64  `protobuf:"varint,12,opt,name=limitStorage,proto3" json:"limitStorage,omitempty"`
	LimitStorageEphemeral    int64  `protobuf:"varint,13,opt,name=limitStorageEphemeral,proto3" json:"limitStorageEphemeral,omitempty"`
	StartupProbe             string `protobuf:"bytes,14,opt,name=startupProbe,proto3" json:"startupProbe,omitempty"`
	LivenessProbe            string `protobuf:"bytes,15,opt,name=livenessProbe,proto3" json:"livenessProbe,omitempty"`
	ReadinessProbe           string `protobuf:"bytes,16,opt,name=readinessProbe,proto3" json:"readinessProbe,omitempty"`
	RestartCount             int32  `protobuf:"varint,17,opt,name=restartCount,proto3" json:"restartCount,omitempty"`
	Ready                    bool   `protobuf:"varint,18,opt,name=ready,proto3" json:"ready,omitempty"`
}

func (x *ListPodReply_Pod_Container) Reset() {
	*x = ListPodReply_Pod_Container{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[226]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPodReply_Pod_Container) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPodReply_Pod_Container) ProtoMessage() {}

func (x *ListPodReply_Pod_Container) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[226]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPodReply_Pod_Container.ProtoReflect.Descriptor instead.
func (*ListPodReply_Pod_Container) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{113, 0, 2}
}

func (x *ListPodReply_Pod_Container) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ListPodReply_Pod_Container) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *ListPodReply_Pod_Container) GetWorkingDir() string {
	if x != nil {
		return x.WorkingDir
	}
	return ""
}

func (x *ListPodReply_Pod_Container) GetCommand() string {
	if x != nil {
		return x.Command
	}
	return ""
}

func (x *ListPodReply_Pod_Container) GetSecurityContext() string {
	if x != nil {
		return x.SecurityContext
	}
	return ""
}

func (x *ListPodReply_Pod_Container) GetRequestsCpu() int64 {
	if x != nil {
		return x.RequestsCpu
	}
	return 0
}

func (x *ListPodReply_Pod_Container) GetRequestsMemory() int64 {
	if x != nil {
		return x.RequestsMemory
	}
	return 0
}

func (x *ListPodReply_Pod_Container) GetRequestsStorage() int64 {
	if x != nil {
		return x.RequestsStorage
	}
	return 0
}

func (x *ListPodReply_Pod_Container) GetRequestsStorageEphemeral() int64 {
	if x != nil {
		return x.RequestsStorageEphemeral
	}
	return 0
}

func (x *ListPodReply_Pod_Container) GetLimitCpu() int64 {
	if x != nil {
		return x.LimitCpu
	}
	return 0
}

func (x *ListPodReply_Pod_Container) GetLimitMemory() int64 {
	if x != nil {
		return x.LimitMemory
	}
	return 0
}

func (x *ListPodReply_Pod_Container) GetLimitStorage() int64 {
	if x != nil {
		return x.LimitStorage
	}
	return 0
}

func (x *ListPodReply_Pod_Container) GetLimitStorageEphemeral() int64 {
	if x != nil {
		return x.LimitStorageEphemeral
	}
	return 0
}

func (x *ListPodReply_Pod_Container) GetStartupProbe() string {
	if x != nil {
		return x.StartupProbe
	}
	return ""
}

func (x *ListPodReply_Pod_Container) GetLivenessProbe() string {
	if x != nil {
		return x.LivenessProbe
	}
	return ""
}

func (x *ListPodReply_Pod_Container) GetReadinessProbe() string {
	if x != nil {
		return x.ReadinessProbe
	}
	return ""
}

func (x *ListPodReply_Pod_Container) GetRestartCount() int32 {
	if x != nil {
		return x.RestartCount
	}
	return 0
}

func (x *ListPodReply_Pod_Container) GetReady() bool {
	if x != nil {
		return x.Ready
	}
	return false
}

type SearchPodReply_Pod struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace         string                          `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name              string                          `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	CreationTimestamp int64                           `protobuf:"varint,3,opt,name=creationTimestamp,proto3" json:"creationTimestamp,omitempty"`
	Reason            string                          `protobuf:"bytes,4,opt,name=reason,proto3" json:"reason,omitempty"`
	Phase             string                          `protobuf:"bytes,5,opt,name=phase,proto3" json:"phase,omitempty"`
	HostIP            string                          `protobuf:"bytes,6,opt,name=hostIP,proto3" json:"hostIP,omitempty"`
	PodIP             string                          `protobuf:"bytes,7,opt,name=podIP,proto3" json:"podIP,omitempty"`
	Labels            map[string]string               `protobuf:"bytes,8,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Envs              map[string]string               `protobuf:"bytes,9,rep,name=envs,proto3" json:"envs,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Container         []*SearchPodReply_Pod_Container `protobuf:"bytes,10,rep,name=container,proto3" json:"container,omitempty"`
}

func (x *SearchPodReply_Pod) Reset() {
	*x = SearchPodReply_Pod{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[227]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchPodReply_Pod) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchPodReply_Pod) ProtoMessage() {}

func (x *SearchPodReply_Pod) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[227]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchPodReply_Pod.ProtoReflect.Descriptor instead.
func (*SearchPodReply_Pod) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{115, 0}
}

func (x *SearchPodReply_Pod) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *SearchPodReply_Pod) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SearchPodReply_Pod) GetCreationTimestamp() int64 {
	if x != nil {
		return x.CreationTimestamp
	}
	return 0
}

func (x *SearchPodReply_Pod) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *SearchPodReply_Pod) GetPhase() string {
	if x != nil {
		return x.Phase
	}
	return ""
}

func (x *SearchPodReply_Pod) GetHostIP() string {
	if x != nil {
		return x.HostIP
	}
	return ""
}

func (x *SearchPodReply_Pod) GetPodIP() string {
	if x != nil {
		return x.PodIP
	}
	return ""
}

func (x *SearchPodReply_Pod) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *SearchPodReply_Pod) GetEnvs() map[string]string {
	if x != nil {
		return x.Envs
	}
	return nil
}

func (x *SearchPodReply_Pod) GetContainer() []*SearchPodReply_Pod_Container {
	if x != nil {
		return x.Container
	}
	return nil
}

type SearchPodReply_Pod_Container struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                     string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Image                    string `protobuf:"bytes,2,opt,name=image,proto3" json:"image,omitempty"`
	WorkingDir               string `protobuf:"bytes,3,opt,name=workingDir,proto3" json:"workingDir,omitempty"`
	Command                  string `protobuf:"bytes,4,opt,name=command,proto3" json:"command,omitempty"`
	SecurityContext          string `protobuf:"bytes,5,opt,name=securityContext,proto3" json:"securityContext,omitempty"`
	RequestsCpu              int64  `protobuf:"varint,6,opt,name=requestsCpu,proto3" json:"requestsCpu,omitempty"`
	RequestsMemory           int64  `protobuf:"varint,7,opt,name=requestsMemory,proto3" json:"requestsMemory,omitempty"`
	RequestsStorage          int64  `protobuf:"varint,8,opt,name=requestsStorage,proto3" json:"requestsStorage,omitempty"`
	RequestsStorageEphemeral int64  `protobuf:"varint,9,opt,name=requestsStorageEphemeral,proto3" json:"requestsStorageEphemeral,omitempty"`
	LimitCpu                 int64  `protobuf:"varint,10,opt,name=limitCpu,proto3" json:"limitCpu,omitempty"`
	LimitMemory              int64  `protobuf:"varint,11,opt,name=limitMemory,proto3" json:"limitMemory,omitempty"`
	LimitStorage             int64  `protobuf:"varint,12,opt,name=limitStorage,proto3" json:"limitStorage,omitempty"`
	LimitStorageEphemeral    int64  `protobuf:"varint,13,opt,name=limitStorageEphemeral,proto3" json:"limitStorageEphemeral,omitempty"`
	StartupProbe             string `protobuf:"bytes,14,opt,name=startupProbe,proto3" json:"startupProbe,omitempty"`
	LivenessProbe            string `protobuf:"bytes,15,opt,name=livenessProbe,proto3" json:"livenessProbe,omitempty"`
	ReadinessProbe           string `protobuf:"bytes,16,opt,name=readinessProbe,proto3" json:"readinessProbe,omitempty"`
	RestartCount             int32  `protobuf:"varint,17,opt,name=restartCount,proto3" json:"restartCount,omitempty"`
	Ready                    bool   `protobuf:"varint,18,opt,name=ready,proto3" json:"ready,omitempty"`
}

func (x *SearchPodReply_Pod_Container) Reset() {
	*x = SearchPodReply_Pod_Container{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[230]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchPodReply_Pod_Container) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchPodReply_Pod_Container) ProtoMessage() {}

func (x *SearchPodReply_Pod_Container) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[230]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchPodReply_Pod_Container.ProtoReflect.Descriptor instead.
func (*SearchPodReply_Pod_Container) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{115, 0, 2}
}

func (x *SearchPodReply_Pod_Container) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SearchPodReply_Pod_Container) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *SearchPodReply_Pod_Container) GetWorkingDir() string {
	if x != nil {
		return x.WorkingDir
	}
	return ""
}

func (x *SearchPodReply_Pod_Container) GetCommand() string {
	if x != nil {
		return x.Command
	}
	return ""
}

func (x *SearchPodReply_Pod_Container) GetSecurityContext() string {
	if x != nil {
		return x.SecurityContext
	}
	return ""
}

func (x *SearchPodReply_Pod_Container) GetRequestsCpu() int64 {
	if x != nil {
		return x.RequestsCpu
	}
	return 0
}

func (x *SearchPodReply_Pod_Container) GetRequestsMemory() int64 {
	if x != nil {
		return x.RequestsMemory
	}
	return 0
}

func (x *SearchPodReply_Pod_Container) GetRequestsStorage() int64 {
	if x != nil {
		return x.RequestsStorage
	}
	return 0
}

func (x *SearchPodReply_Pod_Container) GetRequestsStorageEphemeral() int64 {
	if x != nil {
		return x.RequestsStorageEphemeral
	}
	return 0
}

func (x *SearchPodReply_Pod_Container) GetLimitCpu() int64 {
	if x != nil {
		return x.LimitCpu
	}
	return 0
}

func (x *SearchPodReply_Pod_Container) GetLimitMemory() int64 {
	if x != nil {
		return x.LimitMemory
	}
	return 0
}

func (x *SearchPodReply_Pod_Container) GetLimitStorage() int64 {
	if x != nil {
		return x.LimitStorage
	}
	return 0
}

func (x *SearchPodReply_Pod_Container) GetLimitStorageEphemeral() int64 {
	if x != nil {
		return x.LimitStorageEphemeral
	}
	return 0
}

func (x *SearchPodReply_Pod_Container) GetStartupProbe() string {
	if x != nil {
		return x.StartupProbe
	}
	return ""
}

func (x *SearchPodReply_Pod_Container) GetLivenessProbe() string {
	if x != nil {
		return x.LivenessProbe
	}
	return ""
}

func (x *SearchPodReply_Pod_Container) GetReadinessProbe() string {
	if x != nil {
		return x.ReadinessProbe
	}
	return ""
}

func (x *SearchPodReply_Pod_Container) GetRestartCount() int32 {
	if x != nil {
		return x.RestartCount
	}
	return 0
}

func (x *SearchPodReply_Pod_Container) GetReady() bool {
	if x != nil {
		return x.Ready
	}
	return false
}

type ListServiceReply_Service struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name            string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Namespace       string            `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	ResourceVersion string            `protobuf:"bytes,3,opt,name=resourceVersion,proto3" json:"resourceVersion,omitempty"`
	Annotations     map[string]string `protobuf:"bytes,4,rep,name=annotations,proto3" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ClusterIP       string            `protobuf:"bytes,5,opt,name=clusterIP,proto3" json:"clusterIP,omitempty"`
	SessionAffinity string            `protobuf:"bytes,6,opt,name=sessionAffinity,proto3" json:"sessionAffinity,omitempty"`
	Type            string            `protobuf:"bytes,7,opt,name=type,proto3" json:"type,omitempty"`
	Labels          map[string]string `protobuf:"bytes,8,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Ports           []*ServicePort    `protobuf:"bytes,9,rep,name=ports,proto3" json:"ports,omitempty"`
	ExternalIPs     []string          `protobuf:"bytes,10,rep,name=ExternalIPs,proto3" json:"ExternalIPs,omitempty"`
}

func (x *ListServiceReply_Service) Reset() {
	*x = ListServiceReply_Service{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[233]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListServiceReply_Service) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListServiceReply_Service) ProtoMessage() {}

func (x *ListServiceReply_Service) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[233]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListServiceReply_Service.ProtoReflect.Descriptor instead.
func (*ListServiceReply_Service) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{126, 0}
}

func (x *ListServiceReply_Service) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ListServiceReply_Service) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ListServiceReply_Service) GetResourceVersion() string {
	if x != nil {
		return x.ResourceVersion
	}
	return ""
}

func (x *ListServiceReply_Service) GetAnnotations() map[string]string {
	if x != nil {
		return x.Annotations
	}
	return nil
}

func (x *ListServiceReply_Service) GetClusterIP() string {
	if x != nil {
		return x.ClusterIP
	}
	return ""
}

func (x *ListServiceReply_Service) GetSessionAffinity() string {
	if x != nil {
		return x.SessionAffinity
	}
	return ""
}

func (x *ListServiceReply_Service) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ListServiceReply_Service) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *ListServiceReply_Service) GetPorts() []*ServicePort {
	if x != nil {
		return x.Ports
	}
	return nil
}

func (x *ListServiceReply_Service) GetExternalIPs() []string {
	if x != nil {
		return x.ExternalIPs
	}
	return nil
}

type CreateIngressReq_Service struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TlsSecret string                                    `protobuf:"bytes,1,opt,name=tlsSecret,proto3" json:"tlsSecret,omitempty"`
	Path      map[string]*CreateIngressReq_Service_Path `protobuf:"bytes,5,rep,name=path,proto3" json:"path,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *CreateIngressReq_Service) Reset() {
	*x = CreateIngressReq_Service{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[241]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateIngressReq_Service) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateIngressReq_Service) ProtoMessage() {}

func (x *CreateIngressReq_Service) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[241]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateIngressReq_Service.ProtoReflect.Descriptor instead.
func (*CreateIngressReq_Service) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{131, 3}
}

func (x *CreateIngressReq_Service) GetTlsSecret() string {
	if x != nil {
		return x.TlsSecret
	}
	return ""
}

func (x *CreateIngressReq_Service) GetPath() map[string]*CreateIngressReq_Service_Path {
	if x != nil {
		return x.Path
	}
	return nil
}

type CreateIngressReq_Service_Path struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PathType    string `protobuf:"bytes,1,opt,name=pathType,proto3" json:"pathType,omitempty"`
	ServiceName string `protobuf:"bytes,2,opt,name=serviceName,proto3" json:"serviceName,omitempty"`
	ServicePort int32  `protobuf:"varint,3,opt,name=servicePort,proto3" json:"servicePort,omitempty"`
}

func (x *CreateIngressReq_Service_Path) Reset() {
	*x = CreateIngressReq_Service_Path{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[243]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateIngressReq_Service_Path) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateIngressReq_Service_Path) ProtoMessage() {}

func (x *CreateIngressReq_Service_Path) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[243]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateIngressReq_Service_Path.ProtoReflect.Descriptor instead.
func (*CreateIngressReq_Service_Path) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{131, 3, 1}
}

func (x *CreateIngressReq_Service_Path) GetPathType() string {
	if x != nil {
		return x.PathType
	}
	return ""
}

func (x *CreateIngressReq_Service_Path) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

func (x *CreateIngressReq_Service_Path) GetServicePort() int32 {
	if x != nil {
		return x.ServicePort
	}
	return 0
}

type UpdateIngressReq_Service struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TlsSecret string                                    `protobuf:"bytes,1,opt,name=tlsSecret,proto3" json:"tlsSecret,omitempty"`
	Path      map[string]*UpdateIngressReq_Service_Path `protobuf:"bytes,5,rep,name=path,proto3" json:"path,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *UpdateIngressReq_Service) Reset() {
	*x = UpdateIngressReq_Service{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[247]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateIngressReq_Service) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateIngressReq_Service) ProtoMessage() {}

func (x *UpdateIngressReq_Service) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[247]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateIngressReq_Service.ProtoReflect.Descriptor instead.
func (*UpdateIngressReq_Service) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{133, 3}
}

func (x *UpdateIngressReq_Service) GetTlsSecret() string {
	if x != nil {
		return x.TlsSecret
	}
	return ""
}

func (x *UpdateIngressReq_Service) GetPath() map[string]*UpdateIngressReq_Service_Path {
	if x != nil {
		return x.Path
	}
	return nil
}

type UpdateIngressReq_Service_Path struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PathType    string `protobuf:"bytes,1,opt,name=pathType,proto3" json:"pathType,omitempty"`
	ServiceName string `protobuf:"bytes,2,opt,name=serviceName,proto3" json:"serviceName,omitempty"`
	ServicePort int32  `protobuf:"varint,3,opt,name=servicePort,proto3" json:"servicePort,omitempty"`
}

func (x *UpdateIngressReq_Service_Path) Reset() {
	*x = UpdateIngressReq_Service_Path{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[249]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateIngressReq_Service_Path) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateIngressReq_Service_Path) ProtoMessage() {}

func (x *UpdateIngressReq_Service_Path) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[249]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateIngressReq_Service_Path.ProtoReflect.Descriptor instead.
func (*UpdateIngressReq_Service_Path) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{133, 3, 1}
}

func (x *UpdateIngressReq_Service_Path) GetPathType() string {
	if x != nil {
		return x.PathType
	}
	return ""
}

func (x *UpdateIngressReq_Service_Path) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

func (x *UpdateIngressReq_Service_Path) GetServicePort() int32 {
	if x != nil {
		return x.ServicePort
	}
	return 0
}

type ListIngressReply_Ingress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace   string            `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name        string            `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Annotations map[string]string `protobuf:"bytes,3,rep,name=annotations,proto3" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Labels      map[string]string `protobuf:"bytes,4,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// map[hostname]Service
	Service map[string]*ListIngressReply_Ingress_Service `protobuf:"bytes,5,rep,name=service,proto3" json:"service,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ListIngressReply_Ingress) Reset() {
	*x = ListIngressReply_Ingress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[250]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListIngressReply_Ingress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListIngressReply_Ingress) ProtoMessage() {}

func (x *ListIngressReply_Ingress) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[250]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListIngressReply_Ingress.ProtoReflect.Descriptor instead.
func (*ListIngressReply_Ingress) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{136, 0}
}

func (x *ListIngressReply_Ingress) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ListIngressReply_Ingress) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ListIngressReply_Ingress) GetAnnotations() map[string]string {
	if x != nil {
		return x.Annotations
	}
	return nil
}

func (x *ListIngressReply_Ingress) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *ListIngressReply_Ingress) GetService() map[string]*ListIngressReply_Ingress_Service {
	if x != nil {
		return x.Service
	}
	return nil
}

type ListIngressReply_Ingress_Service struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TlsSecret string                                            `protobuf:"bytes,1,opt,name=tlsSecret,proto3" json:"tlsSecret,omitempty"`
	Path      map[string]*ListIngressReply_Ingress_Service_Path `protobuf:"bytes,5,rep,name=path,proto3" json:"path,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ListIngressReply_Ingress_Service) Reset() {
	*x = ListIngressReply_Ingress_Service{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[254]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListIngressReply_Ingress_Service) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListIngressReply_Ingress_Service) ProtoMessage() {}

func (x *ListIngressReply_Ingress_Service) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[254]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListIngressReply_Ingress_Service.ProtoReflect.Descriptor instead.
func (*ListIngressReply_Ingress_Service) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{136, 0, 3}
}

func (x *ListIngressReply_Ingress_Service) GetTlsSecret() string {
	if x != nil {
		return x.TlsSecret
	}
	return ""
}

func (x *ListIngressReply_Ingress_Service) GetPath() map[string]*ListIngressReply_Ingress_Service_Path {
	if x != nil {
		return x.Path
	}
	return nil
}

type ListIngressReply_Ingress_Service_Path struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PathType    string `protobuf:"bytes,1,opt,name=pathType,proto3" json:"pathType,omitempty"`
	ServiceName string `protobuf:"bytes,2,opt,name=serviceName,proto3" json:"serviceName,omitempty"`
	ServicePort int32  `protobuf:"varint,3,opt,name=servicePort,proto3" json:"servicePort,omitempty"`
}

func (x *ListIngressReply_Ingress_Service_Path) Reset() {
	*x = ListIngressReply_Ingress_Service_Path{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[256]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListIngressReply_Ingress_Service_Path) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListIngressReply_Ingress_Service_Path) ProtoMessage() {}

func (x *ListIngressReply_Ingress_Service_Path) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[256]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListIngressReply_Ingress_Service_Path.ProtoReflect.Descriptor instead.
func (*ListIngressReply_Ingress_Service_Path) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{136, 0, 3, 1}
}

func (x *ListIngressReply_Ingress_Service_Path) GetPathType() string {
	if x != nil {
		return x.PathType
	}
	return ""
}

func (x *ListIngressReply_Ingress_Service_Path) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

func (x *ListIngressReply_Ingress_Service_Path) GetServicePort() int32 {
	if x != nil {
		return x.ServicePort
	}
	return 0
}

type GetIngressReply_Service struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TlsSecret string                                   `protobuf:"bytes,1,opt,name=tlsSecret,proto3" json:"tlsSecret,omitempty"`
	Path      map[string]*GetIngressReply_Service_Path `protobuf:"bytes,5,rep,name=path,proto3" json:"path,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GetIngressReply_Service) Reset() {
	*x = GetIngressReply_Service{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[260]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIngressReply_Service) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIngressReply_Service) ProtoMessage() {}

func (x *GetIngressReply_Service) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[260]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIngressReply_Service.ProtoReflect.Descriptor instead.
func (*GetIngressReply_Service) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{138, 3}
}

func (x *GetIngressReply_Service) GetTlsSecret() string {
	if x != nil {
		return x.TlsSecret
	}
	return ""
}

func (x *GetIngressReply_Service) GetPath() map[string]*GetIngressReply_Service_Path {
	if x != nil {
		return x.Path
	}
	return nil
}

type GetIngressReply_Service_Path struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PathType    string `protobuf:"bytes,1,opt,name=pathType,proto3" json:"pathType,omitempty"`
	ServiceName string `protobuf:"bytes,2,opt,name=serviceName,proto3" json:"serviceName,omitempty"`
	ServicePort int32  `protobuf:"varint,3,opt,name=servicePort,proto3" json:"servicePort,omitempty"`
}

func (x *GetIngressReply_Service_Path) Reset() {
	*x = GetIngressReply_Service_Path{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[262]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIngressReply_Service_Path) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIngressReply_Service_Path) ProtoMessage() {}

func (x *GetIngressReply_Service_Path) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[262]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIngressReply_Service_Path.ProtoReflect.Descriptor instead.
func (*GetIngressReply_Service_Path) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{138, 3, 1}
}

func (x *GetIngressReply_Service_Path) GetPathType() string {
	if x != nil {
		return x.PathType
	}
	return ""
}

func (x *GetIngressReply_Service_Path) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

func (x *GetIngressReply_Service_Path) GetServicePort() int32 {
	if x != nil {
		return x.ServicePort
	}
	return 0
}

type ListPersistentVolumeReply_PersistentVolume struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name              string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	CreationTimestamp int64             `protobuf:"varint,2,opt,name=creationTimestamp,proto3" json:"creationTimestamp,omitempty"`
	Labels            map[string]string `protobuf:"bytes,3,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Annotations       map[string]string `protobuf:"bytes,4,rep,name=annotations,proto3" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Phase             string            `protobuf:"bytes,5,opt,name=phase,proto3" json:"phase,omitempty"`
	Reason            string            `protobuf:"bytes,6,opt,name=reason,proto3" json:"reason,omitempty"`
}

func (x *ListPersistentVolumeReply_PersistentVolume) Reset() {
	*x = ListPersistentVolumeReply_PersistentVolume{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[263]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPersistentVolumeReply_PersistentVolume) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPersistentVolumeReply_PersistentVolume) ProtoMessage() {}

func (x *ListPersistentVolumeReply_PersistentVolume) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[263]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPersistentVolumeReply_PersistentVolume.ProtoReflect.Descriptor instead.
func (*ListPersistentVolumeReply_PersistentVolume) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{158, 0}
}

func (x *ListPersistentVolumeReply_PersistentVolume) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ListPersistentVolumeReply_PersistentVolume) GetCreationTimestamp() int64 {
	if x != nil {
		return x.CreationTimestamp
	}
	return 0
}

func (x *ListPersistentVolumeReply_PersistentVolume) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *ListPersistentVolumeReply_PersistentVolume) GetAnnotations() map[string]string {
	if x != nil {
		return x.Annotations
	}
	return nil
}

func (x *ListPersistentVolumeReply_PersistentVolume) GetPhase() string {
	if x != nil {
		return x.Phase
	}
	return ""
}

func (x *ListPersistentVolumeReply_PersistentVolume) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type ListPersistentVolumeClaimReply_PersistentVolumeClaim struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace         string            `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name              string            `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	CreationTimestamp int64             `protobuf:"varint,3,opt,name=creationTimestamp,proto3" json:"creationTimestamp,omitempty"`
	Labels            map[string]string `protobuf:"bytes,4,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Annotations       map[string]string `protobuf:"bytes,5,rep,name=annotations,proto3" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	VolumeName        string            `protobuf:"bytes,6,opt,name=volumeName,proto3" json:"volumeName,omitempty"`
	StorageClassName  string            `protobuf:"bytes,7,opt,name=storageClassName,proto3" json:"storageClassName,omitempty"`
}

func (x *ListPersistentVolumeClaimReply_PersistentVolumeClaim) Reset() {
	*x = ListPersistentVolumeClaimReply_PersistentVolumeClaim{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[266]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPersistentVolumeClaimReply_PersistentVolumeClaim) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPersistentVolumeClaimReply_PersistentVolumeClaim) ProtoMessage() {}

func (x *ListPersistentVolumeClaimReply_PersistentVolumeClaim) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[266]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPersistentVolumeClaimReply_PersistentVolumeClaim.ProtoReflect.Descriptor instead.
func (*ListPersistentVolumeClaimReply_PersistentVolumeClaim) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{160, 0}
}

func (x *ListPersistentVolumeClaimReply_PersistentVolumeClaim) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ListPersistentVolumeClaimReply_PersistentVolumeClaim) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ListPersistentVolumeClaimReply_PersistentVolumeClaim) GetCreationTimestamp() int64 {
	if x != nil {
		return x.CreationTimestamp
	}
	return 0
}

func (x *ListPersistentVolumeClaimReply_PersistentVolumeClaim) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *ListPersistentVolumeClaimReply_PersistentVolumeClaim) GetAnnotations() map[string]string {
	if x != nil {
		return x.Annotations
	}
	return nil
}

func (x *ListPersistentVolumeClaimReply_PersistentVolumeClaim) GetVolumeName() string {
	if x != nil {
		return x.VolumeName
	}
	return ""
}

func (x *ListPersistentVolumeClaimReply_PersistentVolumeClaim) GetStorageClassName() string {
	if x != nil {
		return x.StorageClassName
	}
	return ""
}

type GetExpiringSoonKubernetesTlsReply_FailedExpiringSoonKubernetesTls struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	NameSpace string `protobuf:"bytes,2,opt,name=nameSpace,proto3" json:"nameSpace,omitempty"`
}

func (x *GetExpiringSoonKubernetesTlsReply_FailedExpiringSoonKubernetesTls) Reset() {
	*x = GetExpiringSoonKubernetesTlsReply_FailedExpiringSoonKubernetesTls{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[269]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetExpiringSoonKubernetesTlsReply_FailedExpiringSoonKubernetesTls) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExpiringSoonKubernetesTlsReply_FailedExpiringSoonKubernetesTls) ProtoMessage() {}

func (x *GetExpiringSoonKubernetesTlsReply_FailedExpiringSoonKubernetesTls) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[269]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExpiringSoonKubernetesTlsReply_FailedExpiringSoonKubernetesTls.ProtoReflect.Descriptor instead.
func (*GetExpiringSoonKubernetesTlsReply_FailedExpiringSoonKubernetesTls) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{162, 0}
}

func (x *GetExpiringSoonKubernetesTlsReply_FailedExpiringSoonKubernetesTls) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetExpiringSoonKubernetesTlsReply_FailedExpiringSoonKubernetesTls) GetNameSpace() string {
	if x != nil {
		return x.NameSpace
	}
	return ""
}

type GetExpiringSoonKubernetesTlsReply_ExpiringSoonKubernetesTls struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name           string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	NameSpace      string   `protobuf:"bytes,2,opt,name=nameSpace,proto3" json:"nameSpace,omitempty"`
	DnsNames       []string `protobuf:"bytes,3,rep,name=dnsNames,proto3" json:"dnsNames,omitempty"`
	Subject        string   `protobuf:"bytes,4,opt,name=subject,proto3" json:"subject,omitempty"`
	SerialNumber   string   `protobuf:"bytes,5,opt,name=serialNumber,proto3" json:"serialNumber,omitempty"`
	NotAfter       int64    `protobuf:"varint,6,opt,name=notAfter,proto3" json:"notAfter,omitempty"`
	NotAfterString string   `protobuf:"bytes,7,opt,name=notAfterString,proto3" json:"notAfterString,omitempty"`
}

func (x *GetExpiringSoonKubernetesTlsReply_ExpiringSoonKubernetesTls) Reset() {
	*x = GetExpiringSoonKubernetesTlsReply_ExpiringSoonKubernetesTls{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[270]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetExpiringSoonKubernetesTlsReply_ExpiringSoonKubernetesTls) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExpiringSoonKubernetesTlsReply_ExpiringSoonKubernetesTls) ProtoMessage() {}

func (x *GetExpiringSoonKubernetesTlsReply_ExpiringSoonKubernetesTls) ProtoReflect() protoreflect.Message {
	mi := &file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[270]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExpiringSoonKubernetesTlsReply_ExpiringSoonKubernetesTls.ProtoReflect.Descriptor instead.
func (*GetExpiringSoonKubernetesTlsReply_ExpiringSoonKubernetesTls) Descriptor() ([]byte, []int) {
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP(), []int{162, 1}
}

func (x *GetExpiringSoonKubernetesTlsReply_ExpiringSoonKubernetesTls) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetExpiringSoonKubernetesTlsReply_ExpiringSoonKubernetesTls) GetNameSpace() string {
	if x != nil {
		return x.NameSpace
	}
	return ""
}

func (x *GetExpiringSoonKubernetesTlsReply_ExpiringSoonKubernetesTls) GetDnsNames() []string {
	if x != nil {
		return x.DnsNames
	}
	return nil
}

func (x *GetExpiringSoonKubernetesTlsReply_ExpiringSoonKubernetesTls) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *GetExpiringSoonKubernetesTlsReply_ExpiringSoonKubernetesTls) GetSerialNumber() string {
	if x != nil {
		return x.SerialNumber
	}
	return ""
}

func (x *GetExpiringSoonKubernetesTlsReply_ExpiringSoonKubernetesTls) GetNotAfter() int64 {
	if x != nil {
		return x.NotAfter
	}
	return 0
}

func (x *GetExpiringSoonKubernetesTlsReply_ExpiringSoonKubernetesTls) GetNotAfterString() string {
	if x != nil {
		return x.NotAfterString
	}
	return ""
}

var File_oneKubeEdge_v1_oneKubeEdge_proto protoreflect.FileDescriptor

var file_oneKubeEdge_v1_oneKubeEdge_proto_rawDesc = []byte{
	0x0a, 0x20, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2f, 0x76, 0x31,
	0x2f, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e,
	0x76, 0x31, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x16, 0x0a, 0x14, 0x47,
	0x65, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79,
	0x52, 0x65, 0x71, 0x22, 0xd4, 0x05, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x20,
	0x0a, 0x0b, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x43, 0x70, 0x75, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0b, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x43, 0x70, 0x75,
	0x12, 0x26, 0x0a, 0x0e, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x4d, 0x65, 0x6d, 0x6f,
	0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69,
	0x74, 0x79, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x28, 0x0a, 0x0f, 0x63, 0x61, 0x70, 0x61,
	0x63, 0x69, 0x74, 0x79, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0f, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x53, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x43, 0x70, 0x75, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x61, 0x6c, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x70, 0x75, 0x12, 0x2c, 0x0a, 0x11, 0x61, 0x6c,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x2e, 0x0a, 0x12, 0x61, 0x6c, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x12, 0x34, 0x0a, 0x15, 0x61, 0x6c, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x70, 0x75, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e,
	0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x15, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x43, 0x70, 0x75, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x3a,
	0x0a, 0x18, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x4d, 0x65, 0x6d,
	0x6f, 0x72, 0x79, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x18, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x4d, 0x65, 0x6d,
	0x6f, 0x72, 0x79, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x3c, 0x0a, 0x19, 0x61, 0x6c,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x02, 0x52, 0x19, 0x61,
	0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x73, 0x73, 0x69,
	0x67, 0x6e, 0x65, 0x64, 0x43, 0x70, 0x75, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x61,
	0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x43, 0x70, 0x75, 0x12, 0x26, 0x0a, 0x0e, 0x61, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0e, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x4d, 0x65, 0x6d, 0x6f,
	0x72, 0x79, 0x12, 0x28, 0x0a, 0x0f, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x53, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x61, 0x73, 0x73,
	0x69, 0x67, 0x6e, 0x65, 0x64, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x12, 0x2e, 0x0a, 0x12,
	0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x43, 0x70, 0x75, 0x50, 0x65, 0x72, 0x63, 0x65,
	0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x02, 0x52, 0x12, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e,
	0x65, 0x64, 0x43, 0x70, 0x75, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x34, 0x0a, 0x15,
	0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x50, 0x65,
	0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x02, 0x52, 0x15, 0x61, 0x73, 0x73,
	0x69, 0x67, 0x6e, 0x65, 0x64, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x50, 0x65, 0x72, 0x63, 0x65,
	0x6e, 0x74, 0x12, 0x36, 0x0a, 0x16, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x53, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x16, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x53, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x22, 0x30, 0x0a, 0x11, 0x47, 0x65,
	0x74, 0x4e, 0x6f, 0x64, 0x65, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x65, 0x71, 0x12,
	0x1b, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x75, 0x0a, 0x13,
	0x47, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x70, 0x75, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x63, 0x70, 0x75, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x16, 0x0a,
	0x06, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x77,
	0x69, 0x6e, 0x64, 0x6f, 0x77, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x22, 0x56, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x64, 0x4d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x73, 0x52, 0x65, 0x71, 0x12, 0x25, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72,
	0x02, 0x10, 0x01, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1b,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xf2, 0x01, 0x0a, 0x12,
	0x47, 0x65, 0x74, 0x50, 0x6f, 0x64, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x53, 0x0a, 0x0a, 0x70, 0x6f, 0x64, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65,
	0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x64, 0x4d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61,
	0x69, 0x6e, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x0a, 0x70, 0x6f, 0x64,
	0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x1a, 0x86, 0x01, 0x0a, 0x10, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x69, 0x6e, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x63, 0x70, 0x75, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63,
	0x70, 0x75, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x69,
	0x6e, 0x64, 0x6f, 0x77, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x77, 0x69, 0x6e, 0x64,
	0x6f, 0x77, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x22, 0x32, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x53, 0x70,
	0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x22, 0x2e, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x22, 0x12, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x53, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x22, 0xb9, 0x01, 0x0a, 0x12, 0x4c, 0x69, 0x73,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x4a, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x53, 0x70, 0x61, 0x63,
	0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65,
	0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x1a, 0x57, 0x0a, 0x09, 0x4e,
	0x61, 0x6d, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x22, 0x2f, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x53,
	0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x22, 0x2b, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65,
	0x53, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x22, 0xcd, 0x01, 0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4d, 0x61, 0x70,
	0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x37, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x23, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4d, 0x61, 0x70, 0x2e, 0x44, 0x61, 0x74, 0x61,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x69,
	0x6d, 0x6d, 0x75, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09,
	0x69, 0x6d, 0x6d, 0x75, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x1a, 0x37, 0x0a, 0x09, 0x44, 0x61, 0x74,
	0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0xfb, 0x01, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x4d, 0x61, 0x70, 0x52, 0x65, 0x71, 0x12, 0x25, 0x0a, 0x09, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x12, 0x1b, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x4a, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x6f, 0x6e,
	0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4d, 0x61, 0x70, 0x52, 0x65, 0x71, 0x2e,
	0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x9a, 0x01,
	0x02, 0x08, 0x01, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6d, 0x6d,
	0x75, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x6d,
	0x6d, 0x75, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x1a, 0x37, 0x0a, 0x09, 0x44, 0x61, 0x74, 0x61, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0x2e, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x4d, 0x61, 0x70, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x22, 0x39, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4d, 0x61,
	0x70, 0x52, 0x65, 0x71, 0x12, 0x25, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01,
	0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x22, 0x4d, 0x0a, 0x12, 0x4c,
	0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4d, 0x61, 0x70, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x37, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4d, 0x61, 0x70, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64,
	0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4d, 0x61, 0x70, 0x52,
	0x09, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4d, 0x61, 0x70, 0x22, 0x55, 0x0a, 0x0f, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4d, 0x61, 0x70, 0x52, 0x65, 0x71, 0x12, 0x25, 0x0a,
	0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x12, 0x1b, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x22, 0xdd, 0x01, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4d,
	0x61, 0x70, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3f, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62,
	0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x4d, 0x61, 0x70, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6d,
	0x6d, 0x75, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69,
	0x6d, 0x6d, 0x75, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x1a, 0x37, 0x0a, 0x09, 0x44, 0x61, 0x74, 0x61,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0x55, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4d, 0x61,
	0x70, 0x52, 0x65, 0x71, 0x12, 0x25, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01,
	0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1b, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02,
	0x10, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x2b, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4d, 0x61, 0x70, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xfb, 0x01, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4d, 0x61, 0x70, 0x52, 0x65, 0x71, 0x12, 0x25, 0x0a, 0x09,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x12, 0x1b, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x4a, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c,
	0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4d, 0x61, 0x70, 0x52,
	0x65, 0x71, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x08, 0xfa, 0x42,
	0x05, 0x9a, 0x01, 0x02, 0x08, 0x01, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09,
	0x69, 0x6d, 0x6d, 0x75, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x09, 0x69, 0x6d, 0x6d, 0x75, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x1a, 0x37, 0x0a, 0x09, 0x44, 0x61,
	0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0x2e, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x4d, 0x61, 0x70, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x22, 0xb6, 0x01, 0x0a, 0x0a, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x3a, 0x0a, 0x0a, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65,
	0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x65,
	0x74, 0x61, 0x52, 0x0a, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x32,
	0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6f,
	0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x70, 0x65, 0x63, 0x52, 0x04, 0x73, 0x70,
	0x65, 0x63, 0x12, 0x38, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xc8, 0x02, 0x0a,
	0x0a, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x4d, 0x0a,
	0x0b, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x2e, 0x41,
	0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x0b, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x3e, 0x0a, 0x06,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6f,
	0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x1a, 0x3e, 0x0a, 0x10,
	0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x39, 0x0a, 0x0b,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xfc, 0x02, 0x0a, 0x0e, 0x44, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x70, 0x65, 0x63, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x72, 0x65,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x73, 0x12, 0x39, 0x0a, 0x08, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75,
	0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x53,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x08, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x12, 0x3b, 0x0a, 0x08, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x64, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x53, 0x70, 0x65, 0x63, 0x52, 0x08, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x3e,
	0x0a, 0x08, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x72, 0x61,
	0x74, 0x65, 0x67, 0x79, 0x52, 0x08, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x12, 0x28,
	0x0a, 0x0f, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x61, 0x64, 0x79, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x61, 0x64,
	0x79, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x32, 0x0a, 0x14, 0x72, 0x65, 0x76, 0x69,
	0x73, 0x69, 0x6f, 0x6e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x14, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e,
	0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x38, 0x0a, 0x17,
	0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x44, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65,
	0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x17, 0x70,
	0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x44, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x53,
	0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x22, 0x7a, 0x0a, 0x0f, 0x50, 0x6f, 0x64, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x53, 0x70, 0x65, 0x63, 0x12, 0x3a, 0x0a, 0x0a, 0x6f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x0a, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x2b, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x64, 0x53, 0x70, 0x65, 0x63, 0x52, 0x04, 0x73, 0x70,
	0x65, 0x63, 0x22, 0xa1, 0x01, 0x0a, 0x0d, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x53, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x12, 0x50, 0x0a, 0x0b, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x6f, 0x6e, 0x65, 0x4b,
	0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4c, 0x61,
	0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x6d, 0x61, 0x74, 0x63, 0x68,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x1a, 0x3e, 0x0a, 0x10, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x28, 0x0a, 0x12, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x22, 0xa5, 0x08, 0x0a, 0x07, 0x50, 0x6f, 0x64, 0x53, 0x70, 0x65, 0x63, 0x12, 0x30, 0x0a, 0x07,
	0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x56,
	0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x07, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x73, 0x12, 0x41,
	0x0a, 0x0e, 0x69, 0x6e, 0x69, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65,
	0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65,
	0x72, 0x52, 0x0e, 0x69, 0x6e, 0x69, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72,
	0x73, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45,
	0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72,
	0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x12, 0x54, 0x0a, 0x13,
	0x65, 0x70, 0x68, 0x65, 0x6d, 0x65, 0x72, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e,
	0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6f, 0x6e, 0x65, 0x4b,
	0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x70, 0x68, 0x65, 0x6d,
	0x65, 0x72, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x13, 0x65,
	0x70, 0x68, 0x65, 0x6d, 0x65, 0x72, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65,
	0x72, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x44, 0x0a, 0x1d, 0x74, 0x65, 0x72, 0x6d,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x61, 0x63, 0x65, 0x50, 0x65, 0x72, 0x69,
	0x6f, 0x64, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x1d, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x61, 0x63,
	0x65, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x34,
	0x0a, 0x15, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x44, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65,
	0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x15, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x44, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x65, 0x63,
	0x6f, 0x6e, 0x64, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x6e, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x6e, 0x73, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x12, 0x4d, 0x0a, 0x0c, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75,
	0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x64, 0x53, 0x70, 0x65,
	0x63, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x0c, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x12, 0x2e, 0x0a, 0x12, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x42, 0x0a, 0x1c, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1c, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x4c, 0x0a, 0x0f, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74,
	0x79, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22,
	0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x6f, 0x64, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x78, 0x74, 0x52, 0x0f, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x78, 0x74, 0x12, 0x4b, 0x0a, 0x10, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x50, 0x75, 0x6c, 0x6c,
	0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x50, 0x75, 0x6c, 0x6c, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x10,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x50, 0x75, 0x6c, 0x6c, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73,
	0x12, 0x3c, 0x0a, 0x0b, 0x74, 0x6f, 0x6c, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x10, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45,
	0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f, 0x6c, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0b, 0x74, 0x6f, 0x6c, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x3b,
	0x0a, 0x0b, 0x68, 0x6f, 0x73, 0x74, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x65, 0x73, 0x18, 0x11, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x52, 0x0b,
	0x68, 0x6f, 0x73, 0x74, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x65, 0x73, 0x12, 0x3a, 0x0a, 0x09, 0x64,
	0x6e, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x6f, 0x64, 0x44, 0x4e, 0x53, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x09, 0x64, 0x6e,
	0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x1a, 0x3f, 0x0a, 0x11, 0x4e, 0x6f, 0x64, 0x65, 0x53,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x08, 0x0a, 0x06, 0x56, 0x6f, 0x6c, 0x75,
	0x6d, 0x65, 0x22, 0x14, 0x0a, 0x12, 0x45, 0x70, 0x68, 0x65, 0x6d, 0x65, 0x72, 0x61, 0x6c, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x22, 0x97, 0x01, 0x0a, 0x08, 0x53, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x4b, 0x0a, 0x0b, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x4c, 0x61,
	0x62, 0x65, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6f, 0x6e, 0x65,
	0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x73, 0x1a, 0x3e, 0x0a, 0x10, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0x97, 0x04, 0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x61, 0x72, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x61, 0x72,
	0x67, 0x73, 0x12, 0x27, 0x0a, 0x04, 0x65, 0x6e, 0x76, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x45, 0x6e, 0x76, 0x52, 0x04, 0x65, 0x6e, 0x76, 0x73, 0x12, 0x39, 0x0a, 0x08, 0x45,
	0x6e, 0x76, 0x46, 0x72, 0x6f, 0x6d, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x45,
	0x6e, 0x76, 0x46, 0x72, 0x6f, 0x6d, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x08, 0x45, 0x6e,
	0x76, 0x46, 0x72, 0x6f, 0x6d, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x28, 0x0a, 0x0f,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x50, 0x75, 0x6c, 0x6c, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x50, 0x75, 0x6c, 0x6c,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x3b, 0x0a, 0x0d, 0x6c, 0x69, 0x76, 0x65, 0x6e, 0x65,
	0x73, 0x73, 0x50, 0x72, 0x6f, 0x62, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x72, 0x6f, 0x62, 0x65, 0x52, 0x0d, 0x6c, 0x69, 0x76, 0x65, 0x6e, 0x65, 0x73, 0x73, 0x50, 0x72,
	0x6f, 0x62, 0x65, 0x12, 0x3d, 0x0a, 0x0e, 0x72, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x50, 0x72, 0x6f, 0x62, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6f, 0x6e,
	0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f,
	0x62, 0x65, 0x52, 0x0e, 0x72, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x50, 0x72, 0x6f,
	0x62, 0x65, 0x12, 0x39, 0x0a, 0x0c, 0x73, 0x74, 0x61, 0x72, 0x74, 0x75, 0x70, 0x50, 0x72, 0x6f,
	0x62, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75,
	0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x62, 0x65, 0x52,
	0x0c, 0x73, 0x74, 0x61, 0x72, 0x74, 0x75, 0x70, 0x50, 0x72, 0x6f, 0x62, 0x65, 0x12, 0x37, 0x0a,
	0x09, 0x6c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x52, 0x09, 0x6c, 0x69, 0x66,
	0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x12, 0x34, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75,
	0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x2f, 0x0a, 0x03,
	0x45, 0x6e, 0x76, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x58, 0x0a,
	0x12, 0x50, 0x6f, 0x64, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x78, 0x74, 0x12, 0x42, 0x0a, 0x07, 0x53, 0x79, 0x73, 0x63, 0x74, 0x6c, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64,
	0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x64, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74,
	0x79, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x53, 0x79, 0x73, 0x63, 0x74, 0x6c, 0x52, 0x07,
	0x53, 0x79, 0x73, 0x63, 0x74, 0x6c, 0x73, 0x22, 0x44, 0x0a, 0x18, 0x50, 0x6f, 0x64, 0x53, 0x65,
	0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x53, 0x79, 0x73,
	0x63, 0x74, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x25, 0x0a,
	0x0f, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x50, 0x75, 0x6c, 0x6c, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x22, 0x68, 0x0a, 0x0a, 0x54, 0x6f, 0x6c, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x12, 0x16, 0x0a, 0x06, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x4c,
	0x0a, 0x0c, 0x50, 0x6f, 0x64, 0x44, 0x4e, 0x53, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x20,
	0x0a, 0x0b, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73,
	0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x65, 0x73, 0x22, 0x42, 0x0a, 0x09,
	0x48, 0x6f, 0x73, 0x74, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x17, 0x0a, 0x02, 0x69, 0x70, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x70, 0x01, 0x52, 0x02,
	0x69, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x22, 0xa1, 0x02, 0x0a, 0x05, 0x50, 0x72, 0x6f, 0x62, 0x65, 0x12, 0x40, 0x0a, 0x0c, 0x70, 0x72,
	0x6f, 0x62, 0x65, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x72, 0x6f, 0x62, 0x65, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x52, 0x0c,
	0x70, 0x72, 0x6f, 0x62, 0x65, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x12, 0x30, 0x0a, 0x13,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x44, 0x65, 0x6c, 0x61, 0x79, 0x53, 0x65, 0x63, 0x6f,
	0x6e, 0x64, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x61, 0x6c, 0x44, 0x65, 0x6c, 0x61, 0x79, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x26,
	0x0a, 0x0e, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x53,
	0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64,
	0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x70,
	0x65, 0x72, 0x69, 0x6f, 0x64, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x2a, 0x0a, 0x10,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54,
	0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x66, 0x61, 0x69, 0x6c,
	0x75, 0x72, 0x65, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x10, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x54, 0x68, 0x72, 0x65, 0x73,
	0x68, 0x6f, 0x6c, 0x64, 0x22, 0xe6, 0x01, 0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x62, 0x65, 0x48, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x72, 0x12, 0x2e, 0x0a, 0x04, 0x65, 0x78, 0x65, 0x63, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x04, 0x65, 0x78, 0x65, 0x63, 0x12, 0x37, 0x0a, 0x07, 0x68, 0x74, 0x74, 0x70, 0x47, 0x65, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65,
	0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x54, 0x54, 0x50, 0x47, 0x65, 0x74, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x68, 0x74, 0x74, 0x70, 0x47, 0x65, 0x74, 0x12, 0x3d,
	0x0a, 0x09, 0x74, 0x63, 0x70, 0x53, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x54, 0x43, 0x50, 0x53, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x09, 0x74, 0x63, 0x70, 0x53, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x2e, 0x0a,
	0x04, 0x67, 0x72, 0x70, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6f, 0x6e,
	0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x52, 0x50,
	0x43, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x67, 0x72, 0x70, 0x63, 0x22, 0x26, 0x0a,
	0x0a, 0x45, 0x78, 0x65, 0x63, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x22, 0xcd, 0x01, 0x0a, 0x0d, 0x48, 0x54, 0x54, 0x50, 0x47, 0x65,
	0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70,
	0x61, 0x74, 0x68, 0x12, 0x44, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64,
	0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x54, 0x54, 0x50, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x1a, 0x3a, 0x0a, 0x0c, 0x48, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x39, 0x0a, 0x0f, 0x54, 0x43, 0x50, 0x53, 0x6f, 0x63, 0x6b,
	0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74,
	0x22, 0x3a, 0x0a, 0x0a, 0x47, 0x52, 0x50, 0x43, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x6f,
	0x72, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x22, 0x87, 0x01, 0x0a,
	0x09, 0x4c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x12, 0x3e, 0x0a, 0x09, 0x70, 0x6f,
	0x73, 0x74, 0x53, 0x74, 0x61, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x52,
	0x09, 0x70, 0x6f, 0x73, 0x74, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x3a, 0x0a, 0x07, 0x70, 0x72,
	0x65, 0x53, 0x74, 0x6f, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6f, 0x6e,
	0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x66,
	0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x52, 0x07, 0x70,
	0x72, 0x65, 0x53, 0x74, 0x6f, 0x70, 0x22, 0xba, 0x01, 0x0a, 0x10, 0x4c, 0x69, 0x66, 0x65, 0x63,
	0x79, 0x63, 0x6c, 0x65, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x12, 0x2e, 0x0a, 0x04, 0x65,
	0x78, 0x65, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6f, 0x6e, 0x65, 0x4b,
	0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x65, 0x78, 0x65, 0x63, 0x12, 0x37, 0x0a, 0x07, 0x68,
	0x74, 0x74, 0x70, 0x47, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6f,
	0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x54,
	0x54, 0x50, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x68, 0x74, 0x74,
	0x70, 0x47, 0x65, 0x74, 0x12, 0x3d, 0x0a, 0x09, 0x74, 0x63, 0x70, 0x53, 0x6f, 0x63, 0x6b, 0x65,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62,
	0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x43, 0x50, 0x53, 0x6f, 0x63, 0x6b,
	0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x74, 0x63, 0x70, 0x53, 0x6f, 0x63,
	0x6b, 0x65, 0x74, 0x22, 0x51, 0x0a, 0x0d, 0x45, 0x6e, 0x76, 0x46, 0x72, 0x6f, 0x6d, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4d, 0x61,
	0x70, 0x52, 0x65, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x4d, 0x61, 0x70, 0x52, 0x65, 0x66, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x52, 0x65, 0x66, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x52, 0x65, 0x66, 0x22, 0x7b, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x12, 0x33, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x3a, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75,
	0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x52, 0x07, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x7f, 0x0a, 0x0d, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x70, 0x75, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x03, 0x63, 0x70, 0x75, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x73, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x45, 0x70, 0x68, 0x65, 0x6d, 0x65, 0x72, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x10, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x45, 0x70, 0x68, 0x65, 0x6d,
	0x65, 0x72, 0x61, 0x6c, 0x22, 0x82, 0x01, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x70, 0x75,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x63, 0x70, 0x75, 0x12, 0x16, 0x0a, 0x06, 0x6d,
	0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6d, 0x65, 0x6d,
	0x6f, 0x72, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x12, 0x2a, 0x0a,
	0x10, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x45, 0x70, 0x68, 0x65, 0x6d, 0x65, 0x72, 0x61,
	0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x45, 0x70, 0x68, 0x65, 0x6d, 0x65, 0x72, 0x61, 0x6c, 0x22, 0xde, 0x01, 0x0a, 0x10, 0x44, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a,
	0x0a, 0x08, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x72, 0x65, 0x61, 0x64, 0x79, 0x52, 0x65, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x72, 0x65, 0x61,
	0x64, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x73, 0x12, 0x2c, 0x0a, 0x11, 0x61, 0x76,
	0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65,
	0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x73, 0x12, 0x30, 0x0a, 0x13, 0x75, 0x6e, 0x61, 0x76,
	0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x75, 0x6e, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62,
	0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x73, 0x22, 0x51, 0x0a, 0x13, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x12, 0x3a, 0x0a, 0x0a, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45,
	0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x0a, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x2f, 0x0a,
	0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x92,
	0x01, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x12, 0x25, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01,
	0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x65, 0x12, 0x24, 0x0a,
	0x0d, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x53, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x22, 0x6f, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x3c, 0x0a, 0x0b, 0x64, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0b, 0x64, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74,
	0x69, 0x6e, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74,
	0x69, 0x6e, 0x75, 0x65, 0x22, 0x98, 0x01, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71,
	0x12, 0x25, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x09, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x22,
	0x75, 0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x3c, 0x0a, 0x0b,
	0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0b, 0x64,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f,
	0x6e, 0x74, 0x69, 0x6e, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f,
	0x6e, 0x74, 0x69, 0x6e, 0x75, 0x65, 0x22, 0x56, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x44, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x25, 0x0a, 0x09, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x12, 0x1b, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x50,
	0x0a, 0x12, 0x47, 0x65, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x3a, 0x0a, 0x0a, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75,
	0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x22, 0x56, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x12, 0x25, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01,
	0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1b, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02,
	0x10, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x2c, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x44,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x51, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x3a, 0x0a,
	0x0a, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x64,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x2f, 0x0a, 0x15, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x13, 0x0a, 0x11, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x6f, 0x6c, 0x6c, 0x6f, 0x75, 0x74, 0x48, 0x69, 0x73, 0x52, 0x65, 0x71, 0x22,
	0x15, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x6c, 0x6c, 0x6f, 0x75, 0x74, 0x48, 0x69,
	0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x88, 0x01, 0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x61,
	0x63, 0x65, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x12, 0x25, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x72, 0x02, 0x10, 0x01, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12,
	0x1b, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x08,
	0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x1a, 0x02, 0x20, 0x00, 0x52, 0x08, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x73, 0x22, 0x39, 0x0a, 0x1f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x53, 0x65, 0x74, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xb9, 0x04, 0x0a,
	0x13, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x69, 0x6e, 0x43, 0x70, 0x75, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6d, 0x69, 0x6e, 0x43, 0x70, 0x75, 0x12, 0x16, 0x0a, 0x06,
	0x6d, 0x61, 0x78, 0x43, 0x70, 0x75, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6d, 0x61,
	0x78, 0x43, 0x70, 0x75, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x69, 0x6e, 0x4d, 0x65, 0x6d, 0x6f, 0x72,
	0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6d, 0x69, 0x6e, 0x4d, 0x65, 0x6d, 0x6f,
	0x72, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6d, 0x61, 0x78, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79,
	0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x73, 0x12, 0x30, 0x0a, 0x13, 0x75, 0x6e, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c,
	0x65, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x13, 0x75, 0x6e, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x4b, 0x65, 0x79,
	0x77, 0x6f, 0x72, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x6e, 0x61, 0x6d, 0x65,
	0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e,
	0x61, 0x6d, 0x65, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x41, 0x0a, 0x04, 0x65, 0x6e,
	0x76, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75,
	0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x2e, 0x45, 0x6e,
	0x76, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x65, 0x6e, 0x76, 0x73, 0x12, 0x47, 0x0a,
	0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e,
	0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x1a, 0x37, 0x0a, 0x09, 0x45, 0x6e, 0x76, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x39, 0x0a,
	0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xab, 0x01, 0x0a, 0x15, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x52, 0x0a, 0x0b, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62,
	0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x44,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x64,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0b, 0x64, 0x65, 0x70, 0x6c, 0x6f,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0x3e, 0x0a, 0x0a, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x36, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65,
	0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x71, 0x12, 0x25, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72,
	0x02, 0x10, 0x01, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x22, 0xa8,
	0x06, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x40, 0x0a, 0x07, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x2e, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x07, 0x73, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x73, 0x1a, 0xd2, 0x05, 0x0a, 0x06, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x59, 0x0a, 0x0b, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65,
	0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x2e, 0x41,
	0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x0b, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x4a, 0x0a, 0x06,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x6f,
	0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x53, 0x65,
	0x63, 0x72, 0x65, 0x74, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6d, 0x6d, 0x75,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x6d, 0x6d,
	0x75, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x56, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x44, 0x61, 0x74, 0x61, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x6f,
	0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x53, 0x65,
	0x63, 0x72, 0x65, 0x74, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x61, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x44, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30,
	0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e,
	0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x3e, 0x0a, 0x10, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x39, 0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x1a, 0x3d, 0x0a, 0x0f, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x61, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x1a, 0x37, 0x0a, 0x09, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x52, 0x0a, 0x0c, 0x47, 0x65, 0x74,
	0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x71, 0x12, 0x25, 0x0a, 0x09, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x12, 0x1b, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xba, 0x05,
	0x0a, 0x0e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x51, 0x0a, 0x0b, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62,
	0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x42, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45,
	0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6d, 0x6d,
	0x75, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x6d,
	0x6d, 0x75, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x4e, 0x0a, 0x0a, 0x73, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x61, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e,
	0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x73,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x61, 0x12, 0x3c, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62,
	0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x3e, 0x0a, 0x10, 0x41, 0x6e, 0x6e, 0x6f, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x39, 0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x1a, 0x3d, 0x0a, 0x0f, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x61,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x1a, 0x37, 0x0a, 0x09, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x52, 0x0a, 0x0c, 0x44, 0x65,
	0x6c, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x71, 0x12, 0x25, 0x0a, 0x09, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x12, 0x1b, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x28,
	0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xb4, 0x03, 0x0a, 0x12, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x6c, 0x73, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x71, 0x12,
	0x25, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x09, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1b, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x55, 0x0a, 0x0b, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75,
	0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x6c, 0x73, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x71, 0x2e, 0x41, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x61,
	0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x46, 0x0a, 0x06, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x6f, 0x6e, 0x65,
	0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x6c, 0x73, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x71, 0x2e, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x73, 0x12, 0x1f, 0x0a, 0x06, 0x74, 0x6c, 0x73, 0x43, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x06, 0x74, 0x6c, 0x73,
	0x43, 0x72, 0x74, 0x12, 0x1f, 0x0a, 0x06, 0x74, 0x6c, 0x73, 0x4b, 0x65, 0x79, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x06, 0x74, 0x6c,
	0x73, 0x4b, 0x65, 0x79, 0x1a, 0x3e, 0x0a, 0x10, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x1a, 0x39, 0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0x2e, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x6c, 0x73, 0x53, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22,
	0xb4, 0x03, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x6c, 0x73, 0x53, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x52, 0x65, 0x71, 0x12, 0x25, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02,
	0x10, 0x01, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1b, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x72, 0x02, 0x10, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x55, 0x0a, 0x0b, 0x61, 0x6e,
	0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x33, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x6c, 0x73, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x52, 0x65, 0x71, 0x2e, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x46, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2e, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x6c, 0x73, 0x53, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x52, 0x65, 0x71, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x1f, 0x0a, 0x06, 0x74, 0x6c, 0x73,
	0x43, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02,
	0x10, 0x01, 0x52, 0x06, 0x74, 0x6c, 0x73, 0x43, 0x72, 0x74, 0x12, 0x1f, 0x0a, 0x06, 0x74, 0x6c,
	0x73, 0x4b, 0x65, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72,
	0x02, 0x10, 0x01, 0x52, 0x06, 0x74, 0x6c, 0x73, 0x4b, 0x65, 0x79, 0x1a, 0x3e, 0x0a, 0x10, 0x41,
	0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x39, 0x0a, 0x0b, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x2e, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x6c, 0x73, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xf9, 0x03, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4f, 0x70, 0x61, 0x71, 0x75, 0x65, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x71,
	0x12, 0x25, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x09, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1b, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x58, 0x0a, 0x0b, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x6f, 0x6e, 0x65, 0x4b,
	0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4f, 0x70, 0x61, 0x71, 0x75, 0x65, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x71,
	0x2e, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x0b, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x49,
	0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31,
	0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x70, 0x61, 0x71, 0x75, 0x65, 0x53, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x52, 0x65, 0x71, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x43, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62,
	0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f,
	0x70, 0x61, 0x71, 0x75, 0x65, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x71, 0x2e, 0x44,
	0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x3e,
	0x0a, 0x10, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x39,
	0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x37, 0x0a, 0x09, 0x44, 0x61, 0x74,
	0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0x31, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x70, 0x61, 0x71,
	0x75, 0x65, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xf9, 0x03, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4f, 0x70, 0x61, 0x71, 0x75, 0x65, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x71, 0x12,
	0x25, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x09, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1b, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x58, 0x0a, 0x0b, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75,
	0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4f, 0x70, 0x61, 0x71, 0x75, 0x65, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x71, 0x2e,
	0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x0b, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x49, 0x0a,
	0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e,
	0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x70, 0x61, 0x71, 0x75, 0x65, 0x53, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x52, 0x65, 0x71, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x43, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65,
	0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x70,
	0x61, 0x71, 0x75, 0x65, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x71, 0x2e, 0x44, 0x61,
	0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x3e, 0x0a,
	0x10, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x39, 0x0a,
	0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x37, 0x0a, 0x09, 0x44, 0x61, 0x74, 0x61,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0x31, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x70, 0x61, 0x71, 0x75,
	0x65, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x22, 0x9d, 0x04, 0x0a, 0x1f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44,
	0x6f, 0x63, 0x6b, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4a, 0x73, 0x6f, 0x6e, 0x53,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x71, 0x12, 0x25, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x72, 0x02, 0x10, 0x01, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12,
	0x1b, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x23, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x08, 0x70, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1d, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x60, 0x01, 0x52, 0x05,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x19, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x03, 0x75, 0x72, 0x6c,
	0x12, 0x62, 0x0a, 0x0b, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45,
	0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x63,
	0x6b, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4a, 0x73, 0x6f, 0x6e, 0x53, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x52, 0x65, 0x71, 0x2e, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x53, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x08,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64,
	0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x63, 0x6b,
	0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4a, 0x73, 0x6f, 0x6e, 0x53, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x52, 0x65, 0x71, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x1a, 0x3e, 0x0a, 0x10, 0x41, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x39, 0x0a, 0x0b, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0x3b, 0x0a, 0x21, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x6f,
	0x63, 0x6b, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4a, 0x73, 0x6f, 0x6e, 0x53, 0x65,
	0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x22, 0x9d, 0x04, 0x0a, 0x1f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x63, 0x6b,
	0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4a, 0x73, 0x6f, 0x6e, 0x53, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x52, 0x65, 0x71, 0x12, 0x25, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10,
	0x01, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1b, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72,
	0x02, 0x10, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x72, 0x02, 0x10, 0x01, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x23,
	0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x12, 0x1d, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x60, 0x01, 0x52, 0x05, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x12, 0x19, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x62, 0x0a,
	0x0b, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x07, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x40, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x63, 0x6b, 0x65, 0x72,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4a, 0x73, 0x6f, 0x6e, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x52, 0x65, 0x71, 0x2e, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x53, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x3b, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4a, 0x73, 0x6f, 0x6e, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52,
	0x65, 0x71, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x1a, 0x3e, 0x0a, 0x10, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x39, 0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0x3b, 0x0a, 0x21, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x63, 0x6b, 0x65,
	0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4a, 0x73, 0x6f, 0x6e, 0x53, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xec,
	0x03, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x61, 0x73, 0x69, 0x63, 0x41, 0x75,
	0x74, 0x68, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x71, 0x12, 0x25, 0x0a, 0x09, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x12, 0x1b, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x23, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52,
	0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6d, 0x6d,
	0x75, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x6d,
	0x6d, 0x75, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x5b, 0x0a, 0x0b, 0x61, 0x6e, 0x6e, 0x6f, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x6f,
	0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x42, 0x61, 0x73, 0x69, 0x63, 0x41, 0x75, 0x74, 0x68, 0x53, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x52, 0x65, 0x71, 0x2e, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x4c, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x07,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64,
	0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x61, 0x73, 0x69,
	0x63, 0x41, 0x75, 0x74, 0x68, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x71, 0x2e, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x73, 0x1a, 0x3e, 0x0a, 0x10, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x1a, 0x39, 0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x34, 0x0a,
	0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x61, 0x73, 0x69, 0x63, 0x41, 0x75, 0x74, 0x68,
	0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x22, 0xec, 0x03, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x61,
	0x73, 0x69, 0x63, 0x41, 0x75, 0x74, 0x68, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x71,
	0x12, 0x25, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x09, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1b, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x08, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x72, 0x02, 0x10, 0x01, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x69, 0x6d, 0x6d, 0x75, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x09, 0x69, 0x6d, 0x6d, 0x75, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x5b, 0x0a, 0x0b,
	0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x39, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x61, 0x73, 0x69, 0x63, 0x41, 0x75,
	0x74, 0x68, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x71, 0x2e, 0x41, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x61, 0x6e,
	0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x4c, 0x0a, 0x06, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x6f, 0x6e, 0x65, 0x4b,
	0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x42, 0x61, 0x73, 0x69, 0x63, 0x41, 0x75, 0x74, 0x68, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x52, 0x65, 0x71, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x1a, 0x3e, 0x0a, 0x10, 0x41, 0x6e, 0x6e, 0x6f, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x39, 0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0x34, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x61, 0x73, 0x69,
	0x63, 0x41, 0x75, 0x74, 0x68, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xc5, 0x03, 0x0a, 0x16, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x53, 0x73, 0x68, 0x41, 0x75, 0x74, 0x68, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x52, 0x65, 0x71, 0x12, 0x25, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52,
	0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1b, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10,
	0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0a, 0x70, 0x72, 0x69, 0x76, 0x61,
	0x74, 0x65, 0x4b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x72, 0x02, 0x10, 0x01, 0x52, 0x0a, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79,
	0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6d, 0x6d, 0x75, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x6d, 0x6d, 0x75, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x59,
	0x0a, 0x0b, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x73, 0x68, 0x41, 0x75,
	0x74, 0x68, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x71, 0x2e, 0x41, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x61, 0x6e,
	0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x4a, 0x0a, 0x06, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x6f, 0x6e, 0x65, 0x4b,
	0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x53, 0x73, 0x68, 0x41, 0x75, 0x74, 0x68, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65,
	0x71, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x6c,
	0x61, 0x62, 0x65, 0x6c, 0x73, 0x1a, 0x3e, 0x0a, 0x10, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x39, 0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0x32, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x73, 0x68, 0x41, 0x75, 0x74,
	0x68, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x22, 0xc5, 0x03, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53,
	0x73, 0x68, 0x41, 0x75, 0x74, 0x68, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x71, 0x12,
	0x25, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x09, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1b, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0a, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65,
	0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01,
	0x52, 0x0a, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09,
	0x69, 0x6d, 0x6d, 0x75, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x09, 0x69, 0x6d, 0x6d, 0x75, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x59, 0x0a, 0x0b, 0x61, 0x6e,
	0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x37, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x73, 0x68, 0x41, 0x75, 0x74, 0x68, 0x53, 0x65,
	0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x71, 0x2e, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x4a, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18,
	0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45,
	0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x73, 0x68,
	0x41, 0x75, 0x74, 0x68, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x71, 0x2e, 0x4c, 0x61,
	0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c,
	0x73, 0x1a, 0x3e, 0x0a, 0x10, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x1a, 0x39, 0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x32, 0x0a, 0x18,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x73, 0x68, 0x41, 0x75, 0x74, 0x68, 0x53, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x22, 0x35, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71,
	0x12, 0x25, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x09, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x22, 0x10, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x33, 0x0a, 0x0a, 0x4c, 0x69, 0x73,
	0x74, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x12, 0x25, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72,
	0x02, 0x10, 0x01, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x22, 0x0e,
	0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x32,
	0x0a, 0x09, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x12, 0x25, 0x0a, 0x09, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x22, 0x0d, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x32, 0x0a, 0x09, 0x44, 0x65, 0x6c, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x12, 0x25,
	0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x22, 0x0d, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x4a, 0x6f, 0x62, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x0d, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x6f, 0x64, 0x65,
	0x52, 0x65, 0x71, 0x22, 0xa8, 0x0a, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x6f, 0x64, 0x65,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x36, 0x0a, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x1a, 0xde, 0x09,
	0x0a, 0x04, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x38, 0x0a, 0x17, 0x63, 0x6f, 0x6e, 0x74,
	0x61, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x63, 0x6f, 0x6e, 0x74, 0x61,
	0x69, 0x6e, 0x65, 0x72, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6b, 0x65, 0x72, 0x6e, 0x65,
	0x6c, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x10, 0x6b, 0x75, 0x62, 0x65,
	0x50, 0x72, 0x6f, 0x78, 0x79, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x10, 0x6b, 0x75, 0x62, 0x65, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0e, 0x6b, 0x75, 0x62, 0x65, 0x6c, 0x65, 0x74, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6b, 0x75,
	0x62, 0x65, 0x6c, 0x65, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x0f,
	0x6b, 0x75, 0x62, 0x65, 0x6c, 0x65, 0x74, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6b, 0x75, 0x62, 0x65, 0x6c, 0x65, 0x74, 0x45, 0x6e,
	0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x73, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x73, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x12, 0x46, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2e, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e,
	0x4e, 0x6f, 0x64, 0x65, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x55, 0x0a, 0x0b, 0x61, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e,
	0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x4e, 0x6f, 0x64,
	0x65, 0x2e, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x0b, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x47, 0x0a, 0x08, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2b, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x2e, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x52, 0x08,
	0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x12, 0x50, 0x0a, 0x0b, 0x61, 0x6c, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e,
	0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x4e, 0x6f, 0x64,
	0x65, 0x2e, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x0b, 0x61,
	0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x65, 0x0a, 0x12, 0x61, 0x6c,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65,
	0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x6f, 0x64, 0x65,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x2e, 0x41, 0x6c, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x52, 0x12, 0x61,
	0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e,
	0x74, 0x1a, 0x39, 0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x3e, 0x0a, 0x10,
	0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x7a, 0x0a, 0x08,
	0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x70, 0x75, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x63, 0x70, 0x75, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65,
	0x6d, 0x6f, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x6f,
	0x72, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x12, 0x2a, 0x0a, 0x10,
	0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x45, 0x70, 0x68, 0x65, 0x6d, 0x65, 0x72, 0x61, 0x6c,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x45,
	0x70, 0x68, 0x65, 0x6d, 0x65, 0x72, 0x61, 0x6c, 0x1a, 0x7d, 0x0a, 0x0b, 0x41, 0x6c, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x70, 0x75, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x63, 0x70, 0x75, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x6d,
	0x6f, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72,
	0x79, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x73,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x45, 0x70, 0x68, 0x65, 0x6d, 0x65, 0x72, 0x61, 0x6c, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x45, 0x70,
	0x68, 0x65, 0x6d, 0x65, 0x72, 0x61, 0x6c, 0x1a, 0x84, 0x01, 0x0a, 0x12, 0x41, 0x6c, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x10,
	0x0a, 0x03, 0x63, 0x70, 0x75, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x63, 0x70, 0x75,
	0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x45, 0x70, 0x68,
	0x65, 0x6d, 0x65, 0x72, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x10, 0x73, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x45, 0x70, 0x68, 0x65, 0x6d, 0x65, 0x72, 0x61, 0x6c, 0x22, 0x29,
	0x0a, 0x0a, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x04,
	0x6e, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72,
	0x02, 0x10, 0x01, 0x52, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x22, 0xc8, 0x09, 0x0a, 0x0c, 0x47, 0x65,
	0x74, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2c,
	0x0a, 0x11, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x38, 0x0a, 0x17,
	0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x63,
	0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6b,
	0x65, 0x72, 0x6e, 0x65, 0x6c, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x10,
	0x6b, 0x75, 0x62, 0x65, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6b, 0x75, 0x62, 0x65, 0x50, 0x72, 0x6f, 0x78,
	0x79, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0e, 0x6b, 0x75, 0x62, 0x65,
	0x6c, 0x65, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x6b, 0x75, 0x62, 0x65, 0x6c, 0x65, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x28, 0x0a, 0x0f, 0x6b, 0x75, 0x62, 0x65, 0x6c, 0x65, 0x74, 0x45, 0x6e, 0x64, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6b, 0x75, 0x62, 0x65, 0x6c,
	0x65, 0x74, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x73,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x73, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x12, 0x40, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x09,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64,
	0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x4f, 0x0a, 0x0b, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x6f, 0x6e,
	0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x61, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x41, 0x0a, 0x08, 0x63, 0x61, 0x70, 0x61, 0x63,
	0x69, 0x74, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6f, 0x6e, 0x65, 0x4b,
	0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x6f,
	0x64, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79,
	0x52, 0x08, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x12, 0x4a, 0x0a, 0x0b, 0x61, 0x6c,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x28, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x41, 0x6c,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x0b, 0x61, 0x6c, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x5f, 0x0a, 0x12, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x2e, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x63,
	0x65, 0x6e, 0x74, 0x52, 0x12, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x61, 0x62, 0x6c, 0x65,
	0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x1a, 0x39, 0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x1a, 0x3e, 0x0a, 0x10, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x1a, 0x7a, 0x0a, 0x08, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x63, 0x70, 0x75, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x63, 0x70, 0x75,
	0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x45, 0x70, 0x68,
	0x65, 0x6d, 0x65, 0x72, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x73, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x45, 0x70, 0x68, 0x65, 0x6d, 0x65, 0x72, 0x61, 0x6c, 0x1a, 0x7d,
	0x0a, 0x0b, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x63, 0x70, 0x75, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x63, 0x70, 0x75, 0x12,
	0x16, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x12, 0x2a, 0x0a, 0x10, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x45, 0x70, 0x68, 0x65,
	0x6d, 0x65, 0x72, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x73, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x45, 0x70, 0x68, 0x65, 0x6d, 0x65, 0x72, 0x61, 0x6c, 0x1a, 0x84, 0x01,
	0x0a, 0x12, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x65, 0x72,
	0x63, 0x65, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x70, 0x75, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x03, 0x63, 0x70, 0x75, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x07, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x73, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x45, 0x70, 0x68, 0x65, 0x6d, 0x65, 0x72, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x10, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x45, 0x70, 0x68, 0x65, 0x6d,
	0x65, 0x72, 0x61, 0x6c, 0x22, 0x4f, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x64, 0x52, 0x65,
	0x71, 0x12, 0x25, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x09, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1b, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x8e, 0x09, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x64,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x11, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x14, 0x0a,
	0x05, 0x70, 0x68, 0x61, 0x73, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68,
	0x61, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x6f, 0x73, 0x74, 0x49, 0x50, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x68, 0x6f, 0x73, 0x74, 0x49, 0x50, 0x12, 0x14, 0x0a, 0x05, 0x70,
	0x6f, 0x64, 0x49, 0x50, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x6f, 0x64, 0x49,
	0x50, 0x12, 0x3f, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x27, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x73, 0x12, 0x39, 0x0a, 0x04, 0x65, 0x6e, 0x76, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x25, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x45, 0x6e,
	0x76, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x65, 0x6e, 0x76, 0x73, 0x12, 0x43, 0x0a,
	0x09, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x25, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x43, 0x6f,
	0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e,
	0x65, 0x72, 0x1a, 0x39, 0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x37, 0x0a,
	0x09, 0x45, 0x6e, 0x76, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x8d, 0x05, 0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x74, 0x61,
	0x69, 0x6e, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x44, 0x69, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x44, 0x69, 0x72, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x73, 0x65, 0x63, 0x75,
	0x72, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x78, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x43, 0x70,
	0x75, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x73, 0x43, 0x70, 0x75, 0x12, 0x26, 0x0a, 0x0e, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73,
	0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x28, 0x0a, 0x0f,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x53,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x12, 0x3a, 0x0a, 0x18, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x73, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x45, 0x70, 0x68, 0x65, 0x6d, 0x65, 0x72,
	0x61, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x18, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x73, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x45, 0x70, 0x68, 0x65, 0x6d, 0x65, 0x72,
	0x61, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x43, 0x70, 0x75, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x43, 0x70, 0x75, 0x12, 0x20,
	0x0a, 0x0b, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0b, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79,
	0x12, 0x22, 0x0a, 0x0c, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x53, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x12, 0x34, 0x0a, 0x15, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x53, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x45, 0x70, 0x68, 0x65, 0x6d, 0x65, 0x72, 0x61, 0x6c, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x15, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x45, 0x70, 0x68, 0x65, 0x6d, 0x65, 0x72, 0x61, 0x6c, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x75, 0x70, 0x50, 0x72, 0x6f, 0x62, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x73, 0x74, 0x61, 0x72, 0x74, 0x75, 0x70, 0x50, 0x72, 0x6f, 0x62, 0x65, 0x12, 0x24,
	0x0a, 0x0d, 0x6c, 0x69, 0x76, 0x65, 0x6e, 0x65, 0x73, 0x73, 0x50, 0x72, 0x6f, 0x62, 0x65, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6c, 0x69, 0x76, 0x65, 0x6e, 0x65, 0x73, 0x73, 0x50,
	0x72, 0x6f, 0x62, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x72, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x65, 0x73,
	0x73, 0x50, 0x72, 0x6f, 0x62, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x65,
	0x61, 0x64, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x50, 0x72, 0x6f, 0x62, 0x65, 0x12, 0x22, 0x0a, 0x0c,
	0x72, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x11, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x72, 0x65, 0x61, 0x64, 0x79, 0x18, 0x12, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x05, 0x72, 0x65, 0x61, 0x64, 0x79, 0x22, 0x8b, 0x01, 0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74, 0x50,
	0x6f, 0x64, 0x52, 0x65, 0x71, 0x12, 0x25, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10,
	0x01, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x65, 0x12, 0x24,
	0x0a, 0x0d, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x53, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x22, 0xf6, 0x09, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x64,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75,
	0x65, 0x12, 0x32, 0x0a, 0x03, 0x70, 0x6f, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x50, 0x6f, 0x64,
	0x52, 0x03, 0x70, 0x6f, 0x64, 0x1a, 0x95, 0x09, 0x0a, 0x03, 0x50, 0x6f, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x2c, 0x0a, 0x11, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x61, 0x73, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x61, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x68,
	0x6f, 0x73, 0x74, 0x49, 0x50, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x68, 0x6f, 0x73,
	0x74, 0x49, 0x50, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x6f, 0x64, 0x49, 0x50, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x70, 0x6f, 0x64, 0x49, 0x50, 0x12, 0x44, 0x0a, 0x06, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x6f, 0x6e, 0x65, 0x4b,
	0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50,
	0x6f, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x50, 0x6f, 0x64, 0x2e, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12,
	0x3e, 0x0a, 0x04, 0x65, 0x6e, 0x76, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e,
	0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x50, 0x6f, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x50, 0x6f, 0x64, 0x2e,
	0x45, 0x6e, 0x76, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x65, 0x6e, 0x76, 0x73, 0x12,
	0x48, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x2e, 0x50, 0x6f, 0x64, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x09,
	0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x1a, 0x39, 0x0a, 0x0b, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x1a, 0x37, 0x0a, 0x09, 0x45, 0x6e, 0x76, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x8d, 0x05,
	0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67,
	0x44, 0x69, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x69,
	0x6e, 0x67, 0x44, 0x69, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12,
	0x28, 0x0a, 0x0f, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x78, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69,
	0x74, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x73, 0x43, 0x70, 0x75, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x43, 0x70, 0x75, 0x12, 0x26, 0x0a, 0x0e, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0e, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x4d, 0x65, 0x6d,
	0x6f, 0x72, 0x79, 0x12, 0x28, 0x0a, 0x0f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x53,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x12, 0x3a, 0x0a,
	0x18, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x45, 0x70, 0x68, 0x65, 0x6d, 0x65, 0x72, 0x61, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x18, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x45, 0x70, 0x68, 0x65, 0x6d, 0x65, 0x72, 0x61, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x43, 0x70, 0x75, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x43, 0x70, 0x75, 0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x4d, 0x65,
	0x6d, 0x6f, 0x72, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x12, 0x34, 0x0a, 0x15, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x45, 0x70, 0x68, 0x65, 0x6d,
	0x65, 0x72, 0x61, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x15, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x45, 0x70, 0x68, 0x65, 0x6d, 0x65, 0x72, 0x61,
	0x6c, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x74, 0x61, 0x72, 0x74, 0x75, 0x70, 0x50, 0x72, 0x6f, 0x62,
	0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x74, 0x61, 0x72, 0x74, 0x75, 0x70,
	0x50, 0x72, 0x6f, 0x62, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x6c, 0x69, 0x76, 0x65, 0x6e, 0x65, 0x73,
	0x73, 0x50, 0x72, 0x6f, 0x62, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6c, 0x69,
	0x76, 0x65, 0x6e, 0x65, 0x73, 0x73, 0x50, 0x72, 0x6f, 0x62, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x72,
	0x65, 0x61, 0x64, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x50, 0x72, 0x6f, 0x62, 0x65, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x50, 0x72,
	0x6f, 0x62, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x65, 0x61, 0x64, 0x79,
	0x18, 0x12, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x72, 0x65, 0x61, 0x64, 0x79, 0x22, 0x4f, 0x0a,
	0x0c, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x6f, 0x64, 0x52, 0x65, 0x71, 0x12, 0x25, 0x0a,
	0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x22, 0xe4,
	0x09, 0x0a, 0x0e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x6f, 0x64, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x34, 0x0a, 0x03, 0x70, 0x6f, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22,
	0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x6f, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x50,
	0x6f, 0x64, 0x52, 0x03, 0x70, 0x6f, 0x64, 0x1a, 0x9b, 0x09, 0x0a, 0x03, 0x50, 0x6f, 0x64, 0x12,
	0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x2c, 0x0a, 0x11, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x61, 0x73, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x61, 0x73, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x68, 0x6f, 0x73, 0x74, 0x49, 0x50, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x68,
	0x6f, 0x73, 0x74, 0x49, 0x50, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x6f, 0x64, 0x49, 0x50, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x6f, 0x64, 0x49, 0x50, 0x12, 0x46, 0x0a, 0x06, 0x6c,
	0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x6f, 0x6e,
	0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x50, 0x6f, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x50, 0x6f, 0x64, 0x2e,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x73, 0x12, 0x40, 0x0a, 0x04, 0x65, 0x6e, 0x76, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2c, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x6f, 0x64, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x2e, 0x50, 0x6f, 0x64, 0x2e, 0x45, 0x6e, 0x76, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x04, 0x65, 0x6e, 0x76, 0x73, 0x12, 0x4a, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e,
	0x65, 0x72, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75,
	0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x50, 0x6f, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x50, 0x6f, 0x64, 0x2e, 0x43, 0x6f, 0x6e,
	0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65,
	0x72, 0x1a, 0x39, 0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x37, 0x0a, 0x09,
	0x45, 0x6e, 0x76, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x8d, 0x05, 0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x44, 0x69, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x44, 0x69, 0x72, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x73, 0x65, 0x63, 0x75, 0x72,
	0x69, 0x74, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x43, 0x70, 0x75,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73,
	0x43, 0x70, 0x75, 0x12, 0x26, 0x0a, 0x0e, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x4d,
	0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x73, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x28, 0x0a, 0x0f, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x53, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x12, 0x3a, 0x0a, 0x18, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x73, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x45, 0x70, 0x68, 0x65, 0x6d, 0x65, 0x72, 0x61,
	0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x18, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x73, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x45, 0x70, 0x68, 0x65, 0x6d, 0x65, 0x72, 0x61,
	0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x43, 0x70, 0x75, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x43, 0x70, 0x75, 0x12, 0x20, 0x0a,
	0x0b, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0b, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12,
	0x22, 0x0a, 0x0c, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x53, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x12, 0x34, 0x0a, 0x15, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x53, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x45, 0x70, 0x68, 0x65, 0x6d, 0x65, 0x72, 0x61, 0x6c, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x15, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x45, 0x70, 0x68, 0x65, 0x6d, 0x65, 0x72, 0x61, 0x6c, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x75, 0x70, 0x50, 0x72, 0x6f, 0x62, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x73, 0x74, 0x61, 0x72, 0x74, 0x75, 0x70, 0x50, 0x72, 0x6f, 0x62, 0x65, 0x12, 0x24, 0x0a,
	0x0d, 0x6c, 0x69, 0x76, 0x65, 0x6e, 0x65, 0x73, 0x73, 0x50, 0x72, 0x6f, 0x62, 0x65, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6c, 0x69, 0x76, 0x65, 0x6e, 0x65, 0x73, 0x73, 0x50, 0x72,
	0x6f, 0x62, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x72, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x50, 0x72, 0x6f, 0x62, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x65, 0x61,
	0x64, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x50, 0x72, 0x6f, 0x62, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x72,
	0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x72, 0x65, 0x61, 0x64, 0x79, 0x18, 0x12, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05,
	0x72, 0x65, 0x61, 0x64, 0x79, 0x22, 0x4f, 0x0a, 0x09, 0x44, 0x65, 0x6c, 0x50, 0x6f, 0x64, 0x52,
	0x65, 0x71, 0x12, 0x25, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x09,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1b, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x25, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x50, 0x6f, 0x64,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x51, 0x0a,
	0x0b, 0x45, 0x76, 0x69, 0x63, 0x74, 0x50, 0x6f, 0x64, 0x52, 0x65, 0x71, 0x12, 0x25, 0x0a, 0x09,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x12, 0x1b, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x22, 0x27, 0x0a, 0x0d, 0x45, 0x76, 0x69, 0x63, 0x74, 0x50, 0x6f, 0x64, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x37, 0x0a, 0x0e, 0x44, 0x65, 0x6c,
	0x45, 0x76, 0x69, 0x63, 0x74, 0x50, 0x6f, 0x64, 0x52, 0x65, 0x71, 0x12, 0x25, 0x0a, 0x09, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x22, 0x2a, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x45, 0x76, 0x69, 0x63, 0x74, 0x50, 0x6f,
	0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x71,
	0x0a, 0x0b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x6f, 0x72,
	0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x50, 0x6f, 0x72,
	0x74, 0x22, 0xd2, 0x03, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x12, 0x25, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02,
	0x10, 0x01, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1b, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x72, 0x02, 0x10, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x0b, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x4a, 0x0a, 0x08, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62,
	0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x12, 0x31, 0x0a, 0x05, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x52, 0x05, 0x70,
	0x6f, 0x72, 0x74, 0x73, 0x12, 0x53, 0x0a, 0x0b, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x6f, 0x6e, 0x65, 0x4b,
	0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x2e, 0x41, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x61, 0x6e,
	0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x3b, 0x0a, 0x0d, 0x53, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x3e, 0x0a, 0x10, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x2c, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x22, 0x37, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x12, 0x25, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02,
	0x10, 0x01, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x22, 0x95, 0x05,
	0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x42, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x07, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x1a, 0xbc, 0x04, 0x0a, 0x07, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x5b,
	0x0a, 0x0b, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x6e,
	0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b,
	0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x63,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x50, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x50, 0x12, 0x28, 0x0a, 0x0f, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x41, 0x66, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x41, 0x66, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x4c, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c,
	0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62,
	0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x6c,
	0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x31, 0x0a, 0x05, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x09,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64,
	0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x6f, 0x72,
	0x74, 0x52, 0x05, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x45, 0x78, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x49, 0x50, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x45,
	0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x50, 0x73, 0x1a, 0x3e, 0x0a, 0x10, 0x41, 0x6e,
	0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x39, 0x0a, 0x0b, 0x4c, 0x61,
	0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x53, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x12, 0x25, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02,
	0x10, 0x01, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1b, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x72, 0x02, 0x10, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xb2, 0x04, 0x0a, 0x0f, 0x47,
	0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x12, 0x28, 0x0a, 0x0f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x50, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x50, 0x12, 0x28, 0x0a, 0x0f, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x41, 0x66, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x41, 0x66, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x43, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73,
	0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65,
	0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x52, 0x0a, 0x0b, 0x61,
	0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x30, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x2e, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x0b, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x31, 0x0a, 0x05, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x52, 0x05, 0x70, 0x6f, 0x72,
	0x74, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x50,
	0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x49, 0x50, 0x73, 0x1a, 0x39, 0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a,
	0x3e, 0x0a, 0x10, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0x53, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x12, 0x25, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x09, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1b, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x22, 0x29, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22,
	0xf9, 0x06, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x73,
	0x73, 0x52, 0x65, 0x71, 0x12, 0x25, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01,
	0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1b, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02,
	0x10, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x53, 0x0a, 0x0b, 0x61, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e,
	0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x2e,
	0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x0b, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x44, 0x0a,
	0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e,
	0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x2e,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x73, 0x12, 0x47, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x06,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64,
	0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x67, 0x72,
	0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x1a, 0x3e, 0x0a, 0x10,
	0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x39, 0x0a, 0x0b,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x64, 0x0a, 0x0c, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x3e, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75,
	0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x49, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0xdb, 0x02,
	0x0a, 0x07, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x6c, 0x73,
	0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x6c,
	0x73, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x46, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45,
	0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x67,
	0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x50, 0x61, 0x74, 0x68, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x1a,
	0x66, 0x0a, 0x09, 0x50, 0x61, 0x74, 0x68, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x43,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e,
	0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x2e,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x61, 0x74, 0x68, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x81, 0x01, 0x0a, 0x04, 0x50, 0x61, 0x74, 0x68,
	0x12, 0x23, 0x0a, 0x08, 0x70, 0x61, 0x74, 0x68, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x08, 0x70, 0x61, 0x74,
	0x68, 0x54, 0x79, 0x70, 0x65, 0x12, 0x29, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72,
	0x02, 0x10, 0x01, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x29, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x20, 0x01, 0x52, 0x0b,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x22, 0x2c, 0x0a, 0x12, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xf9, 0x06, 0x0a, 0x10, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x12, 0x25,
	0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1b, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x53, 0x0a, 0x0b, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62,
	0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49,
	0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x2e, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x61, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x44, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c,
	0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62,
	0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49,
	0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x47, 0x0a,
	0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d,
	0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71,
	0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x1a, 0x3e, 0x0a, 0x10, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x39, 0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x1a, 0x64, 0x0a, 0x0c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x3e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x73,
	0x73, 0x52, 0x65, 0x71, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0xdb, 0x02, 0x0a, 0x07, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x6c, 0x73, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x6c, 0x73, 0x53, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x12, 0x46, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x32, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65,
	0x71, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x61, 0x74, 0x68, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x1a, 0x66, 0x0a, 0x09, 0x50, 0x61, 0x74,
	0x68, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x43, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62,
	0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49,
	0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x50, 0x61, 0x74, 0x68, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x1a, 0x81, 0x01, 0x0a, 0x04, 0x50, 0x61, 0x74, 0x68, 0x12, 0x23, 0x0a, 0x08, 0x70, 0x61,
	0x74, 0x68, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x08, 0x70, 0x61, 0x74, 0x68, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x29, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0b, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x0b, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x20, 0x01, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x50, 0x6f, 0x72, 0x74, 0x22, 0x2c, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49,
	0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x22, 0x37, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x67, 0x72, 0x65,
	0x73, 0x73, 0x52, 0x65, 0x71, 0x12, 0x25, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10,
	0x01, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x22, 0xf9, 0x07, 0x0a,
	0x10, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x42, 0x0a, 0x07, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x2e, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x07, 0x69, 0x6e,
	0x67, 0x72, 0x65, 0x73, 0x73, 0x1a, 0xa0, 0x07, 0x0a, 0x07, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x25, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x09, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1b, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x5b, 0x0a, 0x0b, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x6f, 0x6e, 0x65,
	0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x49, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x49, 0x6e, 0x67,
	0x72, 0x65, 0x73, 0x73, 0x2e, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x4c, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x34, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x2e, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x2e, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73,
	0x12, 0x4f, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x35, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x2e, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x2e, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x1a, 0x3e, 0x0a, 0x10, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x1a, 0x39, 0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x6c, 0x0a, 0x0c,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x46,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e,
	0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e,
	0x49, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0xeb, 0x02, 0x0a, 0x07, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x6c, 0x73, 0x53, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x6c, 0x73, 0x53, 0x65,
	0x63, 0x72, 0x65, 0x74, 0x12, 0x4e, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x2e, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x2e, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x61, 0x74, 0x68, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04,
	0x70, 0x61, 0x74, 0x68, 0x1a, 0x6e, 0x0a, 0x09, 0x50, 0x61, 0x74, 0x68, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x4b, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x35, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x2e, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x2e, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x61, 0x74, 0x68, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x1a, 0x81, 0x01, 0x0a, 0x04, 0x50, 0x61, 0x74, 0x68, 0x12, 0x23, 0x0a,
	0x08, 0x70, 0x61, 0x74, 0x68, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x08, 0x70, 0x61, 0x74, 0x68, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x29, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01,
	0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x29, 0x0a,
	0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x20, 0x01, 0x52, 0x0b, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x22, 0x53, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x49,
	0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x12, 0x25, 0x0a, 0x09, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x12, 0x1b, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xf2, 0x06,
	0x0a, 0x0f, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x25, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x09, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1b, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x52, 0x0a, 0x0b, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x6f, 0x6e, 0x65,
	0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x49,
	0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x41, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x61, 0x6e,
	0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x43, 0x0a, 0x06, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x6f, 0x6e, 0x65, 0x4b,
	0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e,
	0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x46,
	0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2c, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x1a, 0x3e, 0x0a, 0x10, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x39, 0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x1a, 0x63, 0x0a, 0x0c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x3d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0xd9, 0x02, 0x0a, 0x07, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x6c, 0x73, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x6c, 0x73, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x12, 0x45, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31,
	0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x61, 0x74, 0x68, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x1a, 0x65, 0x0a, 0x09, 0x50, 0x61, 0x74, 0x68, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x42, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45,
	0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x73,
	0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50,
	0x61, 0x74, 0x68, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x81,
	0x01, 0x0a, 0x04, 0x50, 0x61, 0x74, 0x68, 0x12, 0x23, 0x0a, 0x08, 0x70, 0x61, 0x74, 0x68, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02,
	0x10, 0x01, 0x52, 0x08, 0x70, 0x61, 0x74, 0x68, 0x54, 0x79, 0x70, 0x65, 0x12, 0x29, 0x0a, 0x0b,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x1a, 0x02, 0x20, 0x01, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x6f,
	0x72, 0x74, 0x22, 0x53, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73,
	0x52, 0x65, 0x71, 0x12, 0x25, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52,
	0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1b, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10,
	0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x29, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x49, 0x6e,
	0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x22, 0x3e, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x61, 0x64,
	0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x25, 0x0a, 0x09, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x22, 0x19, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x61, 0x64,
	0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x3c, 0x0a,
	0x13, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x6f, 0x61, 0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x12, 0x25, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01,
	0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x22, 0x17, 0x0a, 0x15, 0x4c,
	0x69, 0x73, 0x74, 0x4c, 0x6f, 0x61, 0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x72, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x3b, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x61, 0x64, 0x42,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x25, 0x0a, 0x09, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x22, 0x16, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x61, 0x64, 0x42, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x3b, 0x0a, 0x12, 0x44, 0x65, 0x6c,
	0x4c, 0x6f, 0x61, 0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12,
	0x25, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x09, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x22, 0x16, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x4c, 0x6f, 0x61,
	0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x3d,
	0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x66, 0x75, 0x6c,
	0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x12, 0x25, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02,
	0x10, 0x01, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x22, 0x18, 0x0a,
	0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x66, 0x75, 0x6c, 0x53,
	0x65, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x3b, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x66, 0x75, 0x6c, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x12, 0x25, 0x0a,
	0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x22, 0x16, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x66, 0x75, 0x6c, 0x53, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x3a, 0x0a, 0x11,
	0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x66, 0x75, 0x6c, 0x53, 0x65, 0x74, 0x52, 0x65,
	0x71, 0x12, 0x25, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x09, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x22, 0x15, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x66, 0x75, 0x6c, 0x53, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x3a, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x66, 0x75, 0x6c, 0x53, 0x65,
	0x74, 0x52, 0x65, 0x71, 0x12, 0x25, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01,
	0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x22, 0x15, 0x0a, 0x13, 0x44,
	0x65, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x66, 0x75, 0x6c, 0x53, 0x65, 0x74, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x19, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x65, 0x72, 0x73, 0x69, 0x73,
	0x74, 0x65, 0x6e, 0x74, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x22, 0xd2, 0x04,
	0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74,
	0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x66, 0x0a, 0x10, 0x70,
	0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45,
	0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x65, 0x72, 0x73, 0x69,
	0x73, 0x74, 0x65, 0x6e, 0x74, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x2e, 0x50, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x56, 0x6f, 0x6c, 0x75, 0x6d,
	0x65, 0x52, 0x10, 0x70, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x56, 0x6f, 0x6c,
	0x75, 0x6d, 0x65, 0x1a, 0xcc, 0x03, 0x0a, 0x10, 0x50, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65,
	0x6e, 0x74, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x11,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x5e, 0x0a, 0x06, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x46, 0x2e, 0x6f, 0x6e, 0x65,
	0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x50, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x50, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74,
	0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x6d, 0x0a, 0x0b, 0x61, 0x6e,
	0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x4b, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x56,
	0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x50, 0x65, 0x72, 0x73, 0x69,
	0x73, 0x74, 0x65, 0x6e, 0x74, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x2e, 0x41, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x61, 0x6e,
	0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x61,
	0x73, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x61, 0x73, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x1a, 0x39, 0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x1a, 0x3e, 0x0a, 0x10, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0x45, 0x0a, 0x1c, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x65, 0x72, 0x73, 0x69, 0x73,
	0x74, 0x65, 0x6e, 0x74, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x52,
	0x65, 0x71, 0x12, 0x25, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x09,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x22, 0xc0, 0x05, 0x0a, 0x1e, 0x4c, 0x69,
	0x73, 0x74, 0x50, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x56, 0x6f, 0x6c, 0x75,
	0x6d, 0x65, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x7a, 0x0a, 0x15,
	0x70, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65,
	0x43, 0x6c, 0x61, 0x69, 0x6d, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x44, 0x2e, 0x6f, 0x6e,
	0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x50, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x56, 0x6f, 0x6c, 0x75, 0x6d,
	0x65, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x50, 0x65, 0x72, 0x73,
	0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x43, 0x6c, 0x61, 0x69,
	0x6d, 0x52, 0x15, 0x70, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x56, 0x6f, 0x6c,
	0x75, 0x6d, 0x65, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x1a, 0xa1, 0x04, 0x0a, 0x15, 0x50, 0x65, 0x72,
	0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x43, 0x6c, 0x61,
	0x69, 0x6d, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x11, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x12, 0x68, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x50, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65,
	0x6e, 0x74, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x2e, 0x50, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x56, 0x6f, 0x6c,
	0x75, 0x6d, 0x65, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x77, 0x0a, 0x0b,
	0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x55, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e,
	0x74, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x2e, 0x50, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x56, 0x6f, 0x6c, 0x75,
	0x6d, 0x65, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x2e, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x76, 0x6f, 0x6c, 0x75, 0x6d,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x10, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x4e, 0x61, 0x6d,
	0x65, 0x1a, 0x39, 0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x3e, 0x0a, 0x10,
	0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x3f, 0x0a, 0x1f,
	0x47, 0x65, 0x74, 0x45, 0x78, 0x70, 0x69, 0x72, 0x69, 0x6e, 0x67, 0x53, 0x6f, 0x6f, 0x6e, 0x4b,
	0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x54, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x12,
	0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x22, 0x90, 0x05,
	0x0a, 0x21, 0x47, 0x65, 0x74, 0x45, 0x78, 0x70, 0x69, 0x72, 0x69, 0x6e, 0x67, 0x53, 0x6f, 0x6f,
	0x6e, 0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x54, 0x6c, 0x73, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x89, 0x01, 0x0a, 0x19, 0x65, 0x78, 0x70, 0x69, 0x72, 0x69, 0x6e, 0x67,
	0x53, 0x6f, 0x6f, 0x6e, 0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x54, 0x6c,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4b, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62,
	0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x78, 0x70, 0x69,
	0x72, 0x69, 0x6e, 0x67, 0x53, 0x6f, 0x6f, 0x6e, 0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74,
	0x65, 0x73, 0x54, 0x6c, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x45, 0x78, 0x70, 0x69, 0x72,
	0x69, 0x6e, 0x67, 0x53, 0x6f, 0x6f, 0x6e, 0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65,
	0x73, 0x54, 0x6c, 0x73, 0x52, 0x19, 0x65, 0x78, 0x70, 0x69, 0x72, 0x69, 0x6e, 0x67, 0x53, 0x6f,
	0x6f, 0x6e, 0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x54, 0x6c, 0x73, 0x12,
	0x9b, 0x01, 0x0a, 0x1f, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x45, 0x78, 0x70, 0x69, 0x72, 0x69,
	0x6e, 0x67, 0x53, 0x6f, 0x6f, 0x6e, 0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73,
	0x54, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x51, 0x2e, 0x6f, 0x6e, 0x65, 0x4b,
	0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x78,
	0x70, 0x69, 0x72, 0x69, 0x6e, 0x67, 0x53, 0x6f, 0x6f, 0x6e, 0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e,
	0x65, 0x74, 0x65, 0x73, 0x54, 0x6c, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x46, 0x61, 0x69,
	0x6c, 0x65, 0x64, 0x45, 0x78, 0x70, 0x69, 0x72, 0x69, 0x6e, 0x67, 0x53, 0x6f, 0x6f, 0x6e, 0x4b,
	0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x54, 0x6c, 0x73, 0x52, 0x1f, 0x66, 0x61,
	0x69, 0x6c, 0x65, 0x64, 0x45, 0x78, 0x70, 0x69, 0x72, 0x69, 0x6e, 0x67, 0x53, 0x6f, 0x6f, 0x6e,
	0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x54, 0x6c, 0x73, 0x1a, 0x53, 0x0a,
	0x1f, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x45, 0x78, 0x70, 0x69, 0x72, 0x69, 0x6e, 0x67, 0x53,
	0x6f, 0x6f, 0x6e, 0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x54, 0x6c, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x53, 0x70, 0x61, 0x63,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x53, 0x70, 0x61,
	0x63, 0x65, 0x1a, 0xeb, 0x01, 0x0a, 0x19, 0x45, 0x78, 0x70, 0x69, 0x72, 0x69, 0x6e, 0x67, 0x53,
	0x6f, 0x6f, 0x6e, 0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x54, 0x6c, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x53, 0x70, 0x61, 0x63,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x53, 0x70, 0x61,
	0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x6e, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x64, 0x6e, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x69,
	0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08,
	0x6e, 0x6f, 0x74, 0x41, 0x66, 0x74, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x6e, 0x6f, 0x74, 0x41, 0x66, 0x74, 0x65, 0x72, 0x12, 0x26, 0x0a, 0x0e, 0x6e, 0x6f, 0x74, 0x41,
	0x66, 0x74, 0x65, 0x72, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x6e, 0x6f, 0x74, 0x41, 0x66, 0x74, 0x65, 0x72, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x2a, 0x2f, 0x0a, 0x0c, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x11, 0x0a, 0x0d, 0x52, 0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x65, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x10,
	0x01, 0x32, 0x81, 0x2f, 0x0a, 0x0b, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67,
	0x65, 0x12, 0x63, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x53,
	0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x24, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65,
	0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e, 0x6f,
	0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x5d, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x12, 0x22, 0x2e, 0x6f, 0x6e, 0x65, 0x4b,
	0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e,
	0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x57, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x12, 0x20, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65,
	0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x53, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75,
	0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x54,
	0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1f,
	0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x44, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x1a,
	0x21, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x44, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x00, 0x12, 0x5d, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x4d, 0x61, 0x70, 0x12, 0x22, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62,
	0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4d, 0x61, 0x70, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x6f, 0x6e,
	0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4d, 0x61, 0x70, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x00, 0x12, 0x57, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x4d, 0x61, 0x70, 0x12, 0x20, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64,
	0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x4d, 0x61, 0x70, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65,
	0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x4d, 0x61, 0x70, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x54, 0x0a, 0x0c,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4d, 0x61, 0x70, 0x12, 0x1f, 0x2e, 0x6f,
	0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4d, 0x61, 0x70, 0x52, 0x65, 0x71, 0x1a, 0x21, 0x2e,
	0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4d, 0x61, 0x70, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x00, 0x12, 0x54, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4d,
	0x61, 0x70, 0x12, 0x1f, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4d, 0x61, 0x70,
	0x52, 0x65, 0x71, 0x1a, 0x21, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4d, 0x61,
	0x70, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x5d, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4d, 0x61, 0x70, 0x12, 0x22, 0x2e, 0x6f, 0x6e,
	0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4d, 0x61, 0x70, 0x52, 0x65, 0x71, 0x1a,
	0x24, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4d, 0x61, 0x70,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74, 0x53,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x1d, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45,
	0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64,
	0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x53, 0x65,
	0x63, 0x72, 0x65, 0x74, 0x12, 0x1c, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64,
	0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52,
	0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x09, 0x44, 0x65, 0x6c, 0x53, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x12, 0x1c, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x71, 0x1a,
	0x1e, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x44, 0x65, 0x6c, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x00, 0x12, 0x84, 0x01, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x45, 0x78, 0x70, 0x69, 0x72, 0x69, 0x6e,
	0x67, 0x53, 0x6f, 0x6f, 0x6e, 0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x54,
	0x6c, 0x73, 0x12, 0x2f, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x78, 0x70, 0x69, 0x72, 0x69, 0x6e, 0x67, 0x53,
	0x6f, 0x6f, 0x6e, 0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x54, 0x6c, 0x73,
	0x52, 0x65, 0x71, 0x1a, 0x31, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x78, 0x70, 0x69, 0x72, 0x69, 0x6e, 0x67,
	0x53, 0x6f, 0x6f, 0x6e, 0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x54, 0x6c,
	0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x5d, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x6c, 0x73, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x22, 0x2e, 0x6f, 0x6e,
	0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x6c, 0x73, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x71, 0x1a,
	0x24, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x6c, 0x73, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x66, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4f, 0x70, 0x61, 0x71, 0x75, 0x65, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x25, 0x2e,
	0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x70, 0x61, 0x71, 0x75, 0x65, 0x53, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x52, 0x65, 0x71, 0x1a, 0x27, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64,
	0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x70, 0x61, 0x71,
	0x75, 0x65, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12,
	0x84, 0x01, 0x0a, 0x1c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x63, 0x6b, 0x65, 0x72,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4a, 0x73, 0x6f, 0x6e, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x12, 0x2f, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x4a, 0x73, 0x6f, 0x6e, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65,
	0x71, 0x1a, 0x31, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4a, 0x73, 0x6f, 0x6e, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x6f, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x42, 0x61, 0x73, 0x69, 0x63, 0x41, 0x75, 0x74, 0x68, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12,
	0x28, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x61, 0x73, 0x69, 0x63, 0x41, 0x75, 0x74, 0x68,
	0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x2a, 0x2e, 0x6f, 0x6e, 0x65, 0x4b,
	0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x42, 0x61, 0x73, 0x69, 0x63, 0x41, 0x75, 0x74, 0x68, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x69, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x53, 0x73, 0x68, 0x41, 0x75, 0x74, 0x68, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x26,
	0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x73, 0x68, 0x41, 0x75, 0x74, 0x68, 0x53, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x28, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65,
	0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x73,
	0x68, 0x41, 0x75, 0x74, 0x68, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x00, 0x12, 0x5d, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x6c, 0x73, 0x53,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x22, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45,
	0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x6c, 0x73,
	0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x6f, 0x6e, 0x65, 0x4b,
	0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x54, 0x6c, 0x73, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x00, 0x12, 0x66, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x70, 0x61, 0x71, 0x75,
	0x65, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x25, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62,
	0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f,
	0x70, 0x61, 0x71, 0x75, 0x65, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x27,
	0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x70, 0x61, 0x71, 0x75, 0x65, 0x53, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x84, 0x01, 0x0a, 0x1c, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x4a, 0x73, 0x6f, 0x6e, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x2f, 0x2e, 0x6f, 0x6e, 0x65,
	0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x44, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4a, 0x73,
	0x6f, 0x6e, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x31, 0x2e, 0x6f, 0x6e,
	0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x44, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4a,
	0x73, 0x6f, 0x6e, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00,
	0x12, 0x6f, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x61, 0x73, 0x69, 0x63, 0x41,
	0x75, 0x74, 0x68, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x28, 0x2e, 0x6f, 0x6e, 0x65, 0x4b,
	0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x42, 0x61, 0x73, 0x69, 0x63, 0x41, 0x75, 0x74, 0x68, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x52, 0x65, 0x71, 0x1a, 0x2a, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x61, 0x73, 0x69, 0x63,
	0x41, 0x75, 0x74, 0x68, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x00, 0x12, 0x69, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x73, 0x68, 0x41, 0x75,
	0x74, 0x68, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x26, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75,
	0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x53, 0x73, 0x68, 0x41, 0x75, 0x74, 0x68, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x71,
	0x1a, 0x28, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x73, 0x68, 0x41, 0x75, 0x74, 0x68, 0x53,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x60, 0x0a, 0x10,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x23, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x25, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45,
	0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x5a,
	0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x21, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x57, 0x0a, 0x0d, 0x47, 0x65,
	0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x20, 0x2e, 0x6f, 0x6e,
	0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e,
	0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x00, 0x12, 0x57, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x20, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64,
	0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65,
	0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x44, 0x65, 0x70, 0x6c, 0x6f,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x6c, 0x0a, 0x14,
	0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x27, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64,
	0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x29, 0x2e,
	0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x60, 0x0a, 0x10, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x23,
	0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x1a, 0x25, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x7e, 0x0a, 0x1a,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x53, 0x65, 0x74, 0x12, 0x2d, 0x2e, 0x6f, 0x6e, 0x65,
	0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c,
	0x61, 0x63, 0x65, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x2f, 0x2e, 0x6f, 0x6e, 0x65, 0x4b,
	0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x61,
	0x63, 0x65, 0x53, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x5a, 0x0a, 0x0e,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x6c, 0x6c, 0x6f, 0x75, 0x74, 0x48, 0x69, 0x73, 0x12, 0x21,
	0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x6c, 0x6c, 0x6f, 0x75, 0x74, 0x48, 0x69, 0x73, 0x52, 0x65,
	0x71, 0x1a, 0x23, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x6c, 0x6c, 0x6f, 0x75, 0x74, 0x48, 0x69,
	0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x60, 0x0a, 0x10, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x23, 0x2e, 0x6f,
	0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x1a, 0x25, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x09, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4a, 0x6f, 0x62, 0x12, 0x1c, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62,
	0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4a,
	0x6f, 0x62, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45,
	0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4a, 0x6f, 0x62,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x07, 0x4c, 0x69, 0x73, 0x74, 0x4a,
	0x6f, 0x62, 0x12, 0x1a, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x1a, 0x1c,
	0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x42,
	0x0a, 0x06, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x12, 0x19, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75,
	0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62,
	0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x00, 0x12, 0x42, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x4a, 0x6f, 0x62, 0x12, 0x19, 0x2e, 0x6f,
	0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65,
	0x6c, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62,
	0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x4a, 0x6f, 0x62, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x5a, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x64,
	0x65, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x12, 0x21, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75,
	0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x64,
	0x65, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x6f, 0x6e,
	0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x4e, 0x6f, 0x64, 0x65, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x00, 0x12, 0x57, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x64, 0x4d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x73, 0x12, 0x20, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x64, 0x4d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45,
	0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x64, 0x4d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x07, 0x47,
	0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65,
	0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x52,
	0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x00, 0x12, 0x48, 0x0a, 0x08, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x1b,
	0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x6f, 0x6e,
	0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x07,
	0x4c, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x64, 0x12, 0x1a, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62,
	0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x64,
	0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x64, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x00, 0x12, 0x42, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x64, 0x12, 0x19, 0x2e,
	0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x50, 0x6f, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75,
	0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x64,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x09, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x50, 0x6f, 0x64, 0x12, 0x1c, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64,
	0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x6f, 0x64, 0x52,
	0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x6f, 0x64, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x00, 0x12, 0x42, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x50, 0x6f, 0x64, 0x12, 0x19,
	0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x44, 0x65, 0x6c, 0x50, 0x6f, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x6f, 0x6e, 0x65, 0x4b,
	0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x50, 0x6f,
	0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x08, 0x45, 0x76, 0x69, 0x63,
	0x74, 0x50, 0x6f, 0x64, 0x12, 0x1b, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64,
	0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x69, 0x63, 0x74, 0x50, 0x6f, 0x64, 0x52, 0x65,
	0x71, 0x1a, 0x1d, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x45, 0x76, 0x69, 0x63, 0x74, 0x50, 0x6f, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x00, 0x12, 0x51, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x45, 0x76, 0x69, 0x63, 0x74, 0x50, 0x6f,
	0x64, 0x12, 0x1e, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x45, 0x76, 0x69, 0x63, 0x74, 0x50, 0x6f, 0x64, 0x52, 0x65,
	0x71, 0x1a, 0x20, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x45, 0x76, 0x69, 0x63, 0x74, 0x50, 0x6f, 0x64, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x57, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x20, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65,
	0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75,
	0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x51,
	0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x1e, 0x2e,
	0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e,
	0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x00, 0x12, 0x4e, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x1d, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1f,
	0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x00, 0x12, 0x4e, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x1d, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x44, 0x65, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1f,
	0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x44, 0x65, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x00, 0x12, 0x57, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x67, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x20, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x73,
	0x73, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64,
	0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x67, 0x72,
	0x65, 0x73, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x57, 0x0a, 0x0d, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x20, 0x2e, 0x6f, 0x6e,
	0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e,
	0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x00, 0x12, 0x51, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x67, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x1e, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52,
	0x65, 0x71, 0x1a, 0x20, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x67,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x1d, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64,
	0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73,
	0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x49, 0x6e, 0x67,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x1d, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64,
	0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73,
	0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x66, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4c, 0x6f, 0x61, 0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x72, 0x12, 0x25, 0x2e, 0x6f,
	0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x61, 0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x1a, 0x27, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x61, 0x64, 0x42,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x60,
	0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x6f, 0x61, 0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x72, 0x12, 0x23, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x6f, 0x61, 0x64, 0x42, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x25, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62,
	0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x6f, 0x61,
	0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00,
	0x12, 0x5d, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x61, 0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x72, 0x12, 0x22, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x61, 0x64, 0x42, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62,
	0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x61, 0x64,
	0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12,
	0x5d, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x4c, 0x6f, 0x61, 0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x72, 0x12, 0x22, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x4c, 0x6f, 0x61, 0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65,
	0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x4c, 0x6f, 0x61, 0x64, 0x42,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x63,
	0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x66, 0x75, 0x6c,
	0x53, 0x65, 0x74, 0x12, 0x24, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x66, 0x75, 0x6c, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e, 0x6f, 0x6e, 0x65, 0x4b,
	0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x66, 0x75, 0x6c, 0x53, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x00, 0x12, 0x5d, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x66, 0x75, 0x6c, 0x53, 0x65, 0x74, 0x12, 0x22, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65,
	0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x66, 0x75, 0x6c, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x6f, 0x6e, 0x65,
	0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x66, 0x75, 0x6c, 0x53, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x00, 0x12, 0x5a, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x66, 0x75,
	0x6c, 0x53, 0x65, 0x74, 0x12, 0x21, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64,
	0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x66, 0x75,
	0x6c, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62,
	0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x66, 0x75, 0x6c, 0x53, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x5a,
	0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x66, 0x75, 0x6c, 0x53, 0x65, 0x74,
	0x12, 0x21, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x44, 0x65, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x66, 0x75, 0x6c, 0x53, 0x65, 0x74,
	0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x66, 0x75, 0x6c,
	0x53, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x6c, 0x0a, 0x14, 0x4c, 0x69,
	0x73, 0x74, 0x50, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x56, 0x6f, 0x6c, 0x75,
	0x6d, 0x65, 0x12, 0x27, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65,
	0x6e, 0x74, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x29, 0x2e, 0x6f, 0x6e,
	0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x50, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x56, 0x6f, 0x6c, 0x75, 0x6d,
	0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x7b, 0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74,
	0x50, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65,
	0x43, 0x6c, 0x61, 0x69, 0x6d, 0x12, 0x2c, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45,
	0x64, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x65, 0x72, 0x73, 0x69,
	0x73, 0x74, 0x65, 0x6e, 0x74, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x43, 0x6c, 0x61, 0x69, 0x6d,
	0x52, 0x65, 0x71, 0x1a, 0x2e, 0x2e, 0x6f, 0x6e, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74,
	0x65, 0x6e, 0x74, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x00, 0x42, 0x38, 0x5a, 0x36, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x6f, 0x70, 0x73, 0x7a, 0x2f, 0x6f, 0x6e,
	0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6f, 0x6e,
	0x65, 0x4b, 0x75, 0x62, 0x65, 0x45, 0x64, 0x67, 0x65, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescOnce sync.Once
	file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescData = file_oneKubeEdge_v1_oneKubeEdge_proto_rawDesc
)

func file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescGZIP() []byte {
	file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescOnce.Do(func() {
		file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescData = protoimpl.X.CompressGZIP(file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescData)
	})
	return file_oneKubeEdge_v1_oneKubeEdge_proto_rawDescData
}

var file_oneKubeEdge_v1_oneKubeEdge_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes = make([]protoimpl.MessageInfo, 271)
var file_oneKubeEdge_v1_oneKubeEdge_proto_goTypes = []interface{}{
	(StrategyType)(0),                           // 0: oneKubeEdge.v1.StrategyType
	(*GetClusterSummaryReq)(nil),                // 1: oneKubeEdge.v1.GetClusterSummaryReq
	(*GetClusterSummaryReply)(nil),              // 2: oneKubeEdge.v1.GetClusterSummaryReply
	(*GetNodeMetricsReq)(nil),                   // 3: oneKubeEdge.v1.GetNodeMetricsReq
	(*GetNodeMetricsReply)(nil),                 // 4: oneKubeEdge.v1.GetNodeMetricsReply
	(*GetPodMetricsReq)(nil),                    // 5: oneKubeEdge.v1.GetPodMetricsReq
	(*GetPodMetricsReply)(nil),                  // 6: oneKubeEdge.v1.GetPodMetricsReply
	(*CreateNameSpaceReq)(nil),                  // 7: oneKubeEdge.v1.CreateNameSpaceReq
	(*CreateNameSpaceReply)(nil),                // 8: oneKubeEdge.v1.CreateNameSpaceReply
	(*ListNameSpaceReq)(nil),                    // 9: oneKubeEdge.v1.ListNameSpaceReq
	(*ListNameSpaceReply)(nil),                  // 10: oneKubeEdge.v1.ListNameSpaceReply
	(*DelNameSpaceReq)(nil),                     // 11: oneKubeEdge.v1.DelNameSpaceReq
	(*DelNameSpaceReply)(nil),                   // 12: oneKubeEdge.v1.DelNameSpaceReply
	(*ConfigMap)(nil),                           // 13: oneKubeEdge.v1.ConfigMap
	(*CreateConfigMapReq)(nil),                  // 14: oneKubeEdge.v1.CreateConfigMapReq
	(*CreateConfigMapReply)(nil),                // 15: oneKubeEdge.v1.CreateConfigMapReply
	(*ListConfigMapReq)(nil),                    // 16: oneKubeEdge.v1.ListConfigMapReq
	(*ListConfigMapReply)(nil),                  // 17: oneKubeEdge.v1.ListConfigMapReply
	(*GetConfigMapReq)(nil),                     // 18: oneKubeEdge.v1.GetConfigMapReq
	(*GetConfigMapReply)(nil),                   // 19: oneKubeEdge.v1.GetConfigMapReply
	(*DelConfigMapReq)(nil),                     // 20: oneKubeEdge.v1.DelConfigMapReq
	(*DelConfigMapReply)(nil),                   // 21: oneKubeEdge.v1.DelConfigMapReply
	(*UpdateConfigMapReq)(nil),                  // 22: oneKubeEdge.v1.UpdateConfigMapReq
	(*UpdateConfigMapReply)(nil),                // 23: oneKubeEdge.v1.UpdateConfigMapReply
	(*Deployment)(nil),                          // 24: oneKubeEdge.v1.Deployment
	(*ObjectMeta)(nil),                          // 25: oneKubeEdge.v1.ObjectMeta
	(*DeploymentSpec)(nil),                      // 26: oneKubeEdge.v1.DeploymentSpec
	(*PodTemplateSpec)(nil),                     // 27: oneKubeEdge.v1.PodTemplateSpec
	(*LabelSelector)(nil),                       // 28: oneKubeEdge.v1.LabelSelector
	(*DeploymentStrategy)(nil),                  // 29: oneKubeEdge.v1.DeploymentStrategy
	(*PodSpec)(nil),                             // 30: oneKubeEdge.v1.PodSpec
	(*Volume)(nil),                              // 31: oneKubeEdge.v1.Volume
	(*EphemeralContainer)(nil),                  // 32: oneKubeEdge.v1.EphemeralContainer
	(*Selector)(nil),                            // 33: oneKubeEdge.v1.Selector
	(*Container)(nil),                           // 34: oneKubeEdge.v1.Container
	(*Env)(nil),                                 // 35: oneKubeEdge.v1.Env
	(*PodSecurityContext)(nil),                  // 36: oneKubeEdge.v1.PodSecurityContext
	(*PodSecurityContextSysctl)(nil),            // 37: oneKubeEdge.v1.PodSecurityContextSysctl
	(*ImagePullSecret)(nil),                     // 38: oneKubeEdge.v1.ImagePullSecret
	(*Toleration)(nil),                          // 39: oneKubeEdge.v1.Toleration
	(*PodDNSConfig)(nil),                        // 40: oneKubeEdge.v1.PodDNSConfig
	(*HostAlias)(nil),                           // 41: oneKubeEdge.v1.HostAlias
	(*Probe)(nil),                               // 42: oneKubeEdge.v1.Probe
	(*ProbeHandler)(nil),                        // 43: oneKubeEdge.v1.ProbeHandler
	(*ExecAction)(nil),                          // 44: oneKubeEdge.v1.ExecAction
	(*HTTPGetAction)(nil),                       // 45: oneKubeEdge.v1.HTTPGetAction
	(*TCPSocketAction)(nil),                     // 46: oneKubeEdge.v1.TCPSocketAction
	(*GRPCAction)(nil),                          // 47: oneKubeEdge.v1.GRPCAction
	(*Lifecycle)(nil),                           // 48: oneKubeEdge.v1.Lifecycle
	(*LifecycleHandler)(nil),                    // 49: oneKubeEdge.v1.LifecycleHandler
	(*EnvFromSource)(nil),                       // 50: oneKubeEdge.v1.EnvFromSource
	(*Resource)(nil),                            // 51: oneKubeEdge.v1.Resource
	(*ResourceLimit)(nil),                       // 52: oneKubeEdge.v1.ResourceLimit
	(*ResourceRequests)(nil),                    // 53: oneKubeEdge.v1.ResourceRequests
	(*DeploymentStatus)(nil),                    // 54: oneKubeEdge.v1.DeploymentStatus
	(*CreateDeploymentReq)(nil),                 // 55: oneKubeEdge.v1.CreateDeploymentReq
	(*CreateDeploymentReply)(nil),               // 56: oneKubeEdge.v1.CreateDeploymentReply
	(*ListDeploymentReq)(nil),                   // 57: oneKubeEdge.v1.ListDeploymentReq
	(*ListDeploymentReply)(nil),                 // 58: oneKubeEdge.v1.ListDeploymentReply
	(*ListDeploymentStatusReq)(nil),             // 59: oneKubeEdge.v1.ListDeploymentStatusReq
	(*ListDeploymentStatusReply)(nil),           // 60: oneKubeEdge.v1.ListDeploymentStatusReply
	(*GetDeploymentReq)(nil),                    // 61: oneKubeEdge.v1.GetDeploymentReq
	(*GetDeploymentReply)(nil),                  // 62: oneKubeEdge.v1.GetDeploymentReply
	(*DelDeploymentReq)(nil),                    // 63: oneKubeEdge.v1.DelDeploymentReq
	(*DelDeploymentReply)(nil),                  // 64: oneKubeEdge.v1.DelDeploymentReply
	(*UpdateDeploymentReq)(nil),                 // 65: oneKubeEdge.v1.UpdateDeploymentReq
	(*UpdateDeploymentReply)(nil),               // 66: oneKubeEdge.v1.UpdateDeploymentReply
	(*ListRolloutHisReq)(nil),                   // 67: oneKubeEdge.v1.ListRolloutHisReq
	(*ListRolloutHisReply)(nil),                 // 68: oneKubeEdge.v1.ListRolloutHisReply
	(*UpdateDeploymentReplaceSetReq)(nil),       // 69: oneKubeEdge.v1.UpdateDeploymentReplaceSetReq
	(*UpdateDeploymentReplaceSetReply)(nil),     // 70: oneKubeEdge.v1.UpdateDeploymentReplaceSetReply
	(*FilterDeploymentReq)(nil),                 // 71: oneKubeEdge.v1.FilterDeploymentReq
	(*FilterDeploymentReply)(nil),               // 72: oneKubeEdge.v1.FilterDeploymentReply
	(*ListSecretReq)(nil),                       // 73: oneKubeEdge.v1.ListSecretReq
	(*ListSecretReply)(nil),                     // 74: oneKubeEdge.v1.ListSecretReply
	(*GetSecretReq)(nil),                        // 75: oneKubeEdge.v1.GetSecretReq
	(*GetSecretReply)(nil),                      // 76: oneKubeEdge.v1.GetSecretReply
	(*DelSecretReq)(nil),                        // 77: oneKubeEdge.v1.DelSecretReq
	(*DelSecretReply)(nil),                      // 78: oneKubeEdge.v1.DelSecretReply
	(*CreateTlsSecretReq)(nil),                  // 79: oneKubeEdge.v1.CreateTlsSecretReq
	(*CreateTlsSecretReply)(nil),                // 80: oneKubeEdge.v1.CreateTlsSecretReply
	(*UpdateTlsSecretReq)(nil),                  // 81: oneKubeEdge.v1.UpdateTlsSecretReq
	(*UpdateTlsSecretReply)(nil),                // 82: oneKubeEdge.v1.UpdateTlsSecretReply
	(*CreateOpaqueSecretReq)(nil),               // 83: oneKubeEdge.v1.CreateOpaqueSecretReq
	(*CreateOpaqueSecretReply)(nil),             // 84: oneKubeEdge.v1.CreateOpaqueSecretReply
	(*UpdateOpaqueSecretReq)(nil),               // 85: oneKubeEdge.v1.UpdateOpaqueSecretReq
	(*UpdateOpaqueSecretReply)(nil),             // 86: oneKubeEdge.v1.UpdateOpaqueSecretReply
	(*CreateDockerConfigJsonSecretReq)(nil),     // 87: oneKubeEdge.v1.CreateDockerConfigJsonSecretReq
	(*CreateDockerConfigJsonSecretReply)(nil),   // 88: oneKubeEdge.v1.CreateDockerConfigJsonSecretReply
	(*UpdateDockerConfigJsonSecretReq)(nil),     // 89: oneKubeEdge.v1.UpdateDockerConfigJsonSecretReq
	(*UpdateDockerConfigJsonSecretReply)(nil),   // 90: oneKubeEdge.v1.UpdateDockerConfigJsonSecretReply
	(*CreateBasicAuthSecretReq)(nil),            // 91: oneKubeEdge.v1.CreateBasicAuthSecretReq
	(*CreateBasicAuthSecretReply)(nil),          // 92: oneKubeEdge.v1.CreateBasicAuthSecretReply
	(*UpdateBasicAuthSecretReq)(nil),            // 93: oneKubeEdge.v1.UpdateBasicAuthSecretReq
	(*UpdateBasicAuthSecretReply)(nil),          // 94: oneKubeEdge.v1.UpdateBasicAuthSecretReply
	(*CreateSshAuthSecretReq)(nil),              // 95: oneKubeEdge.v1.CreateSshAuthSecretReq
	(*CreateSshAuthSecretReply)(nil),            // 96: oneKubeEdge.v1.CreateSshAuthSecretReply
	(*UpdateSshAuthSecretReq)(nil),              // 97: oneKubeEdge.v1.UpdateSshAuthSecretReq
	(*UpdateSshAuthSecretReply)(nil),            // 98: oneKubeEdge.v1.UpdateSshAuthSecretReply
	(*CreateJobReq)(nil),                        // 99: oneKubeEdge.v1.CreateJobReq
	(*CreateJobReply)(nil),                      // 100: oneKubeEdge.v1.CreateJobReply
	(*ListJobReq)(nil),                          // 101: oneKubeEdge.v1.ListJobReq
	(*ListJobReply)(nil),                        // 102: oneKubeEdge.v1.ListJobReply
	(*GetJobReq)(nil),                           // 103: oneKubeEdge.v1.GetJobReq
	(*GetJobReply)(nil),                         // 104: oneKubeEdge.v1.GetJobReply
	(*DelJobReq)(nil),                           // 105: oneKubeEdge.v1.DelJobReq
	(*DelJobReply)(nil),                         // 106: oneKubeEdge.v1.DelJobReply
	(*ListNodeReq)(nil),                         // 107: oneKubeEdge.v1.ListNodeReq
	(*ListNodeReply)(nil),                       // 108: oneKubeEdge.v1.ListNodeReply
	(*GetNodeReq)(nil),                          // 109: oneKubeEdge.v1.GetNodeReq
	(*GetNodeReply)(nil),                        // 110: oneKubeEdge.v1.GetNodeReply
	(*GetPodReq)(nil),                           // 111: oneKubeEdge.v1.GetPodReq
	(*GetPodReply)(nil),                         // 112: oneKubeEdge.v1.GetPodReply
	(*ListPodReq)(nil),                          // 113: oneKubeEdge.v1.ListPodReq
	(*ListPodReply)(nil),                        // 114: oneKubeEdge.v1.ListPodReply
	(*SearchPodReq)(nil),                        // 115: oneKubeEdge.v1.SearchPodReq
	(*SearchPodReply)(nil),                      // 116: oneKubeEdge.v1.SearchPodReply
	(*DelPodReq)(nil),                           // 117: oneKubeEdge.v1.DelPodReq
	(*DelPodReply)(nil),                         // 118: oneKubeEdge.v1.DelPodReply
	(*EvictPodReq)(nil),                         // 119: oneKubeEdge.v1.EvictPodReq
	(*EvictPodReply)(nil),                       // 120: oneKubeEdge.v1.EvictPodReply
	(*DelEvictPodReq)(nil),                      // 121: oneKubeEdge.v1.DelEvictPodReq
	(*DelEvictPodReply)(nil),                    // 122: oneKubeEdge.v1.DelEvictPodReply
	(*ServicePort)(nil),                         // 123: oneKubeEdge.v1.ServicePort
	(*CreateServiceReq)(nil),                    // 124: oneKubeEdge.v1.CreateServiceReq
	(*CreateServiceReply)(nil),                  // 125: oneKubeEdge.v1.CreateServiceReply
	(*ListServiceReq)(nil),                      // 126: oneKubeEdge.v1.ListServiceReq
	(*ListServiceReply)(nil),                    // 127: oneKubeEdge.v1.ListServiceReply
	(*GetServiceReq)(nil),                       // 128: oneKubeEdge.v1.GetServiceReq
	(*GetServiceReply)(nil),                     // 129: oneKubeEdge.v1.GetServiceReply
	(*DelServiceReq)(nil),                       // 130: oneKubeEdge.v1.DelServiceReq
	(*DelServiceReply)(nil),                     // 131: oneKubeEdge.v1.DelServiceReply
	(*CreateIngressReq)(nil),                    // 132: oneKubeEdge.v1.CreateIngressReq
	(*CreateIngressReply)(nil),                  // 133: oneKubeEdge.v1.CreateIngressReply
	(*UpdateIngressReq)(nil),                    // 134: oneKubeEdge.v1.UpdateIngressReq
	(*UpdateIngressReply)(nil),                  // 135: oneKubeEdge.v1.UpdateIngressReply
	(*ListIngressReq)(nil),                      // 136: oneKubeEdge.v1.ListIngressReq
	(*ListIngressReply)(nil),                    // 137: oneKubeEdge.v1.ListIngressReply
	(*GetIngressReq)(nil),                       // 138: oneKubeEdge.v1.GetIngressReq
	(*GetIngressReply)(nil),                     // 139: oneKubeEdge.v1.GetIngressReply
	(*DelIngressReq)(nil),                       // 140: oneKubeEdge.v1.DelIngressReq
	(*DelIngressReply)(nil),                     // 141: oneKubeEdge.v1.DelIngressReply
	(*CreateLoadBalancerReq)(nil),               // 142: oneKubeEdge.v1.CreateLoadBalancerReq
	(*CreateLoadBalancerReply)(nil),             // 143: oneKubeEdge.v1.CreateLoadBalancerReply
	(*ListLoadBalancerReq)(nil),                 // 144: oneKubeEdge.v1.ListLoadBalancerReq
	(*ListLoadBalancerReply)(nil),               // 145: oneKubeEdge.v1.ListLoadBalancerReply
	(*GetLoadBalancerReq)(nil),                  // 146: oneKubeEdge.v1.GetLoadBalancerReq
	(*GetLoadBalancerReply)(nil),                // 147: oneKubeEdge.v1.GetLoadBalancerReply
	(*DelLoadBalancerReq)(nil),                  // 148: oneKubeEdge.v1.DelLoadBalancerReq
	(*DelLoadBalancerReply)(nil),                // 149: oneKubeEdge.v1.DelLoadBalancerReply
	(*CreateStatefulSetReq)(nil),                // 150: oneKubeEdge.v1.CreateStatefulSetReq
	(*CreateStatefulSetReply)(nil),              // 151: oneKubeEdge.v1.CreateStatefulSetReply
	(*ListStatefulSetReq)(nil),                  // 152: oneKubeEdge.v1.ListStatefulSetReq
	(*ListStatefulSetReply)(nil),                // 153: oneKubeEdge.v1.ListStatefulSetReply
	(*GetStatefulSetReq)(nil),                   // 154: oneKubeEdge.v1.GetStatefulSetReq
	(*GetStatefulSetReply)(nil),                 // 155: oneKubeEdge.v1.GetStatefulSetReply
	(*DelStatefulSetReq)(nil),                   // 156: oneKubeEdge.v1.DelStatefulSetReq
	(*DelStatefulSetReply)(nil),                 // 157: oneKubeEdge.v1.DelStatefulSetReply
	(*ListPersistentVolumeReq)(nil),             // 158: oneKubeEdge.v1.ListPersistentVolumeReq
	(*ListPersistentVolumeReply)(nil),           // 159: oneKubeEdge.v1.ListPersistentVolumeReply
	(*ListPersistentVolumeClaimReq)(nil),        // 160: oneKubeEdge.v1.ListPersistentVolumeClaimReq
	(*ListPersistentVolumeClaimReply)(nil),      // 161: oneKubeEdge.v1.ListPersistentVolumeClaimReply
	(*GetExpiringSoonKubernetesTlsReq)(nil),     // 162: oneKubeEdge.v1.GetExpiringSoonKubernetesTlsReq
	(*GetExpiringSoonKubernetesTlsReply)(nil),   // 163: oneKubeEdge.v1.GetExpiringSoonKubernetesTlsReply
	(*GetPodMetricsReply_ContainerMetrics)(nil), // 164: oneKubeEdge.v1.GetPodMetricsReply.ContainerMetrics
	(*ListNameSpaceReply_NameSpace)(nil),        // 165: oneKubeEdge.v1.ListNameSpaceReply.NameSpace
	nil,                                         // 166: oneKubeEdge.v1.ConfigMap.DataEntry
	nil,                                         // 167: oneKubeEdge.v1.CreateConfigMapReq.DataEntry
	nil,                                         // 168: oneKubeEdge.v1.GetConfigMapReply.DataEntry
	nil,                                         // 169: oneKubeEdge.v1.UpdateConfigMapReq.DataEntry
	nil,                                         // 170: oneKubeEdge.v1.ObjectMeta.AnnotationsEntry
	nil,                                         // 171: oneKubeEdge.v1.ObjectMeta.LabelsEntry
	nil,                                         // 172: oneKubeEdge.v1.LabelSelector.MatchLabelsEntry
	nil,                                         // 173: oneKubeEdge.v1.PodSpec.NodeSelectorEntry
	nil,                                         // 174: oneKubeEdge.v1.Selector.MatchLabelsEntry
	nil,                                         // 175: oneKubeEdge.v1.HTTPGetAction.HeadersEntry
	nil,                                         // 176: oneKubeEdge.v1.FilterDeploymentReq.EnvsEntry
	nil,                                         // 177: oneKubeEdge.v1.FilterDeploymentReq.LabelsEntry
	(*FilterDeploymentReplyDeployment)(nil),     // 178: oneKubeEdge.v1.FilterDeploymentReply.deployment
	(*ListSecretReply_Secret)(nil),              // 179: oneKubeEdge.v1.ListSecretReply.Secret
	nil,                                         // 180: oneKubeEdge.v1.ListSecretReply.Secret.AnnotationsEntry
	nil,                                         // 181: oneKubeEdge.v1.ListSecretReply.Secret.LabelsEntry
	nil,                                         // 182: oneKubeEdge.v1.ListSecretReply.Secret.StringDataEntry
	nil,                                         // 183: oneKubeEdge.v1.ListSecretReply.Secret.DataEntry
	nil,                                         // 184: oneKubeEdge.v1.GetSecretReply.AnnotationsEntry
	nil,                                         // 185: oneKubeEdge.v1.GetSecretReply.LabelsEntry
	nil,                                         // 186: oneKubeEdge.v1.GetSecretReply.StringDataEntry
	nil,                                         // 187: oneKubeEdge.v1.GetSecretReply.DataEntry
	nil,                                         // 188: oneKubeEdge.v1.CreateTlsSecretReq.AnnotationsEntry
	nil,                                         // 189: oneKubeEdge.v1.CreateTlsSecretReq.LabelsEntry
	nil,                                         // 190: oneKubeEdge.v1.UpdateTlsSecretReq.AnnotationsEntry
	nil,                                         // 191: oneKubeEdge.v1.UpdateTlsSecretReq.LabelsEntry
	nil,                                         // 192: oneKubeEdge.v1.CreateOpaqueSecretReq.AnnotationsEntry
	nil,                                         // 193: oneKubeEdge.v1.CreateOpaqueSecretReq.LabelsEntry
	nil,                                         // 194: oneKubeEdge.v1.CreateOpaqueSecretReq.DataEntry
	nil,                                         // 195: oneKubeEdge.v1.UpdateOpaqueSecretReq.AnnotationsEntry
	nil,                                         // 196: oneKubeEdge.v1.UpdateOpaqueSecretReq.LabelsEntry
	nil,                                         // 197: oneKubeEdge.v1.UpdateOpaqueSecretReq.DataEntry
	nil,                                         // 198: oneKubeEdge.v1.CreateDockerConfigJsonSecretReq.AnnotationsEntry
	nil,                                         // 199: oneKubeEdge.v1.CreateDockerConfigJsonSecretReq.LabelsEntry
	nil,                                         // 200: oneKubeEdge.v1.UpdateDockerConfigJsonSecretReq.AnnotationsEntry
	nil,                                         // 201: oneKubeEdge.v1.UpdateDockerConfigJsonSecretReq.LabelsEntry
	nil,                                         // 202: oneKubeEdge.v1.CreateBasicAuthSecretReq.AnnotationsEntry
	nil,                                         // 203: oneKubeEdge.v1.CreateBasicAuthSecretReq.LabelsEntry
	nil,                                         // 204: oneKubeEdge.v1.UpdateBasicAuthSecretReq.AnnotationsEntry
	nil,                                         // 205: oneKubeEdge.v1.UpdateBasicAuthSecretReq.LabelsEntry
	nil,                                         // 206: oneKubeEdge.v1.CreateSshAuthSecretReq.AnnotationsEntry
	nil,                                         // 207: oneKubeEdge.v1.CreateSshAuthSecretReq.LabelsEntry
	nil,                                         // 208: oneKubeEdge.v1.UpdateSshAuthSecretReq.AnnotationsEntry
	nil,                                         // 209: oneKubeEdge.v1.UpdateSshAuthSecretReq.LabelsEntry
	(*ListNodeReply_Node)(nil),                  // 210: oneKubeEdge.v1.ListNodeReply.Node
	nil,                                         // 211: oneKubeEdge.v1.ListNodeReply.Node.LabelsEntry
	nil,                                         // 212: oneKubeEdge.v1.ListNodeReply.Node.AnnotationsEntry
	(*ListNodeReply_Node_Capacity)(nil),         // 213: oneKubeEdge.v1.ListNodeReply.Node.Capacity
	(*ListNodeReply_Node_Allocatable)(nil),      // 214: oneKubeEdge.v1.ListNodeReply.Node.Allocatable
	(*ListNodeReply_Node_AllocatablePercent)(nil), // 215: oneKubeEdge.v1.ListNodeReply.Node.AllocatablePercent
	nil,                                      // 216: oneKubeEdge.v1.GetNodeReply.LabelsEntry
	nil,                                      // 217: oneKubeEdge.v1.GetNodeReply.AnnotationsEntry
	(*GetNodeReply_Capacity)(nil),            // 218: oneKubeEdge.v1.GetNodeReply.Capacity
	(*GetNodeReply_Allocatable)(nil),         // 219: oneKubeEdge.v1.GetNodeReply.Allocatable
	(*GetNodeReply_AllocatablePercent)(nil),  // 220: oneKubeEdge.v1.GetNodeReply.AllocatablePercent
	nil,                                      // 221: oneKubeEdge.v1.GetPodReply.LabelsEntry
	nil,                                      // 222: oneKubeEdge.v1.GetPodReply.EnvsEntry
	(*GetPodReply_Container)(nil),            // 223: oneKubeEdge.v1.GetPodReply.Container
	(*ListPodReply_Pod)(nil),                 // 224: oneKubeEdge.v1.ListPodReply.Pod
	nil,                                      // 225: oneKubeEdge.v1.ListPodReply.Pod.LabelsEntry
	nil,                                      // 226: oneKubeEdge.v1.ListPodReply.Pod.EnvsEntry
	(*ListPodReply_Pod_Container)(nil),       // 227: oneKubeEdge.v1.ListPodReply.Pod.Container
	(*SearchPodReply_Pod)(nil),               // 228: oneKubeEdge.v1.SearchPodReply.Pod
	nil,                                      // 229: oneKubeEdge.v1.SearchPodReply.Pod.LabelsEntry
	nil,                                      // 230: oneKubeEdge.v1.SearchPodReply.Pod.EnvsEntry
	(*SearchPodReply_Pod_Container)(nil),     // 231: oneKubeEdge.v1.SearchPodReply.Pod.Container
	nil,                                      // 232: oneKubeEdge.v1.CreateServiceReq.SelectorEntry
	nil,                                      // 233: oneKubeEdge.v1.CreateServiceReq.AnnotationsEntry
	(*ListServiceReply_Service)(nil),         // 234: oneKubeEdge.v1.ListServiceReply.Service
	nil,                                      // 235: oneKubeEdge.v1.ListServiceReply.Service.AnnotationsEntry
	nil,                                      // 236: oneKubeEdge.v1.ListServiceReply.Service.LabelsEntry
	nil,                                      // 237: oneKubeEdge.v1.GetServiceReply.LabelsEntry
	nil,                                      // 238: oneKubeEdge.v1.GetServiceReply.AnnotationsEntry
	nil,                                      // 239: oneKubeEdge.v1.CreateIngressReq.AnnotationsEntry
	nil,                                      // 240: oneKubeEdge.v1.CreateIngressReq.LabelsEntry
	nil,                                      // 241: oneKubeEdge.v1.CreateIngressReq.ServiceEntry
	(*CreateIngressReq_Service)(nil),         // 242: oneKubeEdge.v1.CreateIngressReq.Service
	nil,                                      // 243: oneKubeEdge.v1.CreateIngressReq.Service.PathEntry
	(*CreateIngressReq_Service_Path)(nil),    // 244: oneKubeEdge.v1.CreateIngressReq.Service.Path
	nil,                                      // 245: oneKubeEdge.v1.UpdateIngressReq.AnnotationsEntry
	nil,                                      // 246: oneKubeEdge.v1.UpdateIngressReq.LabelsEntry
	nil,                                      // 247: oneKubeEdge.v1.UpdateIngressReq.ServiceEntry
	(*UpdateIngressReq_Service)(nil),         // 248: oneKubeEdge.v1.UpdateIngressReq.Service
	nil,                                      // 249: oneKubeEdge.v1.UpdateIngressReq.Service.PathEntry
	(*UpdateIngressReq_Service_Path)(nil),    // 250: oneKubeEdge.v1.UpdateIngressReq.Service.Path
	(*ListIngressReply_Ingress)(nil),         // 251: oneKubeEdge.v1.ListIngressReply.Ingress
	nil,                                      // 252: oneKubeEdge.v1.ListIngressReply.Ingress.AnnotationsEntry
	nil,                                      // 253: oneKubeEdge.v1.ListIngressReply.Ingress.LabelsEntry
	nil,                                      // 254: oneKubeEdge.v1.ListIngressReply.Ingress.ServiceEntry
	(*ListIngressReply_Ingress_Service)(nil), // 255: oneKubeEdge.v1.ListIngressReply.Ingress.Service
	nil,                                      // 256: oneKubeEdge.v1.ListIngressReply.Ingress.Service.PathEntry
	(*ListIngressReply_Ingress_Service_Path)(nil), // 257: oneKubeEdge.v1.ListIngressReply.Ingress.Service.Path
	nil,                                  // 258: oneKubeEdge.v1.GetIngressReply.AnnotationsEntry
	nil,                                  // 259: oneKubeEdge.v1.GetIngressReply.LabelsEntry
	nil,                                  // 260: oneKubeEdge.v1.GetIngressReply.ServiceEntry
	(*GetIngressReply_Service)(nil),      // 261: oneKubeEdge.v1.GetIngressReply.Service
	nil,                                  // 262: oneKubeEdge.v1.GetIngressReply.Service.PathEntry
	(*GetIngressReply_Service_Path)(nil), // 263: oneKubeEdge.v1.GetIngressReply.Service.Path
	(*ListPersistentVolumeReply_PersistentVolume)(nil), // 264: oneKubeEdge.v1.ListPersistentVolumeReply.PersistentVolume
	nil, // 265: oneKubeEdge.v1.ListPersistentVolumeReply.PersistentVolume.LabelsEntry
	nil, // 266: oneKubeEdge.v1.ListPersistentVolumeReply.PersistentVolume.AnnotationsEntry
	(*ListPersistentVolumeClaimReply_PersistentVolumeClaim)(nil), // 267: oneKubeEdge.v1.ListPersistentVolumeClaimReply.PersistentVolumeClaim
	nil, // 268: oneKubeEdge.v1.ListPersistentVolumeClaimReply.PersistentVolumeClaim.LabelsEntry
	nil, // 269: oneKubeEdge.v1.ListPersistentVolumeClaimReply.PersistentVolumeClaim.AnnotationsEntry
	(*GetExpiringSoonKubernetesTlsReply_FailedExpiringSoonKubernetesTls)(nil), // 270: oneKubeEdge.v1.GetExpiringSoonKubernetesTlsReply.FailedExpiringSoonKubernetesTls
	(*GetExpiringSoonKubernetesTlsReply_ExpiringSoonKubernetesTls)(nil),       // 271: oneKubeEdge.v1.GetExpiringSoonKubernetesTlsReply.ExpiringSoonKubernetesTls
}
var file_oneKubeEdge_v1_oneKubeEdge_proto_depIdxs = []int32{
	164, // 0: oneKubeEdge.v1.GetPodMetricsReply.podMetrics:type_name -> oneKubeEdge.v1.GetPodMetricsReply.ContainerMetrics
	165, // 1: oneKubeEdge.v1.ListNameSpaceReply.namespace:type_name -> oneKubeEdge.v1.ListNameSpaceReply.NameSpace
	166, // 2: oneKubeEdge.v1.ConfigMap.data:type_name -> oneKubeEdge.v1.ConfigMap.DataEntry
	167, // 3: oneKubeEdge.v1.CreateConfigMapReq.data:type_name -> oneKubeEdge.v1.CreateConfigMapReq.DataEntry
	13,  // 4: oneKubeEdge.v1.ListConfigMapReply.configMap:type_name -> oneKubeEdge.v1.ConfigMap
	168, // 5: oneKubeEdge.v1.GetConfigMapReply.data:type_name -> oneKubeEdge.v1.GetConfigMapReply.DataEntry
	169, // 6: oneKubeEdge.v1.UpdateConfigMapReq.data:type_name -> oneKubeEdge.v1.UpdateConfigMapReq.DataEntry
	25,  // 7: oneKubeEdge.v1.Deployment.objectMeta:type_name -> oneKubeEdge.v1.ObjectMeta
	26,  // 8: oneKubeEdge.v1.Deployment.spec:type_name -> oneKubeEdge.v1.DeploymentSpec
	54,  // 9: oneKubeEdge.v1.Deployment.status:type_name -> oneKubeEdge.v1.DeploymentStatus
	170, // 10: oneKubeEdge.v1.ObjectMeta.annotations:type_name -> oneKubeEdge.v1.ObjectMeta.AnnotationsEntry
	171, // 11: oneKubeEdge.v1.ObjectMeta.labels:type_name -> oneKubeEdge.v1.ObjectMeta.LabelsEntry
	28,  // 12: oneKubeEdge.v1.DeploymentSpec.selector:type_name -> oneKubeEdge.v1.LabelSelector
	27,  // 13: oneKubeEdge.v1.DeploymentSpec.template:type_name -> oneKubeEdge.v1.PodTemplateSpec
	29,  // 14: oneKubeEdge.v1.DeploymentSpec.strategy:type_name -> oneKubeEdge.v1.DeploymentStrategy
	25,  // 15: oneKubeEdge.v1.PodTemplateSpec.objectMeta:type_name -> oneKubeEdge.v1.ObjectMeta
	30,  // 16: oneKubeEdge.v1.PodTemplateSpec.spec:type_name -> oneKubeEdge.v1.PodSpec
	172, // 17: oneKubeEdge.v1.LabelSelector.matchLabels:type_name -> oneKubeEdge.v1.LabelSelector.MatchLabelsEntry
	31,  // 18: oneKubeEdge.v1.PodSpec.volumes:type_name -> oneKubeEdge.v1.Volume
	34,  // 19: oneKubeEdge.v1.PodSpec.initContainers:type_name -> oneKubeEdge.v1.Container
	34,  // 20: oneKubeEdge.v1.PodSpec.containers:type_name -> oneKubeEdge.v1.Container
	32,  // 21: oneKubeEdge.v1.PodSpec.ephemeralContainers:type_name -> oneKubeEdge.v1.EphemeralContainer
	173, // 22: oneKubeEdge.v1.PodSpec.nodeSelector:type_name -> oneKubeEdge.v1.PodSpec.NodeSelectorEntry
	36,  // 23: oneKubeEdge.v1.PodSpec.securityContext:type_name -> oneKubeEdge.v1.PodSecurityContext
	38,  // 24: oneKubeEdge.v1.PodSpec.imagePullSecrets:type_name -> oneKubeEdge.v1.ImagePullSecret
	39,  // 25: oneKubeEdge.v1.PodSpec.tolerations:type_name -> oneKubeEdge.v1.Toleration
	41,  // 26: oneKubeEdge.v1.PodSpec.hostAliases:type_name -> oneKubeEdge.v1.HostAlias
	40,  // 27: oneKubeEdge.v1.PodSpec.dnsConfig:type_name -> oneKubeEdge.v1.PodDNSConfig
	174, // 28: oneKubeEdge.v1.Selector.matchLabels:type_name -> oneKubeEdge.v1.Selector.MatchLabelsEntry
	35,  // 29: oneKubeEdge.v1.Container.envs:type_name -> oneKubeEdge.v1.Env
	50,  // 30: oneKubeEdge.v1.Container.EnvFroms:type_name -> oneKubeEdge.v1.EnvFromSource
	42,  // 31: oneKubeEdge.v1.Container.livenessProbe:type_name -> oneKubeEdge.v1.Probe
	42,  // 32: oneKubeEdge.v1.Container.readinessProbe:type_name -> oneKubeEdge.v1.Probe
	42,  // 33: oneKubeEdge.v1.Container.startupProbe:type_name -> oneKubeEdge.v1.Probe
	48,  // 34: oneKubeEdge.v1.Container.lifecycle:type_name -> oneKubeEdge.v1.Lifecycle
	51,  // 35: oneKubeEdge.v1.Container.resource:type_name -> oneKubeEdge.v1.Resource
	37,  // 36: oneKubeEdge.v1.PodSecurityContext.Sysctls:type_name -> oneKubeEdge.v1.PodSecurityContextSysctl
	43,  // 37: oneKubeEdge.v1.Probe.probeHandler:type_name -> oneKubeEdge.v1.ProbeHandler
	44,  // 38: oneKubeEdge.v1.ProbeHandler.exec:type_name -> oneKubeEdge.v1.ExecAction
	45,  // 39: oneKubeEdge.v1.ProbeHandler.httpGet:type_name -> oneKubeEdge.v1.HTTPGetAction
	46,  // 40: oneKubeEdge.v1.ProbeHandler.tcpSocket:type_name -> oneKubeEdge.v1.TCPSocketAction
	47,  // 41: oneKubeEdge.v1.ProbeHandler.grpc:type_name -> oneKubeEdge.v1.GRPCAction
	175, // 42: oneKubeEdge.v1.HTTPGetAction.headers:type_name -> oneKubeEdge.v1.HTTPGetAction.HeadersEntry
	49,  // 43: oneKubeEdge.v1.Lifecycle.postStart:type_name -> oneKubeEdge.v1.LifecycleHandler
	49,  // 44: oneKubeEdge.v1.Lifecycle.preStop:type_name -> oneKubeEdge.v1.LifecycleHandler
	44,  // 45: oneKubeEdge.v1.LifecycleHandler.exec:type_name -> oneKubeEdge.v1.ExecAction
	45,  // 46: oneKubeEdge.v1.LifecycleHandler.httpGet:type_name -> oneKubeEdge.v1.HTTPGetAction
	46,  // 47: oneKubeEdge.v1.LifecycleHandler.tcpSocket:type_name -> oneKubeEdge.v1.TCPSocketAction
	52,  // 48: oneKubeEdge.v1.Resource.limit:type_name -> oneKubeEdge.v1.ResourceLimit
	53,  // 49: oneKubeEdge.v1.Resource.request:type_name -> oneKubeEdge.v1.ResourceRequests
	24,  // 50: oneKubeEdge.v1.CreateDeploymentReq.deployment:type_name -> oneKubeEdge.v1.Deployment
	24,  // 51: oneKubeEdge.v1.ListDeploymentReply.deployments:type_name -> oneKubeEdge.v1.Deployment
	24,  // 52: oneKubeEdge.v1.ListDeploymentStatusReply.deployments:type_name -> oneKubeEdge.v1.Deployment
	24,  // 53: oneKubeEdge.v1.GetDeploymentReply.deployment:type_name -> oneKubeEdge.v1.Deployment
	24,  // 54: oneKubeEdge.v1.UpdateDeploymentReq.deployment:type_name -> oneKubeEdge.v1.Deployment
	176, // 55: oneKubeEdge.v1.FilterDeploymentReq.envs:type_name -> oneKubeEdge.v1.FilterDeploymentReq.EnvsEntry
	177, // 56: oneKubeEdge.v1.FilterDeploymentReq.labels:type_name -> oneKubeEdge.v1.FilterDeploymentReq.LabelsEntry
	178, // 57: oneKubeEdge.v1.FilterDeploymentReply.deployments:type_name -> oneKubeEdge.v1.FilterDeploymentReply.deployment
	179, // 58: oneKubeEdge.v1.ListSecretReply.secrets:type_name -> oneKubeEdge.v1.ListSecretReply.Secret
	184, // 59: oneKubeEdge.v1.GetSecretReply.annotations:type_name -> oneKubeEdge.v1.GetSecretReply.AnnotationsEntry
	185, // 60: oneKubeEdge.v1.GetSecretReply.labels:type_name -> oneKubeEdge.v1.GetSecretReply.LabelsEntry
	186, // 61: oneKubeEdge.v1.GetSecretReply.stringData:type_name -> oneKubeEdge.v1.GetSecretReply.StringDataEntry
	187, // 62: oneKubeEdge.v1.GetSecretReply.data:type_name -> oneKubeEdge.v1.GetSecretReply.DataEntry
	188, // 63: oneKubeEdge.v1.CreateTlsSecretReq.annotations:type_name -> oneKubeEdge.v1.CreateTlsSecretReq.AnnotationsEntry
	189, // 64: oneKubeEdge.v1.CreateTlsSecretReq.labels:type_name -> oneKubeEdge.v1.CreateTlsSecretReq.LabelsEntry
	190, // 65: oneKubeEdge.v1.UpdateTlsSecretReq.annotations:type_name -> oneKubeEdge.v1.UpdateTlsSecretReq.AnnotationsEntry
	191, // 66: oneKubeEdge.v1.UpdateTlsSecretReq.labels:type_name -> oneKubeEdge.v1.UpdateTlsSecretReq.LabelsEntry
	192, // 67: oneKubeEdge.v1.CreateOpaqueSecretReq.annotations:type_name -> oneKubeEdge.v1.CreateOpaqueSecretReq.AnnotationsEntry
	193, // 68: oneKubeEdge.v1.CreateOpaqueSecretReq.labels:type_name -> oneKubeEdge.v1.CreateOpaqueSecretReq.LabelsEntry
	194, // 69: oneKubeEdge.v1.CreateOpaqueSecretReq.data:type_name -> oneKubeEdge.v1.CreateOpaqueSecretReq.DataEntry
	195, // 70: oneKubeEdge.v1.UpdateOpaqueSecretReq.annotations:type_name -> oneKubeEdge.v1.UpdateOpaqueSecretReq.AnnotationsEntry
	196, // 71: oneKubeEdge.v1.UpdateOpaqueSecretReq.labels:type_name -> oneKubeEdge.v1.UpdateOpaqueSecretReq.LabelsEntry
	197, // 72: oneKubeEdge.v1.UpdateOpaqueSecretReq.data:type_name -> oneKubeEdge.v1.UpdateOpaqueSecretReq.DataEntry
	198, // 73: oneKubeEdge.v1.CreateDockerConfigJsonSecretReq.annotations:type_name -> oneKubeEdge.v1.CreateDockerConfigJsonSecretReq.AnnotationsEntry
	199, // 74: oneKubeEdge.v1.CreateDockerConfigJsonSecretReq.labels:type_name -> oneKubeEdge.v1.CreateDockerConfigJsonSecretReq.LabelsEntry
	200, // 75: oneKubeEdge.v1.UpdateDockerConfigJsonSecretReq.annotations:type_name -> oneKubeEdge.v1.UpdateDockerConfigJsonSecretReq.AnnotationsEntry
	201, // 76: oneKubeEdge.v1.UpdateDockerConfigJsonSecretReq.labels:type_name -> oneKubeEdge.v1.UpdateDockerConfigJsonSecretReq.LabelsEntry
	202, // 77: oneKubeEdge.v1.CreateBasicAuthSecretReq.annotations:type_name -> oneKubeEdge.v1.CreateBasicAuthSecretReq.AnnotationsEntry
	203, // 78: oneKubeEdge.v1.CreateBasicAuthSecretReq.labels:type_name -> oneKubeEdge.v1.CreateBasicAuthSecretReq.LabelsEntry
	204, // 79: oneKubeEdge.v1.UpdateBasicAuthSecretReq.annotations:type_name -> oneKubeEdge.v1.UpdateBasicAuthSecretReq.AnnotationsEntry
	205, // 80: oneKubeEdge.v1.UpdateBasicAuthSecretReq.labels:type_name -> oneKubeEdge.v1.UpdateBasicAuthSecretReq.LabelsEntry
	206, // 81: oneKubeEdge.v1.CreateSshAuthSecretReq.annotations:type_name -> oneKubeEdge.v1.CreateSshAuthSecretReq.AnnotationsEntry
	207, // 82: oneKubeEdge.v1.CreateSshAuthSecretReq.labels:type_name -> oneKubeEdge.v1.CreateSshAuthSecretReq.LabelsEntry
	208, // 83: oneKubeEdge.v1.UpdateSshAuthSecretReq.annotations:type_name -> oneKubeEdge.v1.UpdateSshAuthSecretReq.AnnotationsEntry
	209, // 84: oneKubeEdge.v1.UpdateSshAuthSecretReq.labels:type_name -> oneKubeEdge.v1.UpdateSshAuthSecretReq.LabelsEntry
	210, // 85: oneKubeEdge.v1.ListNodeReply.node:type_name -> oneKubeEdge.v1.ListNodeReply.Node
	216, // 86: oneKubeEdge.v1.GetNodeReply.labels:type_name -> oneKubeEdge.v1.GetNodeReply.LabelsEntry
	217, // 87: oneKubeEdge.v1.GetNodeReply.annotations:type_name -> oneKubeEdge.v1.GetNodeReply.AnnotationsEntry
	218, // 88: oneKubeEdge.v1.GetNodeReply.capacity:type_name -> oneKubeEdge.v1.GetNodeReply.Capacity
	219, // 89: oneKubeEdge.v1.GetNodeReply.allocatable:type_name -> oneKubeEdge.v1.GetNodeReply.Allocatable
	220, // 90: oneKubeEdge.v1.GetNodeReply.allocatablePercent:type_name -> oneKubeEdge.v1.GetNodeReply.AllocatablePercent
	221, // 91: oneKubeEdge.v1.GetPodReply.labels:type_name -> oneKubeEdge.v1.GetPodReply.LabelsEntry
	222, // 92: oneKubeEdge.v1.GetPodReply.envs:type_name -> oneKubeEdge.v1.GetPodReply.EnvsEntry
	223, // 93: oneKubeEdge.v1.GetPodReply.container:type_name -> oneKubeEdge.v1.GetPodReply.Container
	224, // 94: oneKubeEdge.v1.ListPodReply.pod:type_name -> oneKubeEdge.v1.ListPodReply.Pod
	228, // 95: oneKubeEdge.v1.SearchPodReply.pod:type_name -> oneKubeEdge.v1.SearchPodReply.Pod
	232, // 96: oneKubeEdge.v1.CreateServiceReq.selector:type_name -> oneKubeEdge.v1.CreateServiceReq.SelectorEntry
	123, // 97: oneKubeEdge.v1.CreateServiceReq.ports:type_name -> oneKubeEdge.v1.ServicePort
	233, // 98: oneKubeEdge.v1.CreateServiceReq.annotations:type_name -> oneKubeEdge.v1.CreateServiceReq.AnnotationsEntry
	234, // 99: oneKubeEdge.v1.ListServiceReply.service:type_name -> oneKubeEdge.v1.ListServiceReply.Service
	237, // 100: oneKubeEdge.v1.GetServiceReply.labels:type_name -> oneKubeEdge.v1.GetServiceReply.LabelsEntry
	238, // 101: oneKubeEdge.v1.GetServiceReply.annotations:type_name -> oneKubeEdge.v1.GetServiceReply.AnnotationsEntry
	123, // 102: oneKubeEdge.v1.GetServiceReply.ports:type_name -> oneKubeEdge.v1.ServicePort
	239, // 103: oneKubeEdge.v1.CreateIngressReq.annotations:type_name -> oneKubeEdge.v1.CreateIngressReq.AnnotationsEntry
	240, // 104: oneKubeEdge.v1.CreateIngressReq.labels:type_name -> oneKubeEdge.v1.CreateIngressReq.LabelsEntry
	241, // 105: oneKubeEdge.v1.CreateIngressReq.service:type_name -> oneKubeEdge.v1.CreateIngressReq.ServiceEntry
	245, // 106: oneKubeEdge.v1.UpdateIngressReq.annotations:type_name -> oneKubeEdge.v1.UpdateIngressReq.AnnotationsEntry
	246, // 107: oneKubeEdge.v1.UpdateIngressReq.labels:type_name -> oneKubeEdge.v1.UpdateIngressReq.LabelsEntry
	247, // 108: oneKubeEdge.v1.UpdateIngressReq.service:type_name -> oneKubeEdge.v1.UpdateIngressReq.ServiceEntry
	251, // 109: oneKubeEdge.v1.ListIngressReply.ingress:type_name -> oneKubeEdge.v1.ListIngressReply.Ingress
	258, // 110: oneKubeEdge.v1.GetIngressReply.annotations:type_name -> oneKubeEdge.v1.GetIngressReply.AnnotationsEntry
	259, // 111: oneKubeEdge.v1.GetIngressReply.labels:type_name -> oneKubeEdge.v1.GetIngressReply.LabelsEntry
	260, // 112: oneKubeEdge.v1.GetIngressReply.service:type_name -> oneKubeEdge.v1.GetIngressReply.ServiceEntry
	264, // 113: oneKubeEdge.v1.ListPersistentVolumeReply.persistentVolume:type_name -> oneKubeEdge.v1.ListPersistentVolumeReply.PersistentVolume
	267, // 114: oneKubeEdge.v1.ListPersistentVolumeClaimReply.persistentVolumeClaim:type_name -> oneKubeEdge.v1.ListPersistentVolumeClaimReply.PersistentVolumeClaim
	271, // 115: oneKubeEdge.v1.GetExpiringSoonKubernetesTlsReply.expiringSoonKubernetesTls:type_name -> oneKubeEdge.v1.GetExpiringSoonKubernetesTlsReply.ExpiringSoonKubernetesTls
	270, // 116: oneKubeEdge.v1.GetExpiringSoonKubernetesTlsReply.failedExpiringSoonKubernetesTls:type_name -> oneKubeEdge.v1.GetExpiringSoonKubernetesTlsReply.FailedExpiringSoonKubernetesTls
	180, // 117: oneKubeEdge.v1.ListSecretReply.Secret.annotations:type_name -> oneKubeEdge.v1.ListSecretReply.Secret.AnnotationsEntry
	181, // 118: oneKubeEdge.v1.ListSecretReply.Secret.labels:type_name -> oneKubeEdge.v1.ListSecretReply.Secret.LabelsEntry
	182, // 119: oneKubeEdge.v1.ListSecretReply.Secret.stringData:type_name -> oneKubeEdge.v1.ListSecretReply.Secret.StringDataEntry
	183, // 120: oneKubeEdge.v1.ListSecretReply.Secret.data:type_name -> oneKubeEdge.v1.ListSecretReply.Secret.DataEntry
	211, // 121: oneKubeEdge.v1.ListNodeReply.Node.labels:type_name -> oneKubeEdge.v1.ListNodeReply.Node.LabelsEntry
	212, // 122: oneKubeEdge.v1.ListNodeReply.Node.annotations:type_name -> oneKubeEdge.v1.ListNodeReply.Node.AnnotationsEntry
	213, // 123: oneKubeEdge.v1.ListNodeReply.Node.capacity:type_name -> oneKubeEdge.v1.ListNodeReply.Node.Capacity
	214, // 124: oneKubeEdge.v1.ListNodeReply.Node.allocatable:type_name -> oneKubeEdge.v1.ListNodeReply.Node.Allocatable
	215, // 125: oneKubeEdge.v1.ListNodeReply.Node.allocatablePercent:type_name -> oneKubeEdge.v1.ListNodeReply.Node.AllocatablePercent
	225, // 126: oneKubeEdge.v1.ListPodReply.Pod.labels:type_name -> oneKubeEdge.v1.ListPodReply.Pod.LabelsEntry
	226, // 127: oneKubeEdge.v1.ListPodReply.Pod.envs:type_name -> oneKubeEdge.v1.ListPodReply.Pod.EnvsEntry
	227, // 128: oneKubeEdge.v1.ListPodReply.Pod.container:type_name -> oneKubeEdge.v1.ListPodReply.Pod.Container
	229, // 129: oneKubeEdge.v1.SearchPodReply.Pod.labels:type_name -> oneKubeEdge.v1.SearchPodReply.Pod.LabelsEntry
	230, // 130: oneKubeEdge.v1.SearchPodReply.Pod.envs:type_name -> oneKubeEdge.v1.SearchPodReply.Pod.EnvsEntry
	231, // 131: oneKubeEdge.v1.SearchPodReply.Pod.container:type_name -> oneKubeEdge.v1.SearchPodReply.Pod.Container
	235, // 132: oneKubeEdge.v1.ListServiceReply.Service.annotations:type_name -> oneKubeEdge.v1.ListServiceReply.Service.AnnotationsEntry
	236, // 133: oneKubeEdge.v1.ListServiceReply.Service.labels:type_name -> oneKubeEdge.v1.ListServiceReply.Service.LabelsEntry
	123, // 134: oneKubeEdge.v1.ListServiceReply.Service.ports:type_name -> oneKubeEdge.v1.ServicePort
	242, // 135: oneKubeEdge.v1.CreateIngressReq.ServiceEntry.value:type_name -> oneKubeEdge.v1.CreateIngressReq.Service
	243, // 136: oneKubeEdge.v1.CreateIngressReq.Service.path:type_name -> oneKubeEdge.v1.CreateIngressReq.Service.PathEntry
	244, // 137: oneKubeEdge.v1.CreateIngressReq.Service.PathEntry.value:type_name -> oneKubeEdge.v1.CreateIngressReq.Service.Path
	248, // 138: oneKubeEdge.v1.UpdateIngressReq.ServiceEntry.value:type_name -> oneKubeEdge.v1.UpdateIngressReq.Service
	249, // 139: oneKubeEdge.v1.UpdateIngressReq.Service.path:type_name -> oneKubeEdge.v1.UpdateIngressReq.Service.PathEntry
	250, // 140: oneKubeEdge.v1.UpdateIngressReq.Service.PathEntry.value:type_name -> oneKubeEdge.v1.UpdateIngressReq.Service.Path
	252, // 141: oneKubeEdge.v1.ListIngressReply.Ingress.annotations:type_name -> oneKubeEdge.v1.ListIngressReply.Ingress.AnnotationsEntry
	253, // 142: oneKubeEdge.v1.ListIngressReply.Ingress.labels:type_name -> oneKubeEdge.v1.ListIngressReply.Ingress.LabelsEntry
	254, // 143: oneKubeEdge.v1.ListIngressReply.Ingress.service:type_name -> oneKubeEdge.v1.ListIngressReply.Ingress.ServiceEntry
	255, // 144: oneKubeEdge.v1.ListIngressReply.Ingress.ServiceEntry.value:type_name -> oneKubeEdge.v1.ListIngressReply.Ingress.Service
	256, // 145: oneKubeEdge.v1.ListIngressReply.Ingress.Service.path:type_name -> oneKubeEdge.v1.ListIngressReply.Ingress.Service.PathEntry
	257, // 146: oneKubeEdge.v1.ListIngressReply.Ingress.Service.PathEntry.value:type_name -> oneKubeEdge.v1.ListIngressReply.Ingress.Service.Path
	261, // 147: oneKubeEdge.v1.GetIngressReply.ServiceEntry.value:type_name -> oneKubeEdge.v1.GetIngressReply.Service
	262, // 148: oneKubeEdge.v1.GetIngressReply.Service.path:type_name -> oneKubeEdge.v1.GetIngressReply.Service.PathEntry
	263, // 149: oneKubeEdge.v1.GetIngressReply.Service.PathEntry.value:type_name -> oneKubeEdge.v1.GetIngressReply.Service.Path
	265, // 150: oneKubeEdge.v1.ListPersistentVolumeReply.PersistentVolume.labels:type_name -> oneKubeEdge.v1.ListPersistentVolumeReply.PersistentVolume.LabelsEntry
	266, // 151: oneKubeEdge.v1.ListPersistentVolumeReply.PersistentVolume.annotations:type_name -> oneKubeEdge.v1.ListPersistentVolumeReply.PersistentVolume.AnnotationsEntry
	268, // 152: oneKubeEdge.v1.ListPersistentVolumeClaimReply.PersistentVolumeClaim.labels:type_name -> oneKubeEdge.v1.ListPersistentVolumeClaimReply.PersistentVolumeClaim.LabelsEntry
	269, // 153: oneKubeEdge.v1.ListPersistentVolumeClaimReply.PersistentVolumeClaim.annotations:type_name -> oneKubeEdge.v1.ListPersistentVolumeClaimReply.PersistentVolumeClaim.AnnotationsEntry
	1,   // 154: oneKubeEdge.v1.oneKubeEdge.GetClusterSummary:input_type -> oneKubeEdge.v1.GetClusterSummaryReq
	7,   // 155: oneKubeEdge.v1.oneKubeEdge.CreateNameSpace:input_type -> oneKubeEdge.v1.CreateNameSpaceReq
	9,   // 156: oneKubeEdge.v1.oneKubeEdge.ListNameSpace:input_type -> oneKubeEdge.v1.ListNameSpaceReq
	11,  // 157: oneKubeEdge.v1.oneKubeEdge.DelNameSpace:input_type -> oneKubeEdge.v1.DelNameSpaceReq
	14,  // 158: oneKubeEdge.v1.oneKubeEdge.CreateConfigMap:input_type -> oneKubeEdge.v1.CreateConfigMapReq
	16,  // 159: oneKubeEdge.v1.oneKubeEdge.ListConfigMap:input_type -> oneKubeEdge.v1.ListConfigMapReq
	18,  // 160: oneKubeEdge.v1.oneKubeEdge.GetConfigMap:input_type -> oneKubeEdge.v1.GetConfigMapReq
	20,  // 161: oneKubeEdge.v1.oneKubeEdge.DelConfigMap:input_type -> oneKubeEdge.v1.DelConfigMapReq
	22,  // 162: oneKubeEdge.v1.oneKubeEdge.UpdateConfigMap:input_type -> oneKubeEdge.v1.UpdateConfigMapReq
	73,  // 163: oneKubeEdge.v1.oneKubeEdge.ListSecret:input_type -> oneKubeEdge.v1.ListSecretReq
	75,  // 164: oneKubeEdge.v1.oneKubeEdge.GetSecret:input_type -> oneKubeEdge.v1.GetSecretReq
	77,  // 165: oneKubeEdge.v1.oneKubeEdge.DelSecret:input_type -> oneKubeEdge.v1.DelSecretReq
	162, // 166: oneKubeEdge.v1.oneKubeEdge.GetExpiringSoonKubernetesTls:input_type -> oneKubeEdge.v1.GetExpiringSoonKubernetesTlsReq
	79,  // 167: oneKubeEdge.v1.oneKubeEdge.CreateTlsSecret:input_type -> oneKubeEdge.v1.CreateTlsSecretReq
	83,  // 168: oneKubeEdge.v1.oneKubeEdge.CreateOpaqueSecret:input_type -> oneKubeEdge.v1.CreateOpaqueSecretReq
	87,  // 169: oneKubeEdge.v1.oneKubeEdge.CreateDockerConfigJsonSecret:input_type -> oneKubeEdge.v1.CreateDockerConfigJsonSecretReq
	91,  // 170: oneKubeEdge.v1.oneKubeEdge.CreateBasicAuthSecret:input_type -> oneKubeEdge.v1.CreateBasicAuthSecretReq
	95,  // 171: oneKubeEdge.v1.oneKubeEdge.CreateSshAuthSecret:input_type -> oneKubeEdge.v1.CreateSshAuthSecretReq
	81,  // 172: oneKubeEdge.v1.oneKubeEdge.UpdateTlsSecret:input_type -> oneKubeEdge.v1.UpdateTlsSecretReq
	85,  // 173: oneKubeEdge.v1.oneKubeEdge.UpdateOpaqueSecret:input_type -> oneKubeEdge.v1.UpdateOpaqueSecretReq
	89,  // 174: oneKubeEdge.v1.oneKubeEdge.UpdateDockerConfigJsonSecret:input_type -> oneKubeEdge.v1.UpdateDockerConfigJsonSecretReq
	93,  // 175: oneKubeEdge.v1.oneKubeEdge.UpdateBasicAuthSecret:input_type -> oneKubeEdge.v1.UpdateBasicAuthSecretReq
	97,  // 176: oneKubeEdge.v1.oneKubeEdge.UpdateSshAuthSecret:input_type -> oneKubeEdge.v1.UpdateSshAuthSecretReq
	55,  // 177: oneKubeEdge.v1.oneKubeEdge.CreateDeployment:input_type -> oneKubeEdge.v1.CreateDeploymentReq
	57,  // 178: oneKubeEdge.v1.oneKubeEdge.ListDeployment:input_type -> oneKubeEdge.v1.ListDeploymentReq
	61,  // 179: oneKubeEdge.v1.oneKubeEdge.GetDeployment:input_type -> oneKubeEdge.v1.GetDeploymentReq
	63,  // 180: oneKubeEdge.v1.oneKubeEdge.DelDeployment:input_type -> oneKubeEdge.v1.DelDeploymentReq
	59,  // 181: oneKubeEdge.v1.oneKubeEdge.ListDeploymentStatus:input_type -> oneKubeEdge.v1.ListDeploymentStatusReq
	65,  // 182: oneKubeEdge.v1.oneKubeEdge.UpdateDeployment:input_type -> oneKubeEdge.v1.UpdateDeploymentReq
	69,  // 183: oneKubeEdge.v1.oneKubeEdge.UpdateDeploymentReplaceSet:input_type -> oneKubeEdge.v1.UpdateDeploymentReplaceSetReq
	67,  // 184: oneKubeEdge.v1.oneKubeEdge.ListRolloutHis:input_type -> oneKubeEdge.v1.ListRolloutHisReq
	71,  // 185: oneKubeEdge.v1.oneKubeEdge.FilterDeployment:input_type -> oneKubeEdge.v1.FilterDeploymentReq
	99,  // 186: oneKubeEdge.v1.oneKubeEdge.CreateJob:input_type -> oneKubeEdge.v1.CreateJobReq
	101, // 187: oneKubeEdge.v1.oneKubeEdge.ListJob:input_type -> oneKubeEdge.v1.ListJobReq
	103, // 188: oneKubeEdge.v1.oneKubeEdge.GetJob:input_type -> oneKubeEdge.v1.GetJobReq
	105, // 189: oneKubeEdge.v1.oneKubeEdge.DelJob:input_type -> oneKubeEdge.v1.DelJobReq
	3,   // 190: oneKubeEdge.v1.oneKubeEdge.GetNodeMetrics:input_type -> oneKubeEdge.v1.GetNodeMetricsReq
	5,   // 191: oneKubeEdge.v1.oneKubeEdge.GetPodMetrics:input_type -> oneKubeEdge.v1.GetPodMetricsReq
	109, // 192: oneKubeEdge.v1.oneKubeEdge.GetNode:input_type -> oneKubeEdge.v1.GetNodeReq
	107, // 193: oneKubeEdge.v1.oneKubeEdge.ListNode:input_type -> oneKubeEdge.v1.ListNodeReq
	113, // 194: oneKubeEdge.v1.oneKubeEdge.ListPod:input_type -> oneKubeEdge.v1.ListPodReq
	111, // 195: oneKubeEdge.v1.oneKubeEdge.GetPod:input_type -> oneKubeEdge.v1.GetPodReq
	115, // 196: oneKubeEdge.v1.oneKubeEdge.SearchPod:input_type -> oneKubeEdge.v1.SearchPodReq
	117, // 197: oneKubeEdge.v1.oneKubeEdge.DelPod:input_type -> oneKubeEdge.v1.DelPodReq
	119, // 198: oneKubeEdge.v1.oneKubeEdge.EvictPod:input_type -> oneKubeEdge.v1.EvictPodReq
	121, // 199: oneKubeEdge.v1.oneKubeEdge.DelEvictPod:input_type -> oneKubeEdge.v1.DelEvictPodReq
	124, // 200: oneKubeEdge.v1.oneKubeEdge.CreateService:input_type -> oneKubeEdge.v1.CreateServiceReq
	126, // 201: oneKubeEdge.v1.oneKubeEdge.ListService:input_type -> oneKubeEdge.v1.ListServiceReq
	128, // 202: oneKubeEdge.v1.oneKubeEdge.GetService:input_type -> oneKubeEdge.v1.GetServiceReq
	130, // 203: oneKubeEdge.v1.oneKubeEdge.DelService:input_type -> oneKubeEdge.v1.DelServiceReq
	132, // 204: oneKubeEdge.v1.oneKubeEdge.CreateIngress:input_type -> oneKubeEdge.v1.CreateIngressReq
	134, // 205: oneKubeEdge.v1.oneKubeEdge.UpdateIngress:input_type -> oneKubeEdge.v1.UpdateIngressReq
	136, // 206: oneKubeEdge.v1.oneKubeEdge.ListIngress:input_type -> oneKubeEdge.v1.ListIngressReq
	138, // 207: oneKubeEdge.v1.oneKubeEdge.GetIngress:input_type -> oneKubeEdge.v1.GetIngressReq
	140, // 208: oneKubeEdge.v1.oneKubeEdge.DelIngress:input_type -> oneKubeEdge.v1.DelIngressReq
	142, // 209: oneKubeEdge.v1.oneKubeEdge.CreateLoadBalancer:input_type -> oneKubeEdge.v1.CreateLoadBalancerReq
	144, // 210: oneKubeEdge.v1.oneKubeEdge.ListLoadBalancer:input_type -> oneKubeEdge.v1.ListLoadBalancerReq
	146, // 211: oneKubeEdge.v1.oneKubeEdge.GetLoadBalancer:input_type -> oneKubeEdge.v1.GetLoadBalancerReq
	148, // 212: oneKubeEdge.v1.oneKubeEdge.DelLoadBalancer:input_type -> oneKubeEdge.v1.DelLoadBalancerReq
	150, // 213: oneKubeEdge.v1.oneKubeEdge.CreateStatefulSet:input_type -> oneKubeEdge.v1.CreateStatefulSetReq
	152, // 214: oneKubeEdge.v1.oneKubeEdge.ListStatefulSet:input_type -> oneKubeEdge.v1.ListStatefulSetReq
	154, // 215: oneKubeEdge.v1.oneKubeEdge.GetStatefulSet:input_type -> oneKubeEdge.v1.GetStatefulSetReq
	156, // 216: oneKubeEdge.v1.oneKubeEdge.DelStatefulSet:input_type -> oneKubeEdge.v1.DelStatefulSetReq
	158, // 217: oneKubeEdge.v1.oneKubeEdge.ListPersistentVolume:input_type -> oneKubeEdge.v1.ListPersistentVolumeReq
	160, // 218: oneKubeEdge.v1.oneKubeEdge.ListPersistentVolumeClaim:input_type -> oneKubeEdge.v1.ListPersistentVolumeClaimReq
	2,   // 219: oneKubeEdge.v1.oneKubeEdge.GetClusterSummary:output_type -> oneKubeEdge.v1.GetClusterSummaryReply
	8,   // 220: oneKubeEdge.v1.oneKubeEdge.CreateNameSpace:output_type -> oneKubeEdge.v1.CreateNameSpaceReply
	10,  // 221: oneKubeEdge.v1.oneKubeEdge.ListNameSpace:output_type -> oneKubeEdge.v1.ListNameSpaceReply
	12,  // 222: oneKubeEdge.v1.oneKubeEdge.DelNameSpace:output_type -> oneKubeEdge.v1.DelNameSpaceReply
	15,  // 223: oneKubeEdge.v1.oneKubeEdge.CreateConfigMap:output_type -> oneKubeEdge.v1.CreateConfigMapReply
	17,  // 224: oneKubeEdge.v1.oneKubeEdge.ListConfigMap:output_type -> oneKubeEdge.v1.ListConfigMapReply
	19,  // 225: oneKubeEdge.v1.oneKubeEdge.GetConfigMap:output_type -> oneKubeEdge.v1.GetConfigMapReply
	21,  // 226: oneKubeEdge.v1.oneKubeEdge.DelConfigMap:output_type -> oneKubeEdge.v1.DelConfigMapReply
	23,  // 227: oneKubeEdge.v1.oneKubeEdge.UpdateConfigMap:output_type -> oneKubeEdge.v1.UpdateConfigMapReply
	74,  // 228: oneKubeEdge.v1.oneKubeEdge.ListSecret:output_type -> oneKubeEdge.v1.ListSecretReply
	76,  // 229: oneKubeEdge.v1.oneKubeEdge.GetSecret:output_type -> oneKubeEdge.v1.GetSecretReply
	78,  // 230: oneKubeEdge.v1.oneKubeEdge.DelSecret:output_type -> oneKubeEdge.v1.DelSecretReply
	163, // 231: oneKubeEdge.v1.oneKubeEdge.GetExpiringSoonKubernetesTls:output_type -> oneKubeEdge.v1.GetExpiringSoonKubernetesTlsReply
	80,  // 232: oneKubeEdge.v1.oneKubeEdge.CreateTlsSecret:output_type -> oneKubeEdge.v1.CreateTlsSecretReply
	84,  // 233: oneKubeEdge.v1.oneKubeEdge.CreateOpaqueSecret:output_type -> oneKubeEdge.v1.CreateOpaqueSecretReply
	88,  // 234: oneKubeEdge.v1.oneKubeEdge.CreateDockerConfigJsonSecret:output_type -> oneKubeEdge.v1.CreateDockerConfigJsonSecretReply
	92,  // 235: oneKubeEdge.v1.oneKubeEdge.CreateBasicAuthSecret:output_type -> oneKubeEdge.v1.CreateBasicAuthSecretReply
	96,  // 236: oneKubeEdge.v1.oneKubeEdge.CreateSshAuthSecret:output_type -> oneKubeEdge.v1.CreateSshAuthSecretReply
	82,  // 237: oneKubeEdge.v1.oneKubeEdge.UpdateTlsSecret:output_type -> oneKubeEdge.v1.UpdateTlsSecretReply
	86,  // 238: oneKubeEdge.v1.oneKubeEdge.UpdateOpaqueSecret:output_type -> oneKubeEdge.v1.UpdateOpaqueSecretReply
	90,  // 239: oneKubeEdge.v1.oneKubeEdge.UpdateDockerConfigJsonSecret:output_type -> oneKubeEdge.v1.UpdateDockerConfigJsonSecretReply
	94,  // 240: oneKubeEdge.v1.oneKubeEdge.UpdateBasicAuthSecret:output_type -> oneKubeEdge.v1.UpdateBasicAuthSecretReply
	98,  // 241: oneKubeEdge.v1.oneKubeEdge.UpdateSshAuthSecret:output_type -> oneKubeEdge.v1.UpdateSshAuthSecretReply
	56,  // 242: oneKubeEdge.v1.oneKubeEdge.CreateDeployment:output_type -> oneKubeEdge.v1.CreateDeploymentReply
	58,  // 243: oneKubeEdge.v1.oneKubeEdge.ListDeployment:output_type -> oneKubeEdge.v1.ListDeploymentReply
	62,  // 244: oneKubeEdge.v1.oneKubeEdge.GetDeployment:output_type -> oneKubeEdge.v1.GetDeploymentReply
	64,  // 245: oneKubeEdge.v1.oneKubeEdge.DelDeployment:output_type -> oneKubeEdge.v1.DelDeploymentReply
	60,  // 246: oneKubeEdge.v1.oneKubeEdge.ListDeploymentStatus:output_type -> oneKubeEdge.v1.ListDeploymentStatusReply
	66,  // 247: oneKubeEdge.v1.oneKubeEdge.UpdateDeployment:output_type -> oneKubeEdge.v1.UpdateDeploymentReply
	70,  // 248: oneKubeEdge.v1.oneKubeEdge.UpdateDeploymentReplaceSet:output_type -> oneKubeEdge.v1.UpdateDeploymentReplaceSetReply
	68,  // 249: oneKubeEdge.v1.oneKubeEdge.ListRolloutHis:output_type -> oneKubeEdge.v1.ListRolloutHisReply
	72,  // 250: oneKubeEdge.v1.oneKubeEdge.FilterDeployment:output_type -> oneKubeEdge.v1.FilterDeploymentReply
	100, // 251: oneKubeEdge.v1.oneKubeEdge.CreateJob:output_type -> oneKubeEdge.v1.CreateJobReply
	102, // 252: oneKubeEdge.v1.oneKubeEdge.ListJob:output_type -> oneKubeEdge.v1.ListJobReply
	104, // 253: oneKubeEdge.v1.oneKubeEdge.GetJob:output_type -> oneKubeEdge.v1.GetJobReply
	106, // 254: oneKubeEdge.v1.oneKubeEdge.DelJob:output_type -> oneKubeEdge.v1.DelJobReply
	4,   // 255: oneKubeEdge.v1.oneKubeEdge.GetNodeMetrics:output_type -> oneKubeEdge.v1.GetNodeMetricsReply
	6,   // 256: oneKubeEdge.v1.oneKubeEdge.GetPodMetrics:output_type -> oneKubeEdge.v1.GetPodMetricsReply
	110, // 257: oneKubeEdge.v1.oneKubeEdge.GetNode:output_type -> oneKubeEdge.v1.GetNodeReply
	108, // 258: oneKubeEdge.v1.oneKubeEdge.ListNode:output_type -> oneKubeEdge.v1.ListNodeReply
	114, // 259: oneKubeEdge.v1.oneKubeEdge.ListPod:output_type -> oneKubeEdge.v1.ListPodReply
	112, // 260: oneKubeEdge.v1.oneKubeEdge.GetPod:output_type -> oneKubeEdge.v1.GetPodReply
	116, // 261: oneKubeEdge.v1.oneKubeEdge.SearchPod:output_type -> oneKubeEdge.v1.SearchPodReply
	118, // 262: oneKubeEdge.v1.oneKubeEdge.DelPod:output_type -> oneKubeEdge.v1.DelPodReply
	120, // 263: oneKubeEdge.v1.oneKubeEdge.EvictPod:output_type -> oneKubeEdge.v1.EvictPodReply
	122, // 264: oneKubeEdge.v1.oneKubeEdge.DelEvictPod:output_type -> oneKubeEdge.v1.DelEvictPodReply
	125, // 265: oneKubeEdge.v1.oneKubeEdge.CreateService:output_type -> oneKubeEdge.v1.CreateServiceReply
	127, // 266: oneKubeEdge.v1.oneKubeEdge.ListService:output_type -> oneKubeEdge.v1.ListServiceReply
	129, // 267: oneKubeEdge.v1.oneKubeEdge.GetService:output_type -> oneKubeEdge.v1.GetServiceReply
	131, // 268: oneKubeEdge.v1.oneKubeEdge.DelService:output_type -> oneKubeEdge.v1.DelServiceReply
	133, // 269: oneKubeEdge.v1.oneKubeEdge.CreateIngress:output_type -> oneKubeEdge.v1.CreateIngressReply
	135, // 270: oneKubeEdge.v1.oneKubeEdge.UpdateIngress:output_type -> oneKubeEdge.v1.UpdateIngressReply
	137, // 271: oneKubeEdge.v1.oneKubeEdge.ListIngress:output_type -> oneKubeEdge.v1.ListIngressReply
	139, // 272: oneKubeEdge.v1.oneKubeEdge.GetIngress:output_type -> oneKubeEdge.v1.GetIngressReply
	141, // 273: oneKubeEdge.v1.oneKubeEdge.DelIngress:output_type -> oneKubeEdge.v1.DelIngressReply
	143, // 274: oneKubeEdge.v1.oneKubeEdge.CreateLoadBalancer:output_type -> oneKubeEdge.v1.CreateLoadBalancerReply
	145, // 275: oneKubeEdge.v1.oneKubeEdge.ListLoadBalancer:output_type -> oneKubeEdge.v1.ListLoadBalancerReply
	147, // 276: oneKubeEdge.v1.oneKubeEdge.GetLoadBalancer:output_type -> oneKubeEdge.v1.GetLoadBalancerReply
	149, // 277: oneKubeEdge.v1.oneKubeEdge.DelLoadBalancer:output_type -> oneKubeEdge.v1.DelLoadBalancerReply
	151, // 278: oneKubeEdge.v1.oneKubeEdge.CreateStatefulSet:output_type -> oneKubeEdge.v1.CreateStatefulSetReply
	153, // 279: oneKubeEdge.v1.oneKubeEdge.ListStatefulSet:output_type -> oneKubeEdge.v1.ListStatefulSetReply
	155, // 280: oneKubeEdge.v1.oneKubeEdge.GetStatefulSet:output_type -> oneKubeEdge.v1.GetStatefulSetReply
	157, // 281: oneKubeEdge.v1.oneKubeEdge.DelStatefulSet:output_type -> oneKubeEdge.v1.DelStatefulSetReply
	159, // 282: oneKubeEdge.v1.oneKubeEdge.ListPersistentVolume:output_type -> oneKubeEdge.v1.ListPersistentVolumeReply
	161, // 283: oneKubeEdge.v1.oneKubeEdge.ListPersistentVolumeClaim:output_type -> oneKubeEdge.v1.ListPersistentVolumeClaimReply
	219, // [219:284] is the sub-list for method output_type
	154, // [154:219] is the sub-list for method input_type
	154, // [154:154] is the sub-list for extension type_name
	154, // [154:154] is the sub-list for extension extendee
	0,   // [0:154] is the sub-list for field type_name
}

func init() { file_oneKubeEdge_v1_oneKubeEdge_proto_init() }
func file_oneKubeEdge_v1_oneKubeEdge_proto_init() {
	if File_oneKubeEdge_v1_oneKubeEdge_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetClusterSummaryReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetClusterSummaryReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNodeMetricsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNodeMetricsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPodMetricsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPodMetricsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateNameSpaceReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateNameSpaceReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListNameSpaceReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListNameSpaceReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelNameSpaceReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelNameSpaceReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigMap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateConfigMapReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateConfigMapReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListConfigMapReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListConfigMapReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetConfigMapReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetConfigMapReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelConfigMapReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelConfigMapReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateConfigMapReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateConfigMapReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Deployment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObjectMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeploymentSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PodTemplateSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LabelSelector); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeploymentStrategy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PodSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Volume); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EphemeralContainer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Selector); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Container); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Env); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PodSecurityContext); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PodSecurityContextSysctl); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImagePullSecret); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Toleration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PodDNSConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostAlias); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Probe); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProbeHandler); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HTTPGetAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TCPSocketAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GRPCAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Lifecycle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LifecycleHandler); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnvFromSource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Resource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceLimit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceRequests); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeploymentStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDeploymentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDeploymentReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDeploymentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDeploymentReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDeploymentStatusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDeploymentStatusReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDeploymentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDeploymentReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelDeploymentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelDeploymentReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDeploymentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDeploymentReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRolloutHisReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRolloutHisReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDeploymentReplaceSetReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDeploymentReplaceSetReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilterDeploymentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilterDeploymentReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSecretReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSecretReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSecretReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSecretReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelSecretReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelSecretReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTlsSecretReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTlsSecretReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTlsSecretReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTlsSecretReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOpaqueSecretReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOpaqueSecretReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOpaqueSecretReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOpaqueSecretReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDockerConfigJsonSecretReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDockerConfigJsonSecretReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDockerConfigJsonSecretReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDockerConfigJsonSecretReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateBasicAuthSecretReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateBasicAuthSecretReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateBasicAuthSecretReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateBasicAuthSecretReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSshAuthSecretReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[95].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSshAuthSecretReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[96].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSshAuthSecretReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[97].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSshAuthSecretReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[98].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateJobReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[99].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateJobReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[100].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListJobReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[101].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListJobReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[102].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetJobReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[103].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetJobReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[104].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelJobReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[105].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelJobReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[106].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListNodeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[107].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListNodeReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[108].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNodeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[109].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNodeReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[110].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPodReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[111].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPodReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[112].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPodReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[113].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPodReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[114].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchPodReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[115].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchPodReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[116].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelPodReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[117].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelPodReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[118].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EvictPodReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[119].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EvictPodReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[120].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelEvictPodReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[121].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelEvictPodReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[122].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServicePort); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[123].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateServiceReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[124].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateServiceReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[125].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListServiceReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[126].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListServiceReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[127].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServiceReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[128].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServiceReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[129].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelServiceReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[130].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelServiceReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[131].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateIngressReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[132].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateIngressReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[133].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateIngressReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[134].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateIngressReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[135].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListIngressReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[136].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListIngressReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[137].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetIngressReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[138].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetIngressReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[139].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelIngressReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[140].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelIngressReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[141].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateLoadBalancerReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[142].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateLoadBalancerReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[143].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListLoadBalancerReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[144].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListLoadBalancerReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[145].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLoadBalancerReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[146].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLoadBalancerReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[147].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelLoadBalancerReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[148].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelLoadBalancerReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[149].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateStatefulSetReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[150].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateStatefulSetReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[151].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListStatefulSetReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[152].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListStatefulSetReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[153].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStatefulSetReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[154].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStatefulSetReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[155].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelStatefulSetReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[156].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelStatefulSetReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[157].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPersistentVolumeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[158].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPersistentVolumeReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[159].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPersistentVolumeClaimReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[160].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPersistentVolumeClaimReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[161].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetExpiringSoonKubernetesTlsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[162].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetExpiringSoonKubernetesTlsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[163].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPodMetricsReply_ContainerMetrics); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[164].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListNameSpaceReply_NameSpace); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[177].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilterDeploymentReplyDeployment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[178].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSecretReply_Secret); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[209].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListNodeReply_Node); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[212].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListNodeReply_Node_Capacity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[213].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListNodeReply_Node_Allocatable); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[214].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListNodeReply_Node_AllocatablePercent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[217].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNodeReply_Capacity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[218].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNodeReply_Allocatable); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[219].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNodeReply_AllocatablePercent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[222].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPodReply_Container); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[223].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPodReply_Pod); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[226].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPodReply_Pod_Container); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[227].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchPodReply_Pod); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[230].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchPodReply_Pod_Container); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[233].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListServiceReply_Service); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[241].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateIngressReq_Service); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[243].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateIngressReq_Service_Path); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[247].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateIngressReq_Service); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[249].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateIngressReq_Service_Path); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[250].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListIngressReply_Ingress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[254].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListIngressReply_Ingress_Service); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[256].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListIngressReply_Ingress_Service_Path); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[260].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetIngressReply_Service); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[262].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetIngressReply_Service_Path); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[263].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPersistentVolumeReply_PersistentVolume); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[266].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPersistentVolumeClaimReply_PersistentVolumeClaim); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[269].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetExpiringSoonKubernetesTlsReply_FailedExpiringSoonKubernetesTls); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes[270].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetExpiringSoonKubernetesTlsReply_ExpiringSoonKubernetesTls); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_oneKubeEdge_v1_oneKubeEdge_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   271,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_oneKubeEdge_v1_oneKubeEdge_proto_goTypes,
		DependencyIndexes: file_oneKubeEdge_v1_oneKubeEdge_proto_depIdxs,
		EnumInfos:         file_oneKubeEdge_v1_oneKubeEdge_proto_enumTypes,
		MessageInfos:      file_oneKubeEdge_v1_oneKubeEdge_proto_msgTypes,
	}.Build()
	File_oneKubeEdge_v1_oneKubeEdge_proto = out.File
	file_oneKubeEdge_v1_oneKubeEdge_proto_rawDesc = nil
	file_oneKubeEdge_v1_oneKubeEdge_proto_goTypes = nil
	file_oneKubeEdge_v1_oneKubeEdge_proto_depIdxs = nil
}
